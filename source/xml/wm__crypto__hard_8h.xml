<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="wm__crypto__hard_8h" kind="file" language="C++">
    <compoundname>wm_crypto_hard.h</compoundname>
    <includes refid="wm__type__def_8h" local="yes">wm_type_def.h</includes>
    <includes local="yes">cryptoConfig.h</includes>
    <includes local="yes">digest.h</includes>
    <includes local="yes">pstm.h</includes>
    <includes local="yes">symmetric.h</includes>
    <includes local="yes">cryptolib.h</includes>
    <includes local="yes">cryptoApi.h</includes>
    <incdepgraph>
      <node id="322">
        <label>wm_type_def.h</label>
        <link refid="wm__type__def_8h"/>
      </node>
      <node id="328">
        <label>cryptoApi.h</label>
      </node>
      <node id="327">
        <label>cryptolib.h</label>
      </node>
      <node id="321">
        <label>Include/Platform/wm_crypto_hard.h</label>
        <link refid="wm__crypto__hard_8h"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
      </node>
      <node id="325">
        <label>pstm.h</label>
      </node>
      <node id="326">
        <label>symmetric.h</label>
      </node>
      <node id="324">
        <label>digest.h</label>
      </node>
      <node id="323">
        <label>cryptoConfig.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structps_crc_context__t" prot="public">psCrcContext_t</innerclass>
    <innerclass refid="structhsha1__state" prot="public">hsha1_state</innerclass>
    <innerclass refid="structhmd5__state" prot="public">hmd5_state</innerclass>
    <innerclass refid="unionhs_digest_context__t" prot="public">hsDigestContext_t</innerclass>
    <innerclass refid="structhstm__int" prot="public">hstm_int</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wm__crypto__hard_8h_1ac6afabdc09a49a433ee19d8a9486056d" prot="public" static="no">
        <name>min</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((a) &lt; (b)) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="24" column="10" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" prot="public" static="no">
        <name>HR_CRYPTO_BASE_ADDR</name>
        <initializer>0x40003200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The base address of the registers of encryption/decryption module. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="28" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1ae7de8bb04e21b3aae528c1dffb67af75" prot="public" static="no">
        <name>HR_CRYPTO_SRC_ADDR</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the source text address register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="30" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1ace30d0e43886f2c7cfbb19d8b4844230" prot="public" static="no">
        <name>HR_CRYPTO_DEST_ADDR</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the encrypted/decrypted text address register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="32" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a9c29b313e027cfddbfb9c23e1e83c8a1" prot="public" static="no">
        <name>HR_CRYPTO_SEC_CFG</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the configuration register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="34" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a235b50fdd332ce725f3b989576ac24a8" prot="public" static="no">
        <name>HR_CRYPTO_SEC_CTRL</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x0C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the control register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="36" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a9b63f50079074fb47069a77580ef3279" prot="public" static="no">
        <name>HR_CRYPTO_KEY0</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the key0 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="38" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1afeec8bce72ea17dac9877d0f11dd4c66" prot="public" static="no">
        <name>HR_CRYPTO_KEY1</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x14)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the key1 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="40" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1aab9b21c7fc55a8ec894398c2351ccc28" prot="public" static="no">
        <name>HR_CRYPTO_KEY2</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the key2 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="42" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1ac8f660c69032d5b9c1ba95b88307f3c1" prot="public" static="no">
        <name>HR_CRYPTO_KEY3</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x1C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the key3 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="44" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1abe1259cd6463b3d2d0c03f200edfc236" prot="public" static="no">
        <name>HR_CRYPTO_KEY4</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the key4 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="46" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a1b42e56e65c12368f13274db03aa603d" prot="public" static="no">
        <name>HR_CRYPTO_KEY5</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the key5 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="48" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1ad36030f292ed43bad04243f2c0d814dc" prot="public" static="no">
        <name>HR_CRYPTO_IV0</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x28)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the IV0 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="51" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1af292ea1a75372726cc49ed7ea0208d10" prot="public" static="no">
        <name>HR_CRYPTO_IV1</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the IV1 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="53" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a84842cdfa8aea5f149dc9dcd1381529b" prot="public" static="no">
        <name>HR_CRYPTO_SEC_STS</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the encrypted/decrypted status register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="56" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a773806a7e770307e3842cc2b8094b6e8" prot="public" static="no">
        <name>HR_CRYPTO_SHA1_DIGEST0</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x34)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the SHA1/MD5 digest0 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="59" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a49bd7ee93964ac90d793accc19b0f368" prot="public" static="no">
        <name>HR_CRYPTO_SHA1_DIGEST1</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x38)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the SHA1/MD5 digest1 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="61" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a51f2f77d196063ba3c84d45444ff3baa" prot="public" static="no">
        <name>HR_CRYPTO_SHA1_DIGEST2</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x3C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the SHA1/MD5 digest2 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="63" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1aa49c395566ce5c847c47da5431d4536e" prot="public" static="no">
        <name>HR_CRYPTO_SHA1_DIGEST3</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the SHA1/MD5 digest3 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="65" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a11ccd771ea30fda90ac3d33a62e443fc" prot="public" static="no">
        <name>HR_CRYPTO_SHA1_DIGEST4</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x44)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the SHA1 digest4 and CRC in/output register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="67" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a24d85cb821c1c4d31ced8e25c269ddfd" prot="public" static="no">
        <name>HR_CRYPTO_RNG_RESULT</name>
        <initializer>(<ref refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" kindref="member">HR_CRYPTO_BASE_ADDR</ref> + 0x48)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the RNG RESULT register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="69" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a4296a8c91504a6441a9a1eba986dd807" prot="public" static="no">
        <name>HR_CRYPTO_CRC_KEY</name>
        <initializer><ref refid="wm__crypto__hard_8h_1a11ccd771ea30fda90ac3d33a62e443fc" kindref="member">HR_CRYPTO_SHA1_DIGEST4</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the CRC in register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="73" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a032295ce7ae2083260a9419eacde1ef7" prot="public" static="no">
        <name>HR_CRYPTO_CRC_RESULT</name>
        <initializer><ref refid="wm__crypto__hard_8h_1a11ccd771ea30fda90ac3d33a62e443fc" kindref="member">HR_CRYPTO_SHA1_DIGEST4</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The address of the CRC output register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="75" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a54dc05d08ee4eb5e85eb5305f607497c" prot="public" static="no">
        <name>ERR_CRY_OK</name>
        <initializer>0</initializer>
        <briefdescription>
<para>No error, everything OK. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="77" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1aa26fc6554da458bd012638a7020b00b6" prot="public" static="no">
        <name>ERR_FAILURE</name>
        <initializer>-1    /* failure */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="78" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a7dd9689361538a2af8d50a9e080e39b9" prot="public" static="no">
        <name>ERR_ARG_FAIL</name>
        <initializer>-6	/* Failure due to bad function param */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="79" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a7a47c9f176f63c30f33a3163f3f79ebb" prot="public" static="no">
        <name>OUTPUT_REFLECT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="82" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__crypto__hard_8h_1a886d5096ae7566886e763b51194078ee" prot="public" static="no">
        <name>INPUT_REFLECT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="83" column="9" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557d" prot="public" static="no" strong="no">
        <type></type>
        <name>__CRYPTO_METHOD</name>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da714cceb87e22470e634f8219891d7b13" prot="public">
          <name>CRYPTO_METHOD_RSV</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da1bcff65451472b933c30596128336775" prot="public">
          <name>CRYPTO_METHOD_RC4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da83124d080d896d7e5635ab62ce3f04f4" prot="public">
          <name>CRYPTO_METHOD_SHA1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da944f86c650a8a2b6388f470a02a27dd5" prot="public">
          <name>CRYPTO_METHOD_AES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557dadd503ea0569b93eafe9a3156185ddb8d" prot="public">
          <name>CRYPTO_METHOD_DES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557dadff60a212f880119e68c5138f49fd459" prot="public">
          <name>CRYPTO_METHOD_3DES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da40d6f8b7f2c8c5ecc25e2e5defda4963" prot="public">
          <name>CRYPTO_METHOD_CRC</name>
          <briefdescription>
<para>CRC. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557daf8df1efe84234a46c64184cb6177045f" prot="public">
          <name>CRYPTO_METHOD_MD5</name>
          <briefdescription>
<para>MD5. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="86" column="1" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="85" bodyend="95"/>
      </memberdef>
      <memberdef kind="enum" id="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513" prot="public" static="no" strong="no">
        <type></type>
        <name>__CRYPTO_WAY</name>
        <enumvalue id="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513a6faf0ef7f39830908cb83cd1e79c9f69" prot="public">
          <name>CRYPTO_WAY_ENCRYPT</name>
          <initializer>=0</initializer>
          <briefdescription>
<para>Encryption. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513a84e2bed4c5f57c01e85cc2782fe66248" prot="public">
          <name>CRYPTO_WAY_DECRYPT</name>
          <briefdescription>
<para>Decryption. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The enum of the encryption/decryption way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="101" column="1" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="enum" id="wm__crypto__hard_8h_1a794cfa5c8dfecaf970a185eeac54f6f7" prot="public" static="no" strong="no">
        <type></type>
        <name>__CRYPTO_RNG_SWITCH</name>
        <enumvalue id="wm__crypto__hard_8h_1a794cfa5c8dfecaf970a185eeac54f6f7a16b1e2d1a238d334b0d274c20ad5ed7e" prot="public">
          <name>CRYPTO_RNG_SWITCH_16</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a794cfa5c8dfecaf970a185eeac54f6f7ae6ac1abf79016fed7796b562e707b8fc" prot="public">
          <name>CRYPTO_RNG_SWITCH_32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="107" column="1" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="enum" id="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507" prot="public" static="no" strong="no">
        <type></type>
        <name>__CRYPTO_MODE</name>
        <enumvalue id="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507af3d1c05bffa2e1c070c8296d0a2b6d52" prot="public">
          <name>CRYPTO_MODE_ECB</name>
          <initializer>=0</initializer>
          <briefdescription>
<para>ECB. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507a23aad56f7363a1c64af840628b308db8" prot="public">
          <name>CRYPTO_MODE_CBC</name>
          <briefdescription>
<para>CBC. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507ae1338405e70820638e147f16ded0cd6c" prot="public">
          <name>CRYPTO_MODE_CTR</name>
          <briefdescription>
<para>CTR, only for AES. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The enum of the encryption/decryption mode, only for (aes des 3des). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="116" column="1" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ced" prot="public" static="no" strong="no">
        <type></type>
        <name>__CRYPTO_CRC_TYPE</name>
        <enumvalue id="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda98156a2c8f53e0ebe02cd1cb55af20c1" prot="public">
          <name>CRYPTO_CRC_TYPE_8</name>
          <initializer>=0</initializer>
          <briefdescription>
<para>8 bits CRC </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda2c96d8891299beb83c9e7308d6fabbaf" prot="public">
          <name>CRYPTO_CRC_TYPE_16_MODBUS</name>
          <briefdescription>
<para>16 bits Modbus CRC </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda6835c9be12604f6a9c9f03fcfb8c293f" prot="public">
          <name>CRYPTO_CRC_TYPE_16_CCITT</name>
          <briefdescription>
<para>16 bits CCITT CRC </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7cedab8128b746f2dd9341e9c0185dac0cb14" prot="public">
          <name>CRYPTO_CRC_TYPE_32</name>
          <briefdescription>
<para>32 bits CRC </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The enum of the CRC type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="125" column="1" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="124" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wm__crypto__hard_8h_1acc463d954eb1884f0a0b1fa052f01fea" prot="public" static="no">
        <type>enum <ref refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557d" kindref="member">__CRYPTO_METHOD</ref></type>
        <definition>typedef enum __CRYPTO_METHOD CRYPTO_METHOD</definition>
        <argsstring></argsstring>
        <name>CRYPTO_METHOD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" prot="public" static="no">
        <type>enum <ref refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513" kindref="member">__CRYPTO_WAY</ref></type>
        <definition>typedef enum __CRYPTO_WAY CRYPTO_WAY</definition>
        <argsstring></argsstring>
        <name>CRYPTO_WAY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The enum of the encryption/decryption way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__crypto__hard_8h_1a20942d63439d673d964e0715441f622b" prot="public" static="no">
        <type>enum __CRYPTO_RNG_SWITCH</type>
        <definition>typedef enum __CRYPTO_RNG_SWITCH CRYPTO_RNG_SWITCH</definition>
        <argsstring></argsstring>
        <name>CRYPTO_RNG_SWITCH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" prot="public" static="no">
        <type>enum <ref refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507" kindref="member">__CRYPTO_MODE</ref></type>
        <definition>typedef enum __CRYPTO_MODE CRYPTO_MODE</definition>
        <argsstring></argsstring>
        <name>CRYPTO_MODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The enum of the encryption/decryption mode, only for (aes des 3des). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__crypto__hard_8h_1a97e4243cd5dccfacff322815de9c3979" prot="public" static="no">
        <type>enum <ref refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ced" kindref="member">__CRYPTO_CRC_TYPE</ref></type>
        <definition>typedef enum __CRYPTO_CRC_TYPE CRYPTO_CRC_TYPE</definition>
        <argsstring></argsstring>
        <name>CRYPTO_CRC_TYPE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The enum of the CRC type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__crypto__hard_8h_1af2ce20128cbd670b7943c0aac404d956" prot="public" static="no">
        <type>u32</type>
        <definition>typedef u32 hstm_digit</definition>
        <argsstring></argsstring>
        <name>hstm_digit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="169" column="1" bodyfile="Include/Platform/wm_crypto_hard.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wm__crypto__hard_8h_1a6bf3efe4f7f4a3327df5d56f12e9d7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_random_stop</definition>
        <argsstring>(void)</argsstring>
        <name>tls_crypto_random_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to stop random produce. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a0f6ee550f82543fff93340dfd35bf8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_random_init</definition>
        <argsstring>(u32 seed, CRYPTO_RNG_SWITCH rng_switch)</argsstring>
        <name>tls_crypto_random_init</name>
        <param>
          <type>u32</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>CRYPTO_RNG_SWITCH</type>
          <declname>rng_switch</declname>
        </param>
        <briefdescription>
<para>This function initializes random digit seed and BIT number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>The random digit seed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rng_switch</parametername>
</parameternamelist>
<parameterdescription>
<para>The random digit bit number. (0: 16bit 1:32bit) <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1ac17c37f6cfe009da60d5c52b4565b330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_random_bytes</definition>
        <argsstring>(unsigned char *out, u32 len)</argsstring>
        <name>tls_crypto_random_bytes</name>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>This function is used to get random digit content. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the output of random digit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The random digit bit number will output.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a7782139c14742da99817df7f11aa8c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_rc4_init</definition>
        <argsstring>(psCipherContext_t *ctx, const unsigned char *key, u32 keylen)</argsstring>
        <name>tls_crypto_rc4_init</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>keylen</declname>
        </param>
        <briefdescription>
<para>This function initializes a RC4 encryption algorithm, <linebreak/>
 i.e. fills the psCipherContext_t structure pointed to by ctx with necessary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of key.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The first parameter ctx must be a structure which is allocated externally. And all of Context parameters in the initializing methods should be allocated externally too. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a4eeb899a8b844f68a0eb168bbd77ae57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_rc4</definition>
        <argsstring>(psCipherContext_t *ctx, unsigned char *in, unsigned char *out, u32 len)</argsstring>
        <name>tls_crypto_rc4</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>This function encrypts a variable length data stream according to RC4. The RC4 algorithm it generates a &quot;keystream&quot; which is simply XORed with the plaintext to produce the ciphertext stream. Decryption is exactly the same as encryption. This function also decrypts a variable length data stream according to RC4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input plaintext data stream(or the encrypted text data stream) of variable length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the resulting ciphertext data stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the plaintext data stream in octets.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a8168be83a67fdd7a5f632ef3a3a96f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_aes_init</definition>
        <argsstring>(psCipherContext_t *ctx, const unsigned char *IV, const unsigned char *key, u32 keylen, CRYPTO_MODE cbc)</argsstring>
        <name>tls_crypto_aes_init</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>IV</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref></type>
          <declname>cbc</declname>
        </param>
        <briefdescription>
<para>This function initializes a AES encryption algorithm, i.e. fills the psCipherContext_t structure pointed to by ctx with necessary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">IV</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Initialization Vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbc</parametername>
</parameternamelist>
<parameterdescription>
<para>the encryption mode, AES supports ECB/CBC/CTR modes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1aeea658bcd40c74f27dfe4c9803ee77ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_aes_encrypt_decrypt</definition>
        <argsstring>(psCipherContext_t *ctx, unsigned char *in, unsigned char *out, u32 len, CRYPTO_WAY dec)</argsstring>
        <name>tls_crypto_aes_encrypt_decrypt</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref></type>
          <declname>dec</declname>
        </param>
        <briefdescription>
<para>This function encrypts or decrypts a variable length data stream according to AES. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input plaintext data stream(or the encrypted text data stream) of variable length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the resulting ciphertext data stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the plaintext data stream in octets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dec</parametername>
</parameternamelist>
<parameterdescription>
<para>The cryption way which indicates encryption or decryption.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a5a0255087ca3e3b27c36ad62676af039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_3des_init</definition>
        <argsstring>(psCipherContext_t *ctx, const unsigned char *IV, const unsigned char *key, u32 keylen, CRYPTO_MODE cbc)</argsstring>
        <name>tls_crypto_3des_init</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>IV</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref></type>
          <declname>cbc</declname>
        </param>
        <briefdescription>
<para>This function initializes a 3DES encryption algorithm, i.e. fills the psCipherContext_t structure pointed to by ctx with necessary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">IV</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Initialization Vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbc</parametername>
</parameternamelist>
<parameterdescription>
<para>the encryption mode, 3DES supports ECB/CBC modes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a73ac4e7ce28b4e0e14b3bd29fb735648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_3des_encrypt_decrypt</definition>
        <argsstring>(psCipherContext_t *ctx, unsigned char *in, unsigned char *out, u32 len, CRYPTO_WAY dec)</argsstring>
        <name>tls_crypto_3des_encrypt_decrypt</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref></type>
          <declname>dec</declname>
        </param>
        <briefdescription>
<para>This function encrypts or decrypts a variable length data stream according to 3DES. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input plaintext data stream(or the encrypted text data stream) of variable length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the resulting ciphertext data stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the plaintext data stream in octets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dec</parametername>
</parameternamelist>
<parameterdescription>
<para>The cryption way which indicates encryption or decryption.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1ae34a679750c001e0d7978ee8ce36fc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_des_init</definition>
        <argsstring>(psCipherContext_t *ctx, const unsigned char *IV, const unsigned char *key, u32 keylen, CRYPTO_MODE cbc)</argsstring>
        <name>tls_crypto_des_init</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>IV</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref></type>
          <declname>cbc</declname>
        </param>
        <briefdescription>
<para>This function initializes a DES encryption algorithm, i.e. fills the psCipherContext_t structure pointed to by ctx with necessary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">IV</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Initialization Vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbc</parametername>
</parameternamelist>
<parameterdescription>
<para>the encryption mode, DES supports ECB/CBC modes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a7640dcbc3790e1c218ddf78910fd888d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_des_encrypt_decrypt</definition>
        <argsstring>(psCipherContext_t *ctx, unsigned char *in, unsigned char *out, u32 len, CRYPTO_WAY dec)</argsstring>
        <name>tls_crypto_des_encrypt_decrypt</name>
        <param>
          <type>psCipherContext_t *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref></type>
          <declname>dec</declname>
        </param>
        <briefdescription>
<para>This function encrypts or decrypts a variable length data stream according to DES. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Cipher Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input plaintext data stream(or the encrypted text data stream) of variable length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the resulting ciphertext data stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the plaintext data stream in octets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dec</parametername>
</parameternamelist>
<parameterdescription>
<para>The cryption way which indicates encryption or decryption.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a4fc9954c609148fbe7e090c850615448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_crc_init</definition>
        <argsstring>(psCrcContext_t *ctx, u32 key, CRYPTO_CRC_TYPE crc_type, u8 mode)</argsstring>
        <name>tls_crypto_crc_init</name>
        <param>
          <type><ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="wm__crypto__hard_8h_1a97e4243cd5dccfacff322815de9c3979" kindref="member">CRYPTO_CRC_TYPE</ref></type>
          <declname>crc_type</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>This function initializes a CRC algorithm, i.e. fills the <ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref> structure pointed to by ctx with necessary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CRC Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialization key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crc_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The CRC type, supports CRC8/CRC16 MODBUS/CRC16 CCITT/CRC32 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Set input or outpu reflect. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dec</parametername>
</parameternamelist>
<parameterdescription>
<para>The cryption way which indicates encryption or decryption. see OUTPUT_REFLECT see INPUT_REFLECT</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a4f6c0038b1f0674417ba6a5d8370d6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_crc_update</definition>
        <argsstring>(psCrcContext_t *ctx, unsigned char *in, u32 len)</argsstring>
        <name>tls_crypto_crc_update</name>
        <param>
          <type><ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>This function updates the CRC value with a variable length bytes. This function may be called as many times as necessary, so the message may be processed in blocks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CRC Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable length bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The bytes &apos;s length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1acd1a098a43800b5190bc8292284b9611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_crc_final</definition>
        <argsstring>(psCrcContext_t *ctx, u32 *crc_val)</argsstring>
        <name>tls_crypto_crc_final</name>
        <param>
          <type><ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>u32 *</type>
          <declname>crc_val</declname>
        </param>
        <briefdescription>
<para>This function ends a CRC operation and produces a CRC value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CRC Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crc_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the CRC value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a77cec7015ec3055526cb30a935e186d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_crypto_sha1_init</definition>
        <argsstring>(psDigestContext_t *md)</argsstring>
        <name>tls_crypto_sha1_init</name>
        <param>
          <type>psDigestContext_t *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>This function initializes Message-Diggest context for usage in SHA1 algorithm, starts a new SHA1 operation and writes a new Digest Context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SHA1 Digest Context.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1ad90fe40a9e5a09bd34ef16d9882b2000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_crypto_sha1_update</definition>
        <argsstring>(psDigestContext_t *md, const unsigned char *buf, u32 len)</argsstring>
        <name>tls_crypto_sha1_update</name>
        <param>
          <type>psDigestContext_t *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Process a message block using SHA1 algorithm. This function performs a SHA1 block update operation. It continues an SHA1 message-digest operation, by processing InputLen-byte length message block pointed to by buf, and by updating the SHA1 context pointed to by md. This function may be called as many times as necessary, so the message may be processed in blocks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SHA1 Digest Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>InputLen-byte length message block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The buf &apos;s length</para></parameterdescription>
</parameteritem>
</parameterlist>
None <linebreak/>
 <simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a98c5a32a5902d5b388434661d18a0aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_sha1_final</definition>
        <argsstring>(psDigestContext_t *md, unsigned char *hash)</argsstring>
        <name>tls_crypto_sha1_final</name>
        <param>
          <type>psDigestContext_t *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>This function ends a SHA1 operation and produces a Message-Digest. This function finalizes SHA1 algorithm, i.e. ends an SHA1 Message-Digest operation, writing the Message-Digest in the 20-byte buffer pointed to by hash in according to the information stored in context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SHA1 Digest Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Message-Digest</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>20</parametername>
</parameternamelist>
<parameterdescription>
<para>success, return the hash size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1ac63b2990aadd0a5b92881fca3915d22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_crypto_md5_init</definition>
        <argsstring>(psDigestContext_t *md)</argsstring>
        <name>tls_crypto_md5_init</name>
        <param>
          <type>psDigestContext_t *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>This function initializes Message-Diggest context for usage in MD5 algorithm, starts a new MD5 operation and writes a new Digest Context. This function begins a MD5 Message-Diggest Algorithm, i.e. fills the psDigestContext_t structure pointed to by md with necessary data. MD5 is the algorithm which takes as input a message of arbitrary length and produces as output a 128-bit &quot;fingerprint&quot; or &quot;message digest&quot; of the input. It is conjectured that it is computationally infeasible to produce two messages having the same message digest, or to produce any message having a given prespecified target message digest. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>MD5 Digest Context.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a6927f43c44486d37f801e0a87468b519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_crypto_md5_update</definition>
        <argsstring>(psDigestContext_t *md, const unsigned char *buf, u32 len)</argsstring>
        <name>tls_crypto_md5_update</name>
        <param>
          <type>psDigestContext_t *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Process a message block using MD5 algorithm. This function performs a MD5 block update operation. It continues an MD5 message-digest operation, by processing InputLen-byte length message block pointed to by buf, and by updating the MD5 context pointed to by md. This function may be called as many times as necessary, so the message may be processed in blocks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>MD5 Digest Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>InputLen-byte length message block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The buf &apos;s length</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1abb89fcc6dd42fea9eb397ff54f8c0c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_md5_final</definition>
        <argsstring>(psDigestContext_t *md, unsigned char *hash)</argsstring>
        <name>tls_crypto_md5_final</name>
        <param>
          <type>psDigestContext_t *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>This function ends a MD5 operation and produces a Message-Digest. This function finalizes MD5 algorithm, i.e. ends an MD5 Message-Digest operation, writing the Message-Digest in the 16-byte buffer pointed to by hash in according to the information stored in context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>MD5 Digest Context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash</parametername>
</parameternamelist>
<parameterdescription>
<para>the Message-Digest</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>16</parametername>
</parameternamelist>
<parameterdescription>
<para>success, return the hash size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a75a35d9be7ef9b1ae4318d156f73030f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_crypto_exptmod</definition>
        <argsstring>(pstm_int *a, pstm_int *e, pstm_int *n, pstm_int *res)</argsstring>
        <name>tls_crypto_exptmod</name>
        <param>
          <type>pstm_int *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>pstm_int *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>pstm_int *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>pstm_int *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>This function implements the large module power multiplication algorithm. res = a**e (mod n) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a bignumber. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">e</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a bignumber. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a bignumber. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">res</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the result bignumber.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed <linebreak/>
 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__crypto__hard_8h_1a867f21904850871d3800d1f8f2edebe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_crypto_init</definition>
        <argsstring>(void)</argsstring>
        <name>tls_crypto_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the encryption module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Platform/wm_crypto_hard.h" line="509" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>hard crypto module </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>dave</para></simplesect>
Copyright (c) 2014 Winner Microelectronics Co., Ltd. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>WM_CRYPTO_HARD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WM_CRYPTO_HARD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__type__def_8h" kindref="compound">wm_type_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cryptoConfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;digest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pstm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;symmetric.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cryptolib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cryptoApi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>min(a,b)<sp/><sp/><sp/><sp/>(((a)<sp/>&lt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>min<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="wm__crypto__hard_8h_1ae2a4ca010f3bad4edf0e8f3d77ab40d5" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_BASE_ADDR<sp/><sp/><sp/>0x40003200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="wm__crypto__hard_8h_1ae7de8bb04e21b3aae528c1dffb67af75" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SRC_ADDR<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x00)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="wm__crypto__hard_8h_1ace30d0e43886f2c7cfbb19d8b4844230" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_DEST_ADDR<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x04)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="wm__crypto__hard_8h_1a9c29b313e027cfddbfb9c23e1e83c8a1" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SEC_CFG<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x08)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="wm__crypto__hard_8h_1a235b50fdd332ce725f3b989576ac24a8" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SEC_CTRL<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x0C)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="wm__crypto__hard_8h_1a9b63f50079074fb47069a77580ef3279" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_KEY0<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x10)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="wm__crypto__hard_8h_1afeec8bce72ea17dac9877d0f11dd4c66" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_KEY1<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x14)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="wm__crypto__hard_8h_1aab9b21c7fc55a8ec894398c2351ccc28" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_KEY2<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x18)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="wm__crypto__hard_8h_1ac8f660c69032d5b9c1ba95b88307f3c1" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_KEY3<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x1C)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="wm__crypto__hard_8h_1abe1259cd6463b3d2d0c03f200edfc236" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_KEY4<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x20)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="wm__crypto__hard_8h_1a1b42e56e65c12368f13274db03aa603d" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_KEY5<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x24)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="wm__crypto__hard_8h_1ad36030f292ed43bad04243f2c0d814dc" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_IV0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x28)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="wm__crypto__hard_8h_1af292ea1a75372726cc49ed7ea0208d10" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_IV1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x20)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="wm__crypto__hard_8h_1a84842cdfa8aea5f149dc9dcd1381529b" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SEC_STS<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x30)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="wm__crypto__hard_8h_1a773806a7e770307e3842cc2b8094b6e8" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SHA1_DIGEST0<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x34)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="wm__crypto__hard_8h_1a49bd7ee93964ac90d793accc19b0f368" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SHA1_DIGEST1<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x38)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="wm__crypto__hard_8h_1a51f2f77d196063ba3c84d45444ff3baa" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SHA1_DIGEST2<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x3C)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="wm__crypto__hard_8h_1aa49c395566ce5c847c47da5431d4536e" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SHA1_DIGEST3<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x40)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="wm__crypto__hard_8h_1a11ccd771ea30fda90ac3d33a62e443fc" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_SHA1_DIGEST4<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x44)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="wm__crypto__hard_8h_1a24d85cb821c1c4d31ced8e25c269ddfd" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_RNG_RESULT<sp/><sp/><sp/><sp/><sp/>(HR_CRYPTO_BASE_ADDR<sp/>+<sp/>0x48)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="wm__crypto__hard_8h_1a4296a8c91504a6441a9a1eba986dd807" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_CRC_KEY<sp/><sp/><sp/>HR_CRYPTO_SHA1_DIGEST4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="wm__crypto__hard_8h_1a032295ce7ae2083260a9419eacde1ef7" refkind="member"><highlight class="preprocessor">#define<sp/>HR_CRYPTO_CRC_RESULT<sp/><sp/><sp/><sp/>HR_CRYPTO_SHA1_DIGEST4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="wm__crypto__hard_8h_1a54dc05d08ee4eb5e85eb5305f607497c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_CRY_OK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor">#define<sp/>ERR_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>failure<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERR_ARG_FAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-6<sp/><sp/></highlight><highlight class="comment">/*<sp/>Failure<sp/>due<sp/>to<sp/>bad<sp/>function<sp/>param<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//CRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUTPUT_REFLECT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_REFLECT<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557d" kindref="member">__CRYPTO_METHOD</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_METHOD_RSV=0,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_METHOD_RC4,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_METHOD_SHA1,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_METHOD_AES,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_METHOD_DES,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_METHOD_3DES,</highlight></codeline>
<codeline lineno="93" refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da40d6f8b7f2c8c5ecc25e2e5defda4963" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557da40d6f8b7f2c8c5ecc25e2e5defda4963" kindref="member">CRYPTO_METHOD_CRC</ref>,<sp/></highlight></codeline>
<codeline lineno="94" refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557daf8df1efe84234a46c64184cb6177045f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a67bc51bf2d216e67a43638d2f201557daf8df1efe84234a46c64184cb6177045f" kindref="member">CRYPTO_METHOD_MD5</ref><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}CRYPTO_METHOD;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513" kindref="member">__CRYPTO_WAY</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102" refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513a6faf0ef7f39830908cb83cd1e79c9f69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513a6faf0ef7f39830908cb83cd1e79c9f69" kindref="member">CRYPTO_WAY_ENCRYPT</ref>=0,<sp/></highlight></codeline>
<codeline lineno="103" refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513a84e2bed4c5f57c01e85cc2782fe66248" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a0f08459b61a93df85de1f6d45721c513a84e2bed4c5f57c01e85cc2782fe66248" kindref="member">CRYPTO_WAY_DECRYPT</ref><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>__CRYPTO_RNG_SWITCH</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_RNG_SWITCH_16<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>CRYPTO_RNG_SWITCH_32</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}CRYPTO_RNG_SWITCH;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507" kindref="member">__CRYPTO_MODE</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117" refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507af3d1c05bffa2e1c070c8296d0a2b6d52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507af3d1c05bffa2e1c070c8296d0a2b6d52" kindref="member">CRYPTO_MODE_ECB</ref>=0,<sp/></highlight></codeline>
<codeline lineno="118" refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507a23aad56f7363a1c64af840628b308db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507a23aad56f7363a1c64af840628b308db8" kindref="member">CRYPTO_MODE_CBC</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507ae1338405e70820638e147f16ded0cd6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1aeba31feffc4427d03e274edd48dd5507ae1338405e70820638e147f16ded0cd6c" kindref="member">CRYPTO_MODE_CTR</ref><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref>;</highlight></codeline>
<codeline lineno="124" refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ced" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ced" kindref="member">__CRYPTO_CRC_TYPE</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126" refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda98156a2c8f53e0ebe02cd1cb55af20c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda98156a2c8f53e0ebe02cd1cb55af20c1" kindref="member">CRYPTO_CRC_TYPE_8</ref>=0,<sp/></highlight></codeline>
<codeline lineno="127" refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda2c96d8891299beb83c9e7308d6fabbaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda2c96d8891299beb83c9e7308d6fabbaf" kindref="member">CRYPTO_CRC_TYPE_16_MODBUS</ref>,<sp/></highlight></codeline>
<codeline lineno="128" refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda6835c9be12604f6a9c9f03fcfb8c293f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7ceda6835c9be12604f6a9c9f03fcfb8c293f" kindref="member">CRYPTO_CRC_TYPE_16_CCITT</ref>,<sp/></highlight></codeline>
<codeline lineno="129" refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7cedab8128b746f2dd9341e9c0185dac0cb14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__crypto__hard_8h_1a0e8ec805db522147391e3dfb139f7cedab8128b746f2dd9341e9c0185dac0cb14" kindref="member">CRYPTO_CRC_TYPE_32</ref><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<ref refid="wm__crypto__hard_8h_1a97e4243cd5dccfacff322815de9c3979" kindref="member">CRYPTO_CRC_TYPE</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structps_crc_context__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136" refid="structps_crc_context__t_1a29c57beacdd4dc76a47df78c5f634f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><ref refid="structps_crc_context__t_1a29c57beacdd4dc76a47df78c5f634f9b" kindref="member">state</ref>;<sp/></highlight></codeline>
<codeline lineno="137" refid="structps_crc_context__t_1a48f51eab5004d37c15969d557b4c1dd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structps_crc_context__t_1a48f51eab5004d37c15969d557b4c1dd8" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="138" refid="structps_crc_context__t_1a40bb73e12a4d686cc79ac2d030428229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structps_crc_context__t_1a40bb73e12a4d686cc79ac2d030428229" kindref="member">mode</ref>;<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="structhsha1__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhsha1__state" kindref="compound">hsha1_state</ref><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_NATIVE_INT64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/><sp/><sp/><sp/><sp/><sp/>length;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/>lengthHi;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/>lengthLo;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_NATIVE_INT64<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/>state[5],<sp/>curlen;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>buf[64];</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153" refid="structhmd5__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhmd5__state" kindref="compound">hmd5_state</ref><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_NATIVE_INT64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>length;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>lengthHi;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>lengthLo;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_NATIVE_INT64<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>state[4],<sp/>curlen;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[64];</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="unionhs_digest_context__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhsha1__state" kindref="compound">hsha1_state</ref><sp/><sp/><ref refid="wm__crypto_8h_1a5a33fe2f1a4b55725de3c26edd3f905b" kindref="member">sha1</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhmd5__state" kindref="compound">hmd5_state</ref><sp/><sp/><sp/><ref refid="wm__crypto_8h_1aff8ec52500cfccf50e9ac2feabfc6e7c" kindref="member">md5</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/><ref refid="unionhs_digest_context__t" kindref="compound">hsDigestContext_t</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hstm_digit;</highlight></codeline>
<codeline lineno="170" refid="structhstm__int" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/><sp/><sp/>used,<sp/>alloc,<sp/>sign;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>hstm_digit<sp/>*dp;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/><ref refid="structhstm__int" kindref="compound">hstm_int</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a6bf3efe4f7f4a3327df5d56f12e9d7d0" kindref="member">tls_crypto_random_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a0f6ee550f82543fff93340dfd35bf8f1" kindref="member">tls_crypto_random_init</ref>(u32<sp/>seed,<sp/>CRYPTO_RNG_SWITCH<sp/>rng_switch);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1ac17c37f6cfe009da60d5c52b4565b330" kindref="member">tls_crypto_random_bytes</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/>u32<sp/>len);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a7782139c14742da99817df7f11aa8c9e" kindref="member">tls_crypto_rc4_init</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>u32<sp/>keylen);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a4eeb899a8b844f68a0eb168bbd77ae57" kindref="member">tls_crypto_rc4</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/>u32<sp/>len);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a8168be83a67fdd7a5f632ef3a3a96f0a" kindref="member">tls_crypto_aes_init</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*IV,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>u32<sp/>keylen,<sp/><ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref><sp/>cbc);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1aeea658bcd40c74f27dfe4c9803ee77ce" kindref="member">tls_crypto_aes_encrypt_decrypt</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/>u32<sp/>len,<sp/><ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref><sp/>dec);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a5a0255087ca3e3b27c36ad62676af039" kindref="member">tls_crypto_3des_init</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*IV,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>u32<sp/>keylen,<sp/><ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref><sp/>cbc);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a73ac4e7ce28b4e0e14b3bd29fb735648" kindref="member">tls_crypto_3des_encrypt_decrypt</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/>u32<sp/>len,<sp/><ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref><sp/>dec);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1ae34a679750c001e0d7978ee8ce36fc55" kindref="member">tls_crypto_des_init</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*IV,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>u32<sp/>keylen,<sp/><ref refid="wm__crypto__hard_8h_1a6d62afcbe91949711173db2fa997f3da" kindref="member">CRYPTO_MODE</ref><sp/>cbc);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a7640dcbc3790e1c218ddf78910fd888d" kindref="member">tls_crypto_des_encrypt_decrypt</ref>(psCipherContext_t<sp/>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/>u32<sp/>len,<sp/><ref refid="wm__crypto__hard_8h_1aafdb1dd3ca5868fd31ab458508c09a73" kindref="member">CRYPTO_WAY</ref><sp/>dec);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a4fc9954c609148fbe7e090c850615448" kindref="member">tls_crypto_crc_init</ref>(<ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref><sp/>*<sp/>ctx,<sp/>u32<sp/>key,<sp/><ref refid="wm__crypto__hard_8h_1a97e4243cd5dccfacff322815de9c3979" kindref="member">CRYPTO_CRC_TYPE</ref><sp/>crc_type,<sp/>u8<sp/>mode);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a4f6c0038b1f0674417ba6a5d8370d6c6" kindref="member">tls_crypto_crc_update</ref>(<ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref><sp/>*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,<sp/>u32<sp/>len);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1acd1a098a43800b5190bc8292284b9611" kindref="member">tls_crypto_crc_final</ref>(<ref refid="structps_crc_context__t" kindref="compound">psCrcContext_t</ref><sp/>*<sp/>ctx,<sp/>u32<sp/>*crc_val);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a77cec7015ec3055526cb30a935e186d6" kindref="member">tls_crypto_sha1_init</ref>(psDigestContext_t<sp/>*<sp/>md);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1ad90fe40a9e5a09bd34ef16d9882b2000" kindref="member">tls_crypto_sha1_update</ref>(psDigestContext_t<sp/>*<sp/>md,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/>u32<sp/>len);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a98c5a32a5902d5b388434661d18a0aa5" kindref="member">tls_crypto_sha1_final</ref>(psDigestContext_t<sp/>*<sp/>md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hash);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1ac63b2990aadd0a5b92881fca3915d22b" kindref="member">tls_crypto_md5_init</ref>(psDigestContext_t<sp/>*<sp/>md);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a6927f43c44486d37f801e0a87468b519" kindref="member">tls_crypto_md5_update</ref>(psDigestContext_t<sp/>*<sp/>md,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/>u32<sp/>len);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1abb89fcc6dd42fea9eb397ff54f8c0c8e" kindref="member">tls_crypto_md5_final</ref>(psDigestContext_t<sp/>*<sp/>md,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hash);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a75a35d9be7ef9b1ae4318d156f73030f" kindref="member">tls_crypto_exptmod</ref>(pstm_int<sp/>*a,<sp/>pstm_int<sp/>*e,<sp/>pstm_int<sp/>*n,<sp/>pstm_int<sp/>*res);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wm__crypto__hard_8h_1a867f21904850871d3800d1f8f2edebe0" kindref="member">tls_crypto_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Include/Platform/wm_crypto_hard.h"/>
  </compounddef>
</doxygen>
