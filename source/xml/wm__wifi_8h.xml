<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="wm__wifi_8h" kind="file" language="C++">
    <compoundname>wm_wifi.h</compoundname>
    <includedby refid="wm__include_8h" local="yes">Include/wm_include.h</includedby>
    <includedby refid="wm__netif_8h" local="yes">Include/App/wm_netif.h</includedby>
    <includedby refid="wm__netif2_80_83_8h" local="yes">Include/App/wm_netif2.0.3.h</includedby>
    <invincdepgraph>
      <node id="407">
        <label>Include/Net/wm_sockets.h</label>
        <link refid="wm__sockets_8h"/>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="408">
        <label>Include/App/wm_netif2.0.3.h</label>
        <link refid="wm__netif2_80_83_8h"/>
      </node>
      <node id="403">
        <label>Include/WiFi/wm_wifi.h</label>
        <link refid="wm__wifi_8h"/>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="404">
        <label>Include/wm_include.h</label>
        <link refid="wm__include_8h"/>
      </node>
      <node id="405">
        <label>Include/App/wm_netif.h</label>
        <link refid="wm__netif_8h"/>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
      </node>
      <node id="406">
        <label>Include/Net/wm_socket2.0.3.h</label>
        <link refid="wm__socket2_80_83_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtls__curr__bss__t" prot="public">tls_curr_bss_t</innerclass>
    <innerclass refid="structtls__key__info__t" prot="public">tls_key_info_t</innerclass>
    <innerclass refid="structtls__softap__info__t" prot="public">tls_softap_info_t</innerclass>
    <innerclass refid="structtls__ip__info__t" prot="public">tls_ip_info_t</innerclass>
    <innerclass refid="structtls__ibss__info__t" prot="public">tls_ibss_info_t</innerclass>
    <innerclass refid="structtls__ibssip__info__t" prot="public">tls_ibssip_info_t</innerclass>
    <innerclass refid="structtls__bss__info__t" prot="public">tls_bss_info_t</innerclass>
    <innerclass refid="structtls__scan__bss__t" prot="public">tls_scan_bss_t</innerclass>
    <innerclass refid="structtls__sta__info__t" prot="public">tls_sta_info_t</innerclass>
    <innerclass refid="structtls__wifi__ext__t" prot="public">tls_wifi_ext_t</innerclass>
    <innerclass refid="structtls__wifi__hdr__mac__t" prot="public">tls_wifi_hdr_mac_t</innerclass>
    <innerclass refid="structtls__wifi__tx__rate__t" prot="public">tls_wifi_tx_rate_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wm__wifi_8h_1adda3470a4c892da38430bbf9a975606b" prot="public" static="no">
        <name>WM_WIFI_ERR_SSID</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>invalid SSID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="15" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a85320ac6fdeb24b4d2d3f8f4df20a0d3" prot="public" static="no">
        <name>WM_WIFI_ERR_KEY</name>
        <initializer>-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>invalid key </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="17" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ab3d2be93ef28c4bf457433db6f071f90" prot="public" static="no">
        <name>WM_WIFI_WPS_BUSY</name>
        <initializer>-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>wps is busing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="19" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ad53949419c8e1dc6f8195d64876e0592" prot="public" static="no">
        <name>WM_WIFI_SCANNING_BUSY</name>
        <initializer>-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>scan is busing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="21" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a288096e2912d93e5a0fdbad46e638ebc" prot="public" static="no">
        <name>WM_WIFI_ENOERR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>no error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="26" column="13" bodyfile="Include/WiFi/wm_wifi.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a848a913fbca2ae86e8c9d316dddec918" prot="public" static="no">
        <name>WM_WIFI_ENOAP</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ap not exist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="28" column="13" bodyfile="Include/WiFi/wm_wifi.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ad737ef722b68b93e11134593a6f953f7" prot="public" static="no">
        <name>WM_WIFI_EKEY</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pre-shared key may be incorrect </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="30" column="13" bodyfile="Include/WiFi/wm_wifi.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a08929c5ecd8dcf7f3eb969d47148806d" prot="public" static="no">
        <name>WM_WIFI_ELSI</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Low signal intensity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="32" column="13" bodyfile="Include/WiFi/wm_wifi.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" prot="public" static="no">
        <name>ETH_ALEN</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mac address length </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="37" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ad5c621ae80539f1987b88f813285f5be" prot="public" static="no">
        <name>IEEE80211_MODE_INFRA</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>station mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="43" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a04c40b7969e140e882afc4af0a601b0f" prot="public" static="no">
        <name>IEEE80211_MODE_IBSS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ibss mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="45" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a0313f04af0bc24671b05e841848b89ef" prot="public" static="no">
        <name>IEEE80211_MODE_AP</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>softap mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="47" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ab24260c6b4f4030b8a0dcbb97ff5666c" prot="public" static="no">
        <name>IEEE80211_ENCRYT_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : open </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="51" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a2c9eb87b78b1d740f427367ee33348d8" prot="public" static="no">
        <name>IEEE80211_ENCRYT_WEP40</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WEP40 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="53" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1accae16492f553ba06780121dccacb122" prot="public" static="no">
        <name>IEEE80211_ENCRYT_WEP104</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WEP104 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="55" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a05e843a97f33bf99a6118433c4aecc06" prot="public" static="no">
        <name>IEEE80211_ENCRYT_TKIP_WPA</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WPA_PSK_TKIP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="57" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a0428535fad927a47c5b4c68263c41517" prot="public" static="no">
        <name>IEEE80211_ENCRYT_CCMP_WPA</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WPA_PSK_CCMP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="59" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a5e28bb791c524b991bfb58cd2ea7e4db" prot="public" static="no">
        <name>IEEE80211_ENCRYT_TKIP_WPA2</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WPA2_PSK_TKIP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="61" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a244c4bf2871f3986bcb7982af6e05325" prot="public" static="no">
        <name>IEEE80211_ENCRYT_CCMP_WPA2</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WPA2_PSK_CCMP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="63" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ae63623942fef48576cd6bae1b7a56883" prot="public" static="no">
        <name>IEEE80211_ENCRYT_AUTO_WPA</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WPA_PSK_TKIP&amp;AES </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="65" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1aebfc10c74188cfb144d0f25079ea6ee7" prot="public" static="no">
        <name>IEEE80211_ENCRYT_AUTO_WPA2</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>authenticate mode : WPA2_PSK_TKIP&amp;AES </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="67" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a05db62626fb0819da4b4a931f703bcf5" prot="public" static="no">
        <name>WIFI_AUTO_CNT_FLAG_SET</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set auto connecting flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="75" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a1627c34443c3f4354ff39be90c65430b" prot="public" static="no">
        <name>WIFI_AUTO_CNT_FLAG_GET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get auto connecting flag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="77" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ae9bd377f1648a14af573857f88a2f370" prot="public" static="no">
        <name>WIFI_AUTO_CNT_OFF</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>disable Wi-Fi auto connecting </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="80" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1acac356fe0494d94baa9293091617322a" prot="public" static="no">
        <name>WIFI_AUTO_CNT_ON</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enable Wi-Fi auto connecting </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="82" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ac1543affe0eee1550cff92320bdb607f" prot="public" static="no">
        <name>WIFI_AUTO_CNT_TMP_OFF</name>
        <initializer>0x3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>disable Wi-Fi auto connecting temporary </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="84" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ac08ad19861f4e1e974941a197c652e94" prot="public" static="no">
        <name>WIFI_JOIN_SUCCESS</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi join net successfully </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="87" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1acb8adb28f049a59532fe36ce3ea17532" prot="public" static="no">
        <name>WIFI_JOIN_FAILED</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi join net failed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="89" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1aa2712af399bd986e54d9b3c80d5b42a4" prot="public" static="no">
        <name>WIFI_DISCONNECTED</name>
        <initializer>0x3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi disconnected </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="91" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1ab8816eef0469d8fb9b418846372a377d" prot="public" static="no">
        <name>WIFI_SOFTAP_SUCCESS</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi create ap successfully </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="93" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a2ff54126c7a4cfe968bf190ec2f42ee9" prot="public" static="no">
        <name>WIFI_SOFTAP_FAILED</name>
        <initializer>0x5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi create softap failure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="95" column="9" bodyfile="Include/WiFi/wm_wifi.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__wifi_8h_1a24a5d4397e6707dcbf5c1ae9343585ec" prot="public" static="no">
        <name>WIFI_SOFTAP_CLOSED</name>
        <initializer>0x6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi close softap </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="97" column="13" bodyfile="Include/WiFi/wm_wifi.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" prot="public" static="no" strong="no">
        <type></type>
        <name>tls_wifi_states</name>
        <enumvalue id="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a740f3ce785db8621cdb47e74b9d71ba3" prot="public">
          <name>WM_WIFI_DISCONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disconnected state </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983aac7146ddfc44abec96031153526dac68" prot="public">
          <name>WM_WIFI_SCANNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Scanning for a network </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a0fcfcce86ae64f02bec466771e6740b1" prot="public">
          <name>WM_WIFI_JOINING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trying to join with a BSS/SSID </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a7d0e89f6b30da77fc1266fed7e304980" prot="public">
          <name>WM_WIFI_JOINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All authentication completed </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi states </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="101" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="enum" id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6" prot="public" static="no" strong="no">
        <type></type>
        <name>tls_wifi_mgmt_type</name>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a1b0891368b49d979f5f55cbef845e5e5" prot="public">
          <name>WM_WIFI_MGMT_TYPE_ASSOC_REQ</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>association request frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a8ec5211d17ab60d81864cdcc983238ba" prot="public">
          <name>WM_WIFI_MGMT_TYPE_ASSOC_RESP</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>association response frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6acea064648f86ca70b97174a91f64b4cb" prot="public">
          <name>WM_WIFI_MGMT_TYPE_REASSOC_REQ</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reassociation request frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ac97eda62ba4d3791f98bb26a402a8f2f" prot="public">
          <name>WM_WIFI_MGMT_TYPE_REASSOC_RESP</name>
          <initializer>= 0x0030</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>reassociation response frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6afc29584a9170bc52e7342aca317cda18" prot="public">
          <name>WM_WIFI_MGMT_TYPE_PROBE_REQ</name>
          <initializer>= 0x0040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>probe request frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ae3fa1882b85405951f0dea6fc7c89776" prot="public">
          <name>WM_WIFI_MGMT_TYPE_PROBE_RESP</name>
          <initializer>= 0x0050</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>probe response frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a8dd6f1fdd78d84cc1de8eb12ac036303" prot="public">
          <name>WM_WIFI_MGMT_TYPE_BEACON</name>
          <initializer>= 0x0080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>beacon frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ab36f22babfc0d41f83a4b2eb61fe3507" prot="public">
          <name>WM_WIFI_MGMT_TYPE_ATIM</name>
          <initializer>= 0x0090</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ATIM frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a4bb307106d71cc15562360d8df7eb454" prot="public">
          <name>WM_WIFI_MGMT_TYPE_DISASSOC</name>
          <initializer>= 0x00A0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>disassociation frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a731401d6fe16e02cb5451e60b1e9fb91" prot="public">
          <name>WM_WIFI_MGMT_TYPE_AUTH</name>
          <initializer>= 0x00B0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>authentication frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a31ecd2c310052e3d42c0675af64e4c75" prot="public">
          <name>WM_WIFI_MGMT_TYPE_DEAUTH</name>
          <initializer>= 0x00C0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>deauthentication frame </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6acff7efa7319146b43f6491e318c724dd" prot="public">
          <name>WM_WIFI_MGMT_TYPE_ACTION</name>
          <initializer>= 0x00D0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>action frame </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frame type of the manager </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="109" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="109" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16" prot="public" static="no" strong="no">
        <type></type>
        <name>tls_wifi_tx_rate</name>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a67e9d84b710d9e1bd4ed160210fdde14" prot="public">
          <name>WM_WIFI_TX_RATEIDX_1M</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11b, 1M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ab4e8d8209f2bdb0b82b44f5a1d34207e" prot="public">
          <name>WM_WIFI_TX_RATEIDX_2M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11b, 2M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a2d9ea3e42c8f1495b61cd17be38db20b" prot="public">
          <name>WM_WIFI_TX_RATEIDX_5_5M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11b, 5.5M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a4fa349cf3c6f92da027b84c9768549b9" prot="public">
          <name>WM_WIFI_TX_RATEIDX_11M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11b, 11M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a47de1532b87f4424f93ca5315a52af0b" prot="public">
          <name>WM_WIFI_TX_RATEIDX_6M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 6M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a34ff1d58576e12393ebfd56bd5e45025" prot="public">
          <name>WM_WIFI_TX_RATEIDX_9M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 9M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a903dc72721d3a66487fd9f350981d3f9" prot="public">
          <name>WM_WIFI_TX_RATEIDX_12M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 12M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aeb876bdab7c190eaa97b6ab877061af5" prot="public">
          <name>WM_WIFI_TX_RATEIDX_18M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 18M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a05917dd4398faad395c1d1aa667f387c" prot="public">
          <name>WM_WIFI_TX_RATEIDX_24M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 24M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a71403766eaf749074ed77926ccd8c35b" prot="public">
          <name>WM_WIFI_TX_RATEIDX_36M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 36M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ab8d2d697df7e374f5766fae8928778ce" prot="public">
          <name>WM_WIFI_TX_RATEIDX_48M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 48M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afbba8d6c0033390c6a339f05cbaeda78" prot="public">
          <name>WM_WIFI_TX_RATEIDX_54M</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11g, 54M </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a91e0a4c68651aebbb5729523434806b6" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs0 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a82e4c23d981049f96ad42f0aa80296b5" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs1 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16af7197b1b931809a572f74835dba53337" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs2 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ad80020b000884f4d580fa4820d119591" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs3 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ac66370791169a2436f94854cc2be7495" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs4 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a989c439d699ebd7669424f47de65452c" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs5 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aaf57d50e4c18175a1039cc7a98ef22e9" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs6 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afd853a2faaab2bf18c2a769dee855efb" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-20MHz, mcs7 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a262fc8c3278d082e4f0791a6d4bd477c" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs8 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16af80d3677f7f6e845aaf0e205180f8d9b" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs9 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a12a7f39e732ba0df56900acd00fcccba" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs10 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a1d087acfbc094de739d24c317848faae" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs11 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a130cebd41a09b2fdd00a28950a8fa87b" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs12 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afe19f4b7fd76e6a8d6396043f671304c" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs13 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a891088d893d506751337df2496c36bc2" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs14 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aaecb11b7a6bef9af7fbc91a35b7b7b45" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>11n-40MHz, mcs15 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16abf83b8030c1244bda8cb18d11d2acdd2" prot="public">
          <name>WM_WIFI_TX_RATEIDX_MCS32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>invalid rate </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wi-Fi ransport rate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="125" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="125" bodyend="155"/>
      </memberdef>
      <memberdef kind="enum" id="wm__wifi_8h_1a964e7bb531b45186f26c5fb410c455d0" prot="public" static="no" strong="no">
        <type></type>
        <name>tls_wifi_oneshot_result_type</name>
        <enumvalue id="wm__wifi_8h_1a964e7bb531b45186f26c5fb410c455d0aa67ee86893cb8c8a271e7632086e5642" prot="public">
          <name>WM_WIFI_ONESHOT_TYPE_SSIDPWD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a964e7bb531b45186f26c5fb410c455d0afeb308779431441ec5ae84e2f31a7699" prot="public">
          <name>WM_WIFI_ONESHOT_TYPE_CUSTOMDATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="157" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="enum" id="wm__wifi_8h_1a3b3297c508811f689adbdf6e7be244d0" prot="public" static="no" strong="no">
        <type></type>
        <name>tls_wifi_client_event_type</name>
        <enumvalue id="wm__wifi_8h_1a3b3297c508811f689adbdf6e7be244d0a6bdeb5415641ff9c22ade854e042a6bb" prot="public">
          <name>WM_WIFI_CLIENT_EVENT_ONLINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3b3297c508811f689adbdf6e7be244d0aaf03080e409a5df7ea447fee15c32fbe" prot="public">
          <name>WM_WIFI_CLIENT_EVENT_OFFLINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="162" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="enum" id="wm__wifi_8h_1a3d43fc17503d9536eec67947e2e34cfc" prot="public" static="no" strong="no">
        <type></type>
        <name>tls_wifi_op_mode</name>
        <enumvalue id="wm__wifi_8h_1a3d43fc17503d9536eec67947e2e34cfcabd03eae7aff57049c70079dc7877de47" prot="public">
          <name>STATION_MODE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3d43fc17503d9536eec67947e2e34cfca92e54e4df3bbe26a86fee10322867a8f" prot="public">
          <name>SOFTAP_MODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__wifi_8h_1a3d43fc17503d9536eec67947e2e34cfcaa5510a47f526ca8c4de330fd05fb5032" prot="public">
          <name>STATIONAP_MODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="167" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="167" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wm__wifi_8h_1a39ef815a524fe2757fd2bda5be1e5702" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tls_wifi_data_recv_callback) (u8 *data, u32 data_len)</definition>
        <argsstring>)(u8 *data, u32 data_len)</argsstring>
        <name>tls_wifi_data_recv_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>callback function of receive Wi-Fi data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="280" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__wifi_8h_1a81c727b3accf88c5069eeda88da55279" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* net_rx_data_cb) (const u8 *bssid, u8 *buf, u32 buf_len)</definition>
        <argsstring>)(const u8 *bssid, u8 *buf, u32 buf_len)</argsstring>
        <name>net_rx_data_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>callback function of receive ETHERNET data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="283" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__wifi_8h_1ae0924a8849e49719a80e0004f25ecd2b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tls_wifi_data_ext_recv_callback) (u8 *data, u32 data_len, struct tls_wifi_ext_t *ext)</definition>
        <argsstring>)(u8 *data, u32 data_len, struct tls_wifi_ext_t *ext)</argsstring>
        <name>tls_wifi_data_ext_recv_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>callback function of receive Wi-Fi data with some information of the physical layer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="286" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___w_m___wi-_fi___a_p_is_1gaac4dee9aa5cb5c7ecc737cc182f410d7" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tls_wifi_oneshot_result_callback) (enum tls_wifi_oneshot_result_type type)</definition>
        <argsstring>)(enum tls_wifi_oneshot_result_type type)</argsstring>
        <name>tls_wifi_oneshot_result_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="426" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___w_m___wi-_fi___a_p_is_1ga951728abcde702c4a22956e5fa076ef8" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tls_wifi_client_event_callback) (u8 *mac, enum tls_wifi_client_event_type event)</definition>
        <argsstring>)(u8 *mac, enum tls_wifi_client_event_type event)</argsstring>
        <name>tls_wifi_client_event_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="542" column="1" bodyfile="Include/WiFi/wm_wifi.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wm__wifi_8h_1a6c3d8ff8dcff9ba5598833a610bd39aa" prot="public" static="no" mutable="no">
        <type>enum <ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" kindref="member">tls_wifi_states</ref></type>
        <definition>enum tls_wifi_states __attribute__</definition>
        <argsstring></argsstring>
        <name>__attribute__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gaf63d9183dfe40f0a6c263034b1707c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_set_listen_mode</definition>
        <argsstring>(u8 enable)</argsstring>
        <name>tls_wifi_set_listen_mode</name>
        <param>
          <type>u8</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>This function is used to enable/disable listen mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable:non-zero</parametername>
<parametername direction="in">disable</parametername>
</parameternamelist>
<parameterdescription>
<para>0</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>This function used when oneshot start. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga68d3c7cd61506471ed3060a8d01b9503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 tls_wifi_get_listen_mode</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_get_listen_mode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to get listen mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>normal mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>non-zero</parametername>
</parameternamelist>
<parameterdescription>
<para>listen mode</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga5c0a5c4b2968c54ab0262bfa5c0c1200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 tls_filter_mcast_mac</definition>
        <argsstring>(u8 *mac, u8 receive)</argsstring>
        <name>tls_filter_mcast_mac</name>
        <param>
          <type>u8 *</type>
          <declname>mac</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>receive</declname>
        </param>
        <briefdescription>
<para>This function is used to filter multicast frames. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mac</parametername>
</parameternamelist>
<parameterdescription>
<para>The multicast frame that we want receive or filter.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receive</parametername>
</parameternamelist>
<parameterdescription>
<para>1, receive this multicast frame 0, filter this multicast frame</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>usage: For example: u8 mac[6]={01, 00, 5e, 7f, ff, fa},if receive is set to 0,the 802.11 multicast frames whose hdr-&gt;addr1 is [01 00 5e 7f ff fa] will be filtered. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gacbcc9813cca0c73b56003a1ab7a0a2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_set_bcast_mac_filter</definition>
        <argsstring>(u8 *mac, u8 receive, u8 clear)</argsstring>
        <name>tls_wifi_set_bcast_mac_filter</name>
        <param>
          <type>u8 *</type>
          <declname>mac</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>receive</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>clear</declname>
        </param>
        <briefdescription>
<para>This function is used to set mac filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mac</parametername>
</parameternamelist>
<parameterdescription>
<para>mac: to be filtered or received</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">receive</parametername>
</parameternamelist>
<parameterdescription>
<para>1:not filter,zero:filter</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clear</parametername>
</parameternamelist>
<parameterdescription>
<para>1:clear all, 0:do not clear, only add new filter</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>usage: normally, it is used to oneshot config </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga2bc4d3075b8457fb1864296d81f6e089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_restore_bcast_mac_filter</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_restore_bcast_mac_filter</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to restore mac filter to normal mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>Normally, it is used to restore mac filter after oneshot config </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga51696c21571cd3cc5faa3a6f6d02df67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_data_recv_cb_register</definition>
        <argsstring>(tls_wifi_data_recv_callback callback)</argsstring>
        <name>tls_wifi_data_recv_cb_register</name>
        <param>
          <type><ref refid="wm__wifi_8h_1a39ef815a524fe2757fd2bda5be1e5702" kindref="member">tls_wifi_data_recv_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>This function is used to register recv wifi data callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>point to receive Wi-Fi data function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga65df62df8bb8f6c5e02da700d405425e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_data_ext_recv_cb_register</definition>
        <argsstring>(tls_wifi_data_ext_recv_callback callback)</argsstring>
        <name>tls_wifi_data_ext_recv_cb_register</name>
        <param>
          <type><ref refid="wm__wifi_8h_1ae0924a8849e49719a80e0004f25ecd2b" kindref="member">tls_wifi_data_ext_recv_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>This function is used to register recv wifi extended data callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>point to receive Wi-Fi extended data function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga5c08c2d527a7ef649fefed939501cedf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_set_oneshot_flag</definition>
        <argsstring>(u8 flag)</argsstring>
        <name>tls_wifi_set_oneshot_flag</name>
        <param>
          <type>u8</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>This function is used to set oneshot config flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">flag</parametername>
</parameternamelist>
<parameterdescription>
<para>0: closed oneshot non-zero:open oneshot</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga199859027d01d64c5d18fbe472233d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_get_oneshot_flag</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_get_oneshot_flag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to get one shot flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>oneshot closed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>oneshot open</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga96ce58c3aed78a5c730198ba402b666d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_oneshot_result_cb_register</definition>
        <argsstring>(tls_wifi_oneshot_result_callback callback)</argsstring>
        <name>tls_wifi_oneshot_result_cb_register</name>
        <param>
          <type>tls_wifi_oneshot_result_callback</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga9aa61e23cff48bb2a71b67e3ff620114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_get_oneshot_ssidpwd</definition>
        <argsstring>(u8 *ssid, u8 *pwd)</argsstring>
        <name>tls_wifi_get_oneshot_ssidpwd</name>
        <param>
          <type>u8 *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>pwd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga70fb8fa39e9231daa338320e84b6d31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_get_oneshot_customdata</definition>
        <argsstring>(u8 *data)</argsstring>
        <name>tls_wifi_get_oneshot_customdata</name>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga3631c7010c3f74cb5bf44716f5963e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_change_chanel</definition>
        <argsstring>(u32 chanid)</argsstring>
        <name>tls_wifi_change_chanel</name>
        <param>
          <type>u32</type>
          <declname>chanid</declname>
        </param>
        <briefdescription>
<para>This function is used to change channel actively. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">chanid</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>Normally, it is just used in listen mode; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gabee9432a7be07447827bdc9c12ef872a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_scan</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_scan</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to trigger scan AP. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>start scan </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_WIFI_SCANNING_BUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>scanning </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If not SUCCESS, user needs to call this function again to trigger scan </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gac9c171cbd6f47db2c51c081084f1aabe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_scan_result_cb_register</definition>
        <argsstring>(void(*callback)(void))</argsstring>
        <name>tls_wifi_scan_result_cb_register</name>
        <param>
          <type>void(*)(void)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Before calling <ref refid="group___w_m___wi-_fi___a_p_is_1gabee9432a7be07447827bdc9c12ef872a" kindref="member">tls_wifi_scan()</ref> , application should call this function to register the call back function;. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>point to callback function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>In callback function, user should send a message and return immediately. After callback called, scan result can be get by calling function tls_wifi_get_scan_rslt </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gaa17093bcf920fd66322d3252c5849713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_get_scan_rslt</definition>
        <argsstring>(u8 *buf, u32 buffer_size)</argsstring>
        <name>tls_wifi_get_scan_rslt</name>
        <param>
          <type>u8 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
<para>This function is used to get scan result. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buf to be used to store returned BSS info </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>buf size</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>User need to alloc buffer in advance. Size for one item of scan result is 43Bytes; The buffer size depends how many items user wants. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gaed36e7b7712ebd8e45436d5d392e1e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_softap_create</definition>
        <argsstring>(struct tls_softap_info_t *apinfo, struct tls_ip_info_t *ipinfo)</argsstring>
        <name>tls_wifi_softap_create</name>
        <param>
          <type>struct <ref refid="structtls__softap__info__t" kindref="compound">tls_softap_info_t</ref> *</type>
          <declname>apinfo</declname>
        </param>
        <param>
          <type>struct <ref refid="structtls__ip__info__t" kindref="compound">tls_ip_info_t</ref> *</type>
          <declname>ipinfo</declname>
        </param>
        <briefdescription>
<para>This function is used to create soft ap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">apinfo</parametername>
</parameternamelist>
<parameterdescription>
<para>softap Wi-Fi configuration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ipinfo</parametername>
</parameternamelist>
<parameterdescription>
<para>softap ip address</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_WIFI_ERR_SSID</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_WIFI_ERR_KEY</parametername>
</parameternamelist>
<parameterdescription>
<para>key info not correct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>soft ap create OK</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga43419f3bc2482d7c9c335bf7ddc523fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_softap_destroy</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_softap_destroy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to destroy soft ap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga806e4194975aca6fe3c646888905b555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" kindref="member">tls_wifi_states</ref></type>
        <definition>enum tls_wifi_states tls_wifi_softap_get_state</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_softap_get_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to get soft ap&apos;s state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>soft ap&apos;s state</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga25b736a8be44c03753ba7e566acc290b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_softap_client_event_register</definition>
        <argsstring>(tls_wifi_client_event_callback callback)</argsstring>
        <name>tls_wifi_softap_client_event_register</name>
        <param>
          <type>tls_wifi_client_event_callback</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>This function is used to register client event. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">client</parametername>
</parameternamelist>
<parameterdescription>
<para>event callback</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gaa915c36025feeb352765f82c97786aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_get_authed_sta_info</definition>
        <argsstring>(u32 *sta_num, u8 *buf, u32 buf_size)</argsstring>
        <name>tls_wifi_get_authed_sta_info</name>
        <param>
          <type>u32 *</type>
          <declname>sta_num</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
<para>This function is used to get the authed sta list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">sta_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the authed&apos;s station number</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>address to store returned station list info(struct tls_sta_info_t[])</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gafc4d6ccd5f9ac5accf9570a6cd4d5e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_ibss_create</definition>
        <argsstring>(struct tls_ibss_info_t *ibssinfo, struct tls_ibssip_info_t *ipinfo)</argsstring>
        <name>tls_wifi_ibss_create</name>
        <param>
          <type>struct <ref refid="structtls__ibss__info__t" kindref="compound">tls_ibss_info_t</ref> *</type>
          <declname>ibssinfo</declname>
        </param>
        <param>
          <type>struct <ref refid="structtls__ibssip__info__t" kindref="compound">tls_ibssip_info_t</ref> *</type>
          <declname>ipinfo</declname>
        </param>
        <briefdescription>
<para>This function is used to create or join ibss. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*ibssinfo</parametername>
</parameternamelist>
<parameterdescription>
<para>ibss Wi-Fi configuration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*ipinfo</parametername>
</parameternamelist>
<parameterdescription>
<para>ibss ip address</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>IBSS join or create ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_WIFI_ERR_SSID</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_WIFI_ERR_KEY</parametername>
</parameternamelist>
<parameterdescription>
<para>key info not correct</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Join IBSS if existed Create IBSS by SSID when not existed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gab9d87f2646073a563862211fa210366f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_disconnect</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_disconnect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to destroy or leave Wi-Fi network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>For AP, destroy soft AP For STA, leave the network by AP For IBSS, destroy or leave the IBSS network. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="596" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gafeee16f7268c37307a0aff5eb6ae06f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_connect</definition>
        <argsstring>(u8 *ssid, u8 ssid_len, u8 *pwd, u8 pwd_len)</argsstring>
        <name>tls_wifi_connect</name>
        <param>
          <type>u8 *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>ssid_len</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>pwd</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>pwd_len</declname>
        </param>
        <briefdescription>
<para>This function is used to connect AP. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>Network Name to connect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*pwd</parametername>
</parameternamelist>
<parameterdescription>
<para>password to connect AP </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pwd_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of password</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>config ok, wifi will start to connect AP; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter wrong</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>User should register Wi-Fi status callback function to get result; wifi_status_change_cb just return WIFI MAC layer status; User should register netif status callback to get TCP/IP layer status; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gaccebcd0b1e02523af086d1558a018897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_connect_by_bssid</definition>
        <argsstring>(u8 *bssid, u8 *pwd, u8 pwd_len)</argsstring>
        <name>tls_wifi_connect_by_bssid</name>
        <param>
          <type>u8 *</type>
          <declname>bssid</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>pwd</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>pwd_len</declname>
        </param>
        <briefdescription>
<para>This function is used to connect AP by BSSID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*bssid</parametername>
</parameternamelist>
<parameterdescription>
<para>BSSID to connect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*pwd</parametername>
</parameternamelist>
<parameterdescription>
<para>password to connect AP </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pwd_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of password</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>When SSID hided,this function can not be used. User should register Wi-Fi status callback function to get result; wifi_status_change_cb just return WIFI MAC layer status; User should register netif status callback to get TCP/IP layer status; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga7c18eb72b79e6711554494aaf9e0020a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_connect_by_ssid_bssid</definition>
        <argsstring>(u8 *ssid, u8 ssid_len, u8 *bssid, u8 *pwd, u8 pwd_len)</argsstring>
        <name>tls_wifi_connect_by_ssid_bssid</name>
        <param>
          <type>u8 *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>ssid_len</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>bssid</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>pwd</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>pwd_len</declname>
        </param>
        <briefdescription>
<para>This function is used to connect AP by SSID an BSSID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>Network Name to connect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of SSID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*bssid</parametername>
</parameternamelist>
<parameterdescription>
<para>BSSID to connect with SSID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*pwd</parametername>
</parameternamelist>
<parameterdescription>
<para>password to connect AP </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pwd_len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of password</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>When SSID&amp;BSSID is knonw, user can use this function to connect Wi-Fi AP. User should register Wi-Fi status callback function to get result; wifi_status_change_cb just return WIFI MAC layer status; User should register netif status callback to get TCP/IP layer status; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga7a32443f1f3011f4e4086774b01822fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_auto_connect_flag</definition>
        <argsstring>(u8 opt, u8 *mode)</argsstring>
        <name>tls_wifi_auto_connect_flag</name>
        <param>
          <type>u8</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set auto connect mode: Enable/Disable. Get auto connect mode parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">opt</parametername>
</parameternamelist>
<parameterdescription>
<para>WIFI_AUTO_CNT_FLAG_SET or WIFI_AUTO_CNT_FLAG_GET </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>WIFI_AUTO_CNT_OFF WIFI_AUTO_CNT_ON or WIFI_AUTO_CNT_TMP_OFF</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>WM_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WM_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>WIFI_AUTO_CNT_OFF Disable/d; WIFI_AUTO_CNT_ON Enable/d; WIFI_AUTO_CNT_TMP_OFF For user initiated &quot;DISCONNECT&quot;, such as AT CMD; In such case, user might expect "disconnect witout reconnection, even in WIFI_AUTO_CNT_ON status; WIFI_AUTO_CNT_TMP_OFF flag just be effective for one time of &quot;DISCONNECT&quot;; After that or reboot, the FLAG will be set to the previous value; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga8e9ebb34594c26ff66e420ed0bb9589c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_status_change_cb_register</definition>
        <argsstring>(void(*callback)(u8 status))</argsstring>
        <name>tls_wifi_status_change_cb_register</name>
        <param>
          <type>void(*)(u8 status)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>This function is used to register wifi status changed callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>point to wifi status function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>WIFI_JOIN_SUCCESS connect with wifi AP correctly in Wifi layer; No IP address WIFI_JOIN_FAILED did not connect with wifi AP; normally, timeout in 20s after start connection WIFI_DISCONNECTED STA is disconnected with AP for any case, such as wifi AP shut dow, Wi-Fi AP changed password, and so on; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="697" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga1b50af940952ec45d7ad32552fda3d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_get_current_bss</definition>
        <argsstring>(struct tls_curr_bss_t *bss)</argsstring>
        <name>tls_wifi_get_current_bss</name>
        <param>
          <type>struct <ref refid="structtls__curr__bss__t" kindref="compound">tls_curr_bss_t</ref> *</type>
          <declname>bss</declname>
        </param>
        <briefdescription>
<para>This function is used to get AP&apos;s info. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">bss</parametername>
</parameternamelist>
<parameterdescription>
<para>address where the network parameters will be write;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga9aebced2b79d4d8d010f7e3c43798ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_ethernet_data_rx_callback</definition>
        <argsstring>(net_rx_data_cb callback)</argsstring>
        <name>tls_ethernet_data_rx_callback</name>
        <param>
          <type><ref refid="wm__wifi_8h_1a81c727b3accf88c5069eeda88da55279" kindref="member">net_rx_data_cb</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>This function is used to register ETHERNET data rx callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>point to receive ETHERNET data function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga1c52421d516b50d09c4a8a2b46bc5ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_set_psflag</definition>
        <argsstring>(bool enable, bool alwaysflag)</argsstring>
        <name>tls_wifi_set_psflag</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alwaysflag</declname>
        </param>
        <briefdescription>
<para>This function is used to set powersave flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>non-zero: enable 0: disable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alwaysflag</parametername>
</parameternamelist>
<parameterdescription>
<para>0: only once, lost when restart; !0: always</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="806" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga4d435f1c3424d2433456b6775e5b11b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 tls_wifi_get_psflag</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_get_psflag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to get current powersave flag. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>power-saving disable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>non-zero</parametername>
</parameternamelist>
<parameterdescription>
<para>power-saving enable</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="818" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga84df24ff00d6f17fdefb7c32b3001867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_send_oneshotdata</definition>
        <argsstring>(u8 *dst, const u8 *ssid, u8 ssid_len)</argsstring>
        <name>tls_wifi_send_oneshotdata</name>
        <param>
          <type>u8 *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const u8 *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>ssid_len</declname>
        </param>
        <briefdescription>
<para>This function is used to send oneshot data to other sta. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>NULL , send broadcast info !NULL, send unicast info </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID to be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssid_len</parametername>
</parameternamelist>
<parameterdescription>
<para>SSID length to be sent</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gad5ec9c8768ce9141db46ba8c1cb0c303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 tls_wifi_get_tx_gain_max</definition>
        <argsstring>(enum tls_wifi_tx_rate tx_rate)</argsstring>
        <name>tls_wifi_get_tx_gain_max</name>
        <param>
          <type>enum <ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16" kindref="member">tls_wifi_tx_rate</ref></type>
          <declname>tx_rate</declname>
        </param>
        <briefdescription>
<para>This function is used to get max gain by rate index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tx_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>rate index (enum)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Max</parametername>
</parameternamelist>
<parameterdescription>
<para>Gain</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="843" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gac2856f458751b687dc9d6550dd7fca75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_send_mgmt</definition>
        <argsstring>(enum tls_wifi_mgmt_type type, struct tls_wifi_hdr_mac_t *mac, u8 *ie, u16 ie_len, struct tls_wifi_tx_rate_t *tx)</argsstring>
        <name>tls_wifi_send_mgmt</name>
        <param>
          <type>enum <ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6" kindref="member">tls_wifi_mgmt_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>struct <ref refid="structtls__wifi__hdr__mac__t" kindref="compound">tls_wifi_hdr_mac_t</ref> *</type>
          <declname>mac</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>ie</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>ie_len</declname>
        </param>
        <param>
          <type>struct <ref refid="structtls__wifi__tx__rate__t" kindref="compound">tls_wifi_tx_rate_t</ref> *</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
<para>This function is used to send 802.11 management packet. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>management packet type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*mac</parametername>
</parameternamelist>
<parameterdescription>
<para>mac address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*ie</parametername>
</parameternamelist>
<parameterdescription>
<para>information elements, if have no ie can fill NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ie_len</parametername>
</parameternamelist>
<parameterdescription>
<para>information elements length, it&apos;s zero if ie is NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*tx</parametername>
</parameternamelist>
<parameterdescription>
<para>rate and gain to transfer</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gaf9e9ad8e104a7b239d6412fb8e7177e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_send_data</definition>
        <argsstring>(struct tls_wifi_hdr_mac_t *mac, u8 *data, u16 data_len, struct tls_wifi_tx_rate_t *tx)</argsstring>
        <name>tls_wifi_send_data</name>
        <param>
          <type>struct <ref refid="structtls__wifi__hdr__mac__t" kindref="compound">tls_wifi_hdr_mac_t</ref> *</type>
          <declname>mac</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u16</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>struct <ref refid="structtls__wifi__tx__rate__t" kindref="compound">tls_wifi_tx_rate_t</ref> *</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
<para>This function is used to send 802.11 data packet. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*mac</parametername>
</parameternamelist>
<parameterdescription>
<para>mac address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*data</parametername>
</parameternamelist>
<parameterdescription>
<para>data packet buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>data packet length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*tx</parametername>
</parameternamelist>
<parameterdescription>
<para>rate and gain</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="874" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga4e543971eb7529f695ef360bd12d2215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" kindref="member">tls_wifi_states</ref></type>
        <definition>enum tls_wifi_states tls_wifi_get_state</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_get_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to get current Wi-Fi State. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Wi-Fi</parametername>
</parameternamelist>
<parameterdescription>
<para>State(enum)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="874" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga04806810b28f9c82abdb4a6ff6334dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_get_errno</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_get_errno</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to get current error number during joining AP. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Error</parametername>
</parameternamelist>
<parameterdescription>
<para>Number(WM_WIFI_ENOERR,WM_WIFI_ENOAP, WM_WIFI_EKEY,WM_WIFI_ELSI)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1gad82bec457e35cd87980ac768af606325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_perror</definition>
        <argsstring>(const char *info)</argsstring>
        <name>tls_wifi_perror</name>
        <param>
          <type>const char *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>This function is used to print current error during joining AP. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*info</parametername>
</parameternamelist>
<parameterdescription>
<para>prefix information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="922" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___w_m___wi-_fi___a_p_is_1ga1e8b5310e04e610b4a030c74d983d26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* tls_wifi_get_errinfo</definition>
        <argsstring>(int eno)</argsstring>
        <name>tls_wifi_get_errinfo</name>
        <param>
          <type>int</type>
          <declname>eno</declname>
        </param>
        <briefdescription>
<para>This function is used to get wifi error. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eno</parametername>
</parameternamelist>
<parameterdescription>
<para>error number(WM_WIFI_ENOERR,WM_WIFI_ENOAP, WM_WIFI_EKEY,WM_WIFI_ELSI)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>description</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="934" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___wi-_fi___a_p_is_1ga78bd6082218b88ead9c4b8f24dc99d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_wifi_set_opmode</definition>
        <argsstring>(u8 mode)</argsstring>
        <name>tls_wifi_set_opmode</name>
        <param>
          <type>u8</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__wifi_8h_1aaed841a0c191bc10000bf51dc2d0e4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 tls_wifi_get_opmode</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wifi_get_opmode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="945" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__wifi_8h_1a2f2a1556bdc30da42a5de4db093718e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wifi_mem_cfg</definition>
        <argsstring>(u32 startmem, u8 txcnt, u8 rxcnt)</argsstring>
        <name>tls_wifi_mem_cfg</name>
        <param>
          <type>u32</type>
          <declname>startmem</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>txcnt</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>rxcnt</declname>
        </param>
        <briefdescription>
<para>This function is used to customize wifi tx&amp;rx memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">startmem</parametername>
</parameternamelist>
<parameterdescription>
<para>memory addr, only used from 0x20028000 to 0x20048000</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">txcnt</parametername>
</parameternamelist>
<parameterdescription>
<para>wifi tx buf cnt, non -zero value</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rxcnt</parametername>
</parameternamelist>
<parameterdescription>
<para>wifi rx buf cnt, greater than 2 &amp;&amp; lower than 30</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>:successfullly &lt;0:failure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="960" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__wifi_8h_1ad3448863b523d62b86757c6b4c287a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_wl_get_isr_count</definition>
        <argsstring>(void)</argsstring>
        <name>tls_wl_get_isr_count</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/WiFi/wm_wifi.h" line="965" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wi-Fi API. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>WinnerMicro</para></simplesect>
Copyright (c) 2015 Winner Microelectronics Co., Ltd. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>TLS_WIFI_FUNC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TLS_WIFI_FUNC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>Error<sp/>definition*/</highlight></codeline>
<codeline lineno="15" refid="wm__wifi_8h_1adda3470a4c892da38430bbf9a975606b" refkind="member"><highlight class="preprocessor">#define<sp/>WM_WIFI_ERR_SSID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="wm__wifi_8h_1a85320ac6fdeb24b4d2d3f8f4df20a0d3" refkind="member"><highlight class="preprocessor">#define<sp/>WM_WIFI_ERR_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="wm__wifi_8h_1ab3d2be93ef28c4bf457433db6f071f90" refkind="member"><highlight class="preprocessor">#define<sp/>WM_WIFI_WPS_BUSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="wm__wifi_8h_1ad53949419c8e1dc6f8195d64876e0592" refkind="member"><highlight class="preprocessor">#define<sp/>WM_WIFI_SCANNING_BUSY<sp/><sp/><sp/><sp/><sp/><sp/>-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>error<sp/>number<sp/>definition<sp/>*/</highlight></codeline>
<codeline lineno="26" refid="wm__wifi_8h_1a288096e2912d93e5a0fdbad46e638ebc" refkind="member"><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>WM_WIFI_ENOERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="wm__wifi_8h_1a848a913fbca2ae86e8c9d316dddec918" refkind="member"><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>WM_WIFI_ENOAP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="wm__wifi_8h_1ad737ef722b68b93e11134593a6f953f7" refkind="member"><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>WM_WIFI_EKEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="wm__wifi_8h_1a08929c5ecd8dcf7f3eb969d47148806d" refkind="member"><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>WM_WIFI_ELSI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ETH_ALEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" refkind="member"><highlight class="preprocessor">#define<sp/>ETH_ALEN<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bss<sp/>type<sp/>definition*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IEEE80211_MODE_INFRA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="wm__wifi_8h_1ad5c621ae80539f1987b88f813285f5be" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_MODE_INFRA<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="wm__wifi_8h_1a04c40b7969e140e882afc4af0a601b0f" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_MODE_IBSS<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="wm__wifi_8h_1a0313f04af0bc24671b05e841848b89ef" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_MODE_AP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="wm__wifi_8h_1ab24260c6b4f4030b8a0dcbb97ff5666c" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="wm__wifi_8h_1a2c9eb87b78b1d740f427367ee33348d8" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_WEP40<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="wm__wifi_8h_1accae16492f553ba06780121dccacb122" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_WEP104<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="wm__wifi_8h_1a05e843a97f33bf99a6118433c4aecc06" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_TKIP_WPA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="wm__wifi_8h_1a0428535fad927a47c5b4c68263c41517" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_CCMP_WPA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="wm__wifi_8h_1a5e28bb791c524b991bfb58cd2ea7e4db" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_TKIP_WPA2<sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="wm__wifi_8h_1a244c4bf2871f3986bcb7982af6e05325" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_CCMP_WPA2<sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="wm__wifi_8h_1ae63623942fef48576cd6bae1b7a56883" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_AUTO_WPA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="wm__wifi_8h_1aebfc10c74188cfb144d0f25079ea6ee7" refkind="member"><highlight class="preprocessor">#define<sp/>IEEE80211_ENCRYT_AUTO_WPA2<sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TLS_CONFIG_WPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor">#define<sp/>WPS_PIN_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="wm__wifi_8h_1a05db62626fb0819da4b4a931f703bcf5" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_AUTO_CNT_FLAG_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="wm__wifi_8h_1a1627c34443c3f4354ff39be90c65430b" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_AUTO_CNT_FLAG_GET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="wm__wifi_8h_1ae9bd377f1648a14af573857f88a2f370" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_AUTO_CNT_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="wm__wifi_8h_1acac356fe0494d94baa9293091617322a" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_AUTO_CNT_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="wm__wifi_8h_1ac1543affe0eee1550cff92320bdb607f" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_AUTO_CNT_TMP_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="wm__wifi_8h_1ac08ad19861f4e1e974941a197c652e94" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_JOIN_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="wm__wifi_8h_1acb8adb28f049a59532fe36ce3ea17532" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_JOIN_FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="wm__wifi_8h_1aa2712af399bd986e54d9b3c80d5b42a4" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_DISCONNECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="wm__wifi_8h_1ab8816eef0469d8fb9b418846372a377d" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_SOFTAP_SUCCESS<sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="wm__wifi_8h_1a2ff54126c7a4cfe968bf190ec2f42ee9" refkind="member"><highlight class="preprocessor">#define<sp/>WIFI_SOFTAP_FAILED<sp/><sp/><sp/><sp/><sp/><sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="wm__wifi_8h_1a24a5d4397e6707dcbf5c1ae9343585ec" refkind="member"><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>WIFI_SOFTAP_CLOSED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" kindref="member">tls_wifi_states</ref><sp/>{</highlight></codeline>
<codeline lineno="102" refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a740f3ce785db8621cdb47e74b9d71ba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a740f3ce785db8621cdb47e74b9d71ba3" kindref="member">WM_WIFI_DISCONNECTED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983aac7146ddfc44abec96031153526dac68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983aac7146ddfc44abec96031153526dac68" kindref="member">WM_WIFI_SCANNING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a0fcfcce86ae64f02bec466771e6740b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a0fcfcce86ae64f02bec466771e6740b1" kindref="member">WM_WIFI_JOINING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a7d0e89f6b30da77fc1266fed7e304980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983a7d0e89f6b30da77fc1266fed7e304980" kindref="member">WM_WIFI_JOINED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6" kindref="member">tls_wifi_mgmt_type</ref><sp/>{</highlight></codeline>
<codeline lineno="110" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a1b0891368b49d979f5f55cbef845e5e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a1b0891368b49d979f5f55cbef845e5e5" kindref="member">WM_WIFI_MGMT_TYPE_ASSOC_REQ</ref><sp/><sp/><sp/><sp/>=<sp/>0x0000,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a8ec5211d17ab60d81864cdcc983238ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a8ec5211d17ab60d81864cdcc983238ba" kindref="member">WM_WIFI_MGMT_TYPE_ASSOC_RESP</ref><sp/><sp/><sp/>=<sp/>0x0010,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6acea064648f86ca70b97174a91f64b4cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6acea064648f86ca70b97174a91f64b4cb" kindref="member">WM_WIFI_MGMT_TYPE_REASSOC_REQ</ref><sp/><sp/>=<sp/>0x0020,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ac97eda62ba4d3791f98bb26a402a8f2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ac97eda62ba4d3791f98bb26a402a8f2f" kindref="member">WM_WIFI_MGMT_TYPE_REASSOC_RESP</ref><sp/>=<sp/>0x0030,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6afc29584a9170bc52e7342aca317cda18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6afc29584a9170bc52e7342aca317cda18" kindref="member">WM_WIFI_MGMT_TYPE_PROBE_REQ</ref><sp/><sp/><sp/><sp/>=<sp/>0x0040,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ae3fa1882b85405951f0dea6fc7c89776" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ae3fa1882b85405951f0dea6fc7c89776" kindref="member">WM_WIFI_MGMT_TYPE_PROBE_RESP</ref><sp/><sp/><sp/>=<sp/>0x0050,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a8dd6f1fdd78d84cc1de8eb12ac036303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a8dd6f1fdd78d84cc1de8eb12ac036303" kindref="member">WM_WIFI_MGMT_TYPE_BEACON</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0080,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ab36f22babfc0d41f83a4b2eb61fe3507" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6ab36f22babfc0d41f83a4b2eb61fe3507" kindref="member">WM_WIFI_MGMT_TYPE_ATIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0090,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a4bb307106d71cc15562360d8df7eb454" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a4bb307106d71cc15562360d8df7eb454" kindref="member">WM_WIFI_MGMT_TYPE_DISASSOC</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00A0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a731401d6fe16e02cb5451e60b1e9fb91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a731401d6fe16e02cb5451e60b1e9fb91" kindref="member">WM_WIFI_MGMT_TYPE_AUTH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00B0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a31ecd2c310052e3d42c0675af64e4c75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6a31ecd2c310052e3d42c0675af64e4c75" kindref="member">WM_WIFI_MGMT_TYPE_DEAUTH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00C0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6acff7efa7319146b43f6491e318c724dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6acff7efa7319146b43f6491e318c724dd" kindref="member">WM_WIFI_MGMT_TYPE_ACTION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00D0<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16" kindref="member">tls_wifi_tx_rate</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a67e9d84b710d9e1bd4ed160210fdde14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a67e9d84b710d9e1bd4ed160210fdde14" kindref="member">WM_WIFI_TX_RATEIDX_1M</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ab4e8d8209f2bdb0b82b44f5a1d34207e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ab4e8d8209f2bdb0b82b44f5a1d34207e" kindref="member">WM_WIFI_TX_RATEIDX_2M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a2d9ea3e42c8f1495b61cd17be38db20b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a2d9ea3e42c8f1495b61cd17be38db20b" kindref="member">WM_WIFI_TX_RATEIDX_5_5M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a4fa349cf3c6f92da027b84c9768549b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a4fa349cf3c6f92da027b84c9768549b9" kindref="member">WM_WIFI_TX_RATEIDX_11M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a47de1532b87f4424f93ca5315a52af0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a47de1532b87f4424f93ca5315a52af0b" kindref="member">WM_WIFI_TX_RATEIDX_6M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a34ff1d58576e12393ebfd56bd5e45025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a34ff1d58576e12393ebfd56bd5e45025" kindref="member">WM_WIFI_TX_RATEIDX_9M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a903dc72721d3a66487fd9f350981d3f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a903dc72721d3a66487fd9f350981d3f9" kindref="member">WM_WIFI_TX_RATEIDX_12M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aeb876bdab7c190eaa97b6ab877061af5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aeb876bdab7c190eaa97b6ab877061af5" kindref="member">WM_WIFI_TX_RATEIDX_18M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a05917dd4398faad395c1d1aa667f387c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a05917dd4398faad395c1d1aa667f387c" kindref="member">WM_WIFI_TX_RATEIDX_24M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a71403766eaf749074ed77926ccd8c35b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a71403766eaf749074ed77926ccd8c35b" kindref="member">WM_WIFI_TX_RATEIDX_36M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ab8d2d697df7e374f5766fae8928778ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ab8d2d697df7e374f5766fae8928778ce" kindref="member">WM_WIFI_TX_RATEIDX_48M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afbba8d6c0033390c6a339f05cbaeda78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afbba8d6c0033390c6a339f05cbaeda78" kindref="member">WM_WIFI_TX_RATEIDX_54M</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a91e0a4c68651aebbb5729523434806b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a91e0a4c68651aebbb5729523434806b6" kindref="member">WM_WIFI_TX_RATEIDX_MCS0</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a82e4c23d981049f96ad42f0aa80296b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a82e4c23d981049f96ad42f0aa80296b5" kindref="member">WM_WIFI_TX_RATEIDX_MCS1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16af7197b1b931809a572f74835dba53337" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16af7197b1b931809a572f74835dba53337" kindref="member">WM_WIFI_TX_RATEIDX_MCS2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ad80020b000884f4d580fa4820d119591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ad80020b000884f4d580fa4820d119591" kindref="member">WM_WIFI_TX_RATEIDX_MCS3</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ac66370791169a2436f94854cc2be7495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16ac66370791169a2436f94854cc2be7495" kindref="member">WM_WIFI_TX_RATEIDX_MCS4</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a989c439d699ebd7669424f47de65452c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a989c439d699ebd7669424f47de65452c" kindref="member">WM_WIFI_TX_RATEIDX_MCS5</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aaf57d50e4c18175a1039cc7a98ef22e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aaf57d50e4c18175a1039cc7a98ef22e9" kindref="member">WM_WIFI_TX_RATEIDX_MCS6</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afd853a2faaab2bf18c2a769dee855efb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afd853a2faaab2bf18c2a769dee855efb" kindref="member">WM_WIFI_TX_RATEIDX_MCS7</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a262fc8c3278d082e4f0791a6d4bd477c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a262fc8c3278d082e4f0791a6d4bd477c" kindref="member">WM_WIFI_TX_RATEIDX_MCS8</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16af80d3677f7f6e845aaf0e205180f8d9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16af80d3677f7f6e845aaf0e205180f8d9b" kindref="member">WM_WIFI_TX_RATEIDX_MCS9</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a12a7f39e732ba0df56900acd00fcccba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a12a7f39e732ba0df56900acd00fcccba" kindref="member">WM_WIFI_TX_RATEIDX_MCS10</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a1d087acfbc094de739d24c317848faae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a1d087acfbc094de739d24c317848faae" kindref="member">WM_WIFI_TX_RATEIDX_MCS11</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a130cebd41a09b2fdd00a28950a8fa87b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a130cebd41a09b2fdd00a28950a8fa87b" kindref="member">WM_WIFI_TX_RATEIDX_MCS12</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afe19f4b7fd76e6a8d6396043f671304c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16afe19f4b7fd76e6a8d6396043f671304c" kindref="member">WM_WIFI_TX_RATEIDX_MCS13</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a891088d893d506751337df2496c36bc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16a891088d893d506751337df2496c36bc2" kindref="member">WM_WIFI_TX_RATEIDX_MCS14</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aaecb11b7a6bef9af7fbc91a35b7b7b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16aaecb11b7a6bef9af7fbc91a35b7b7b45" kindref="member">WM_WIFI_TX_RATEIDX_MCS15</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16abf83b8030c1244bda8cb18d11d2acdd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16abf83b8030c1244bda8cb18d11d2acdd2" kindref="member">WM_WIFI_TX_RATEIDX_MCS32</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tls_wifi_oneshot_result_type<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>WM_WIFI_ONESHOT_TYPE_SSIDPWD,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>WM_WIFI_ONESHOT_TYPE_CUSTOMDATA</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tls_wifi_client_event_type<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>WM_WIFI_CLIENT_EVENT_ONLINE,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>WM_WIFI_CLIENT_EVENT_OFFLINE</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tls_wifi_op_mode{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>STATION_MODE<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>SOFTAP_MODE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>STATIONAP_MODE</highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structtls__curr__bss__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__curr__bss__t" kindref="compound">tls_curr_bss_t</ref>{</highlight></codeline>
<codeline lineno="175" refid="structtls__curr__bss__t_1a3549b1ab37c59c29e924d13c855277eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1a3549b1ab37c59c29e924d13c855277eb" kindref="member">bssid</ref>[<ref refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" kindref="member">ETH_ALEN</ref>];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="structtls__curr__bss__t_1ae7237dadb8fcbd400de05330fc02cf98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1ae7237dadb8fcbd400de05330fc02cf98" kindref="member">ssid</ref>[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177" refid="structtls__curr__bss__t_1a1c658fe6a412f5090d6f8707b6a8148e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1a1c658fe6a412f5090d6f8707b6a8148e" kindref="member">ssid_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="structtls__curr__bss__t_1a0c7131c244970197afc5e71ce87e2948" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1a0c7131c244970197afc5e71ce87e2948" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="structtls__curr__bss__t_1a15b6471b92975c9dbe2aa30ca61c80fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1a15b6471b92975c9dbe2aa30ca61c80fb" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182" refid="structtls__curr__bss__t_1a87eafed35941fb790789e49ca1336503" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1a87eafed35941fb790789e49ca1336503" kindref="member">encryptype</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187" refid="structtls__curr__bss__t_1ac1600586563947be4f44c03e7b1ff182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__curr__bss__t_1ac1600586563947be4f44c03e7b1ff182" kindref="member">rssi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structtls__key__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__key__info__t" kindref="compound">tls_key_info_t</ref>{</highlight></codeline>
<codeline lineno="192" refid="structtls__key__info__t_1a7d5ba40509867a3ca569df285a49de3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__key__info__t_1a7d5ba40509867a3ca569df285a49de3e" kindref="member">format</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="structtls__key__info__t_1ab53f1d0b5550a35bfba7673c5a4a390f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__key__info__t_1ab53f1d0b5550a35bfba7673c5a4a390f" kindref="member">index</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194" refid="structtls__key__info__t_1acb37513e47a0713f04ec079c0877e585" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__key__info__t_1acb37513e47a0713f04ec079c0877e585" kindref="member">key_len</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="structtls__key__info__t_1a1155612219ce52a3e6408707518e4f06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__key__info__t_1a1155612219ce52a3e6408707518e4f06" kindref="member">key</ref>[64];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="structtls__softap__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__softap__info__t" kindref="compound">tls_softap_info_t</ref>{</highlight></codeline>
<codeline lineno="200" refid="structtls__softap__info__t_1aabb71604b9d2283c003b6d9c61e238da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__softap__info__t_1aabb71604b9d2283c003b6d9c61e238da" kindref="member">ssid</ref>[33];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="structtls__softap__info__t_1ac7cf939c024793a662559034abc5ec2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__softap__info__t_1ac7cf939c024793a662559034abc5ec2d" kindref="member">encrypt</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206" refid="structtls__softap__info__t_1a75957b394336622b9bb5e04740f19079" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__softap__info__t_1a75957b394336622b9bb5e04740f19079" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="structtls__softap__info__t_1a6bc97db8a637a268e000c4b75e4f487e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__key__info__t" kindref="compound">tls_key_info_t</ref><sp/><ref refid="structtls__softap__info__t_1a6bc97db8a637a268e000c4b75e4f487e" kindref="member">keyinfo</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structtls__ip__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__ip__info__t" kindref="compound">tls_ip_info_t</ref>{</highlight></codeline>
<codeline lineno="212" refid="structtls__ip__info__t_1a889dce0148536ab2025ce7abec39b410" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structip__addr" kindref="compound">ip_addr</ref>[4];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="structtls__ip__info__t_1a64c8e06e2a68a3fa019148eb93a836bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ip__info__t_1a64c8e06e2a68a3fa019148eb93a836bc" kindref="member">netmask</ref>[4];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="structtls__ip__info__t_1a5ef1c85b49b99557fe7bb04093e9d95f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ip__info__t_1a5ef1c85b49b99557fe7bb04093e9d95f" kindref="member">dnsname</ref>[32];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structtls__ibss__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__ibss__info__t" kindref="compound">tls_ibss_info_t</ref>{</highlight></codeline>
<codeline lineno="219" refid="structtls__ibss__info__t_1a0e42bd9e55a557e4043f393da8c3e867" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibss__info__t_1a0e42bd9e55a557e4043f393da8c3e867" kindref="member">ssid</ref>[33];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220" refid="structtls__ibss__info__t_1a47cccfaf1b9aee5742718014ef594ff7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibss__info__t_1a47cccfaf1b9aee5742718014ef594ff7" kindref="member">encrypt</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="structtls__ibss__info__t_1acc549e24022c530ee083f8d395023676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibss__info__t_1acc549e24022c530ee083f8d395023676" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226" refid="structtls__ibss__info__t_1a690693bbf001fbd78e797667fbdd00ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__key__info__t" kindref="compound">tls_key_info_t</ref><sp/><ref refid="structtls__ibss__info__t_1a690693bbf001fbd78e797667fbdd00ee" kindref="member">keyinfo</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="structtls__ibssip__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__ibssip__info__t" kindref="compound">tls_ibssip_info_t</ref>{</highlight></codeline>
<codeline lineno="231" refid="structtls__ibssip__info__t_1a34ed9e3f2be9af92bd883113d462446d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibssip__info__t_1a34ed9e3f2be9af92bd883113d462446d" kindref="member">ip</ref>[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232" refid="structtls__ibssip__info__t_1afb156b15472434d001a0add0cfd61851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibssip__info__t_1afb156b15472434d001a0add0cfd61851" kindref="member">netmask</ref>[4];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233" refid="structtls__ibssip__info__t_1a7569bc14c13b1071a45e9b745b1a44ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibssip__info__t_1a7569bc14c13b1071a45e9b745b1a44ae" kindref="member">gateway</ref>[4];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234" refid="structtls__ibssip__info__t_1a04798d3f27c4f532ff025e3033160e6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibssip__info__t_1a04798d3f27c4f532ff025e3033160e6c" kindref="member">dns1</ref>[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="structtls__ibssip__info__t_1abcf77dcef300a67989f56a28298cab4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__ibssip__info__t_1abcf77dcef300a67989f56a28298cab4f" kindref="member">dns2</ref>[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structtls__bss__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__bss__info__t" kindref="compound">tls_bss_info_t</ref><sp/>{</highlight></codeline>
<codeline lineno="240" refid="structtls__bss__info__t_1a146aa8cdabb9647b6bdb41a5054c5c2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1a146aa8cdabb9647b6bdb41a5054c5c2f" kindref="member">bssid</ref>[<ref refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" kindref="member">ETH_ALEN</ref>];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241" refid="structtls__bss__info__t_1aeb22cbd2a7f2786b4068c0ff1e71c756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1aeb22cbd2a7f2786b4068c0ff1e71c756" kindref="member">mode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242" refid="structtls__bss__info__t_1a8fe1a0210811f4a827b1ca6a59856c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1a8fe1a0210811f4a827b1ca6a59856c91" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="structtls__bss__info__t_1a356307d906002cb6806103940ee507fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1a356307d906002cb6806103940ee507fa" kindref="member">privacy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244" refid="structtls__bss__info__t_1a7893006dea5adce150c7a850a1cc91bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1a7893006dea5adce150c7a850a1cc91bf" kindref="member">ssid_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245" refid="structtls__bss__info__t_1a0a34967e9c3805dd87a3b43e306f1a87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1a0a34967e9c3805dd87a3b43e306f1a87" kindref="member">rssi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246" refid="structtls__bss__info__t_1a41ffbef17f2f42f9653f1b2e177ccdd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__bss__info__t_1a41ffbef17f2f42f9653f1b2e177ccdd0" kindref="member">ssid</ref>[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="structtls__scan__bss__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__scan__bss__t" kindref="compound">tls_scan_bss_t</ref><sp/>{</highlight></codeline>
<codeline lineno="251" refid="structtls__scan__bss__t_1af65e6c1685c93f957b6cdd8cfe03318d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/><ref refid="structtls__scan__bss__t_1af65e6c1685c93f957b6cdd8cfe03318d" kindref="member">count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252" refid="structtls__scan__bss__t_1a673268e95dc97e5bd0940cd25678fcd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/><ref refid="structtls__scan__bss__t_1a673268e95dc97e5bd0940cd25678fcd0" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253" refid="structtls__scan__bss__t_1a2d3ce06f59ba4bbdb3d153bf4442c57c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__bss__info__t" kindref="compound">tls_bss_info_t</ref><sp/><ref refid="structtls__scan__bss__t_1a2d3ce06f59ba4bbdb3d153bf4442c57c" kindref="member">bss</ref>[1];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="structtls__sta__info__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__sta__info__t" kindref="compound">tls_sta_info_t</ref><sp/>{</highlight></codeline>
<codeline lineno="258" refid="structtls__sta__info__t_1a81d63f831115ffe2bba97af91d074308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><sp/><ref refid="structtls__sta__info__t_1a81d63f831115ffe2bba97af91d074308" kindref="member">mac_addr</ref>[<ref refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" kindref="member">ETH_ALEN</ref>];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="structtls__wifi__ext__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__wifi__ext__t" kindref="compound">tls_wifi_ext_t</ref><sp/>{</highlight></codeline>
<codeline lineno="263" refid="structtls__wifi__ext__t_1aa44bceedb0ca8ab79bd6210d69e63f20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__wifi__ext__t_1aa44bceedb0ca8ab79bd6210d69e63f20" kindref="member">rssi</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="structtls__wifi__hdr__mac__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__wifi__hdr__mac__t" kindref="compound">tls_wifi_hdr_mac_t</ref><sp/>{</highlight></codeline>
<codeline lineno="268" refid="structtls__wifi__hdr__mac__t_1ae6c7026b38acafca9328ca6bc2012fca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><sp/><ref refid="structtls__wifi__hdr__mac__t_1ae6c7026b38acafca9328ca6bc2012fca" kindref="member">da_addr</ref>[<ref refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" kindref="member">ETH_ALEN</ref>];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269" refid="structtls__wifi__hdr__mac__t_1aedc5b92a032dee327df392719f8cf524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><sp/><ref refid="structtls__wifi__hdr__mac__t_1aedc5b92a032dee327df392719f8cf524" kindref="member">sa_addr</ref>[<ref refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" kindref="member">ETH_ALEN</ref>];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270" refid="structtls__wifi__hdr__mac__t_1a3203858f16ccf37ea65b5dd836da9de7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><sp/><ref refid="structtls__wifi__hdr__mac__t_1a3203858f16ccf37ea65b5dd836da9de7" kindref="member">bssid</ref>[<ref refid="wm__wifi_8h_1a9822d89774e0d6ddaa06503950130423" kindref="member">ETH_ALEN</ref>];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="structtls__wifi__tx__rate__t" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__wifi__tx__rate__t" kindref="compound">tls_wifi_tx_rate_t</ref><sp/>{</highlight></codeline>
<codeline lineno="275" refid="structtls__wifi__tx__rate__t_1a8559501c3c855255cf2736c0a38645b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16" kindref="member">tls_wifi_tx_rate</ref><sp/><ref refid="structtls__wifi__tx__rate__t_1a8559501c3c855255cf2736c0a38645b2" kindref="member">tx_rate</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="structtls__wifi__tx__rate__t_1a17d04ecf8e5cac27b408d6bf390c251b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><ref refid="structtls__wifi__tx__rate__t_1a17d04ecf8e5cac27b408d6bf390c251b" kindref="member">tx_gain</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal">};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="wm__wifi_8h_1a39ef815a524fe2757fd2bda5be1e5702" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wm__wifi_8h_1a39ef815a524fe2757fd2bda5be1e5702" kindref="member">tls_wifi_data_recv_callback</ref>)(u8*<sp/>data,<sp/>u32<sp/>data_len);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="wm__wifi_8h_1a81c727b3accf88c5069eeda88da55279" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="wm__wifi_8h_1a81c727b3accf88c5069eeda88da55279" kindref="member">net_rx_data_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*bssid,<sp/>u8<sp/>*buf,<sp/>u32<sp/>buf_len);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="wm__wifi_8h_1ae0924a8849e49719a80e0004f25ecd2b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wm__wifi_8h_1ae0924a8849e49719a80e0004f25ecd2b" kindref="member">tls_wifi_data_ext_recv_callback</ref>)(u8*<sp/>data,<sp/>u32<sp/>data_len,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtls__wifi__ext__t" kindref="compound">tls_wifi_ext_t</ref><sp/>*ext);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaf63d9183dfe40f0a6c263034b1707c20" kindref="member">tls_wifi_set_listen_mode</ref>(u8<sp/>enable);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">u8<sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga68d3c7cd61506471ed3060a8d01b9503" kindref="member">tls_wifi_get_listen_mode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">u8<sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga5c0a5c4b2968c54ab0262bfa5c0c1200" kindref="member">tls_filter_mcast_mac</ref>(u8<sp/>*mac,<sp/>u8<sp/>receive);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gacbcc9813cca0c73b56003a1ab7a0a2de" kindref="member">tls_wifi_set_bcast_mac_filter</ref>(u8<sp/>*mac,<sp/>u8<sp/>receive,<sp/>u8<sp/>clear);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga2bc4d3075b8457fb1864296d81f6e089" kindref="member">tls_wifi_restore_bcast_mac_filter</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga51696c21571cd3cc5faa3a6f6d02df67" kindref="member">tls_wifi_data_recv_cb_register</ref>(<ref refid="wm__wifi_8h_1a39ef815a524fe2757fd2bda5be1e5702" kindref="member">tls_wifi_data_recv_callback</ref><sp/>callback);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga65df62df8bb8f6c5e02da700d405425e" kindref="member">tls_wifi_data_ext_recv_cb_register</ref>(<ref refid="wm__wifi_8h_1ae0924a8849e49719a80e0004f25ecd2b" kindref="member">tls_wifi_data_ext_recv_callback</ref><sp/>callback);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga5c08c2d527a7ef649fefed939501cedf" kindref="member">tls_wifi_set_oneshot_flag</ref>(u8<sp/>flag);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga199859027d01d64c5d18fbe472233d59" kindref="member">tls_wifi_get_oneshot_flag</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************************************</highlight></codeline>
<codeline lineno="418"><highlight class="comment">*<sp/>Description:<sp/><sp/>before<sp/>calling<sp/>tls_wifi_get_oneshot_ssidpwd<sp/>or<sp/>tls_wifi_get_oneshot_customdata,<sp/></highlight></codeline>
<codeline lineno="419"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application<sp/>should<sp/>call<sp/>this<sp/>function<sp/>to<sp/>register<sp/>the<sp/>call<sp/>back<sp/>function;</highlight></codeline>
<codeline lineno="420"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="comment">*<sp/>Arguments:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>function<sp/>pointer:</highlight></codeline>
<codeline lineno="422"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="comment">*<sp/>Return:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>None<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="comment">*<sp/>Note:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>function,<sp/>suggest<sp/>user<sp/>send<sp/>out<sp/>a<sp/>MSG<sp/>and<sp/>return<sp/>immediately.</highlight></codeline>
<codeline lineno="425"><highlight class="comment">*********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*tls_wifi_oneshot_result_callback)(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tls_wifi_oneshot_result_type<sp/>type);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tls_wifi_oneshot_result_cb_register(tls_wifi_oneshot_result_callback<sp/>callback);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************</highlight></codeline>
<codeline lineno="431"><highlight class="comment">*<sp/>Description:<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>get<sp/>one<sp/>shot<sp/>ssid<sp/>and<sp/>password<sp/>information.</highlight></codeline>
<codeline lineno="432"><highlight class="comment">*</highlight></codeline>
<codeline lineno="433"><highlight class="comment">*<sp/>Arguments<sp/><sp/>:<sp/><sp/>ssid,<sp/><sp/>wifi<sp/>name</highlight></codeline>
<codeline lineno="434"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwd,<sp/><sp/><sp/>pwssword</highlight></codeline>
<codeline lineno="435"><highlight class="comment">*</highlight></codeline>
<codeline lineno="436"><highlight class="comment">*<sp/>Returns<sp/><sp/><sp/><sp/>:<sp/><sp/>None</highlight></codeline>
<codeline lineno="437"><highlight class="comment">**********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tls_wifi_get_oneshot_ssidpwd(u8<sp/>*ssid,<sp/>u8<sp/>*pwd);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************</highlight></codeline>
<codeline lineno="441"><highlight class="comment">*<sp/>Description:<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>get<sp/>one<sp/>shot<sp/>custom<sp/>data</highlight></codeline>
<codeline lineno="442"><highlight class="comment">*</highlight></codeline>
<codeline lineno="443"><highlight class="comment">*<sp/>Arguments<sp/><sp/>:<sp/><sp/>data,<sp/><sp/>custom<sp/>data</highlight></codeline>
<codeline lineno="444"><highlight class="comment">*</highlight></codeline>
<codeline lineno="445"><highlight class="comment">*<sp/>Returns<sp/><sp/><sp/><sp/>:<sp/><sp/>None</highlight></codeline>
<codeline lineno="446"><highlight class="comment">**********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tls_wifi_get_oneshot_customdata(u8<sp/>*data);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga3631c7010c3f74cb5bf44716f5963e6b" kindref="member">tls_wifi_change_chanel</ref>(u32<sp/>chanid);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gabee9432a7be07447827bdc9c12ef872a" kindref="member">tls_wifi_scan</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gac9c171cbd6f47db2c51c081084f1aabe" kindref="member">tls_wifi_scan_result_cb_register</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaa17093bcf920fd66322d3252c5849713" kindref="member">tls_wifi_get_scan_rslt</ref>(u8*<sp/>buf,<sp/>u32<sp/>buffer_size);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaed36e7b7712ebd8e45436d5d392e1e46" kindref="member">tls_wifi_softap_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__softap__info__t" kindref="compound">tls_softap_info_t</ref>*<sp/>apinfo,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__ip__info__t" kindref="compound">tls_ip_info_t</ref>*<sp/>ipinfo);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga43419f3bc2482d7c9c335bf7ddc523fd" kindref="member">tls_wifi_softap_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" kindref="member">tls_wifi_states</ref><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga806e4194975aca6fe3c646888905b555" kindref="member">tls_wifi_softap_get_state</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*tls_wifi_client_event_callback)(u8<sp/>*mac,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tls_wifi_client_event_type<sp/>event);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga25b736a8be44c03753ba7e566acc290b" kindref="member">tls_wifi_softap_client_event_register</ref>(tls_wifi_client_event_callback<sp/>callback);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaa915c36025feeb352765f82c97786aff" kindref="member">tls_wifi_get_authed_sta_info</ref>(u32<sp/>*sta_num,<sp/>u8<sp/>*buf,<sp/>u32<sp/>buf_size);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gafc4d6ccd5f9ac5accf9570a6cd4d5e1e" kindref="member">tls_wifi_ibss_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__ibss__info__t" kindref="compound">tls_ibss_info_t</ref><sp/>*ibssinfo,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__ibssip__info__t" kindref="compound">tls_ibssip_info_t</ref><sp/>*ipinfo);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gab9d87f2646073a563862211fa210366f" kindref="member">tls_wifi_disconnect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gafeee16f7268c37307a0aff5eb6ae06f3" kindref="member">tls_wifi_connect</ref>(u8<sp/>*ssid,<sp/>u8<sp/>ssid_len,<sp/>u8<sp/>*pwd,<sp/>u8<sp/>pwd_len);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaccebcd0b1e02523af086d1558a018897" kindref="member">tls_wifi_connect_by_bssid</ref>(u8<sp/>*bssid,<sp/>u8<sp/>*pwd,<sp/>u8<sp/>pwd_len);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga7c18eb72b79e6711554494aaf9e0020a" kindref="member">tls_wifi_connect_by_ssid_bssid</ref>(u8<sp/>*ssid,<sp/>u8<sp/>ssid_len,<sp/>u8<sp/>*bssid,<sp/>u8<sp/>*pwd,<sp/>u8<sp/>pwd_len<sp/>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga7a32443f1f3011f4e4086774b01822fa" kindref="member">tls_wifi_auto_connect_flag</ref>(u8<sp/>opt,<sp/>u8*<sp/>mode);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga8e9ebb34594c26ff66e420ed0bb9589c" kindref="member">tls_wifi_status_change_cb_register</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(u8<sp/>status));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga1b50af940952ec45d7ad32552fda3d8d" kindref="member">tls_wifi_get_current_bss</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__curr__bss__t" kindref="compound">tls_curr_bss_t</ref>*<sp/>bss);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************************************</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wifi<sp/>WPS<sp/>API</highlight></codeline>
<codeline lineno="712"><highlight class="comment">*********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TLS_CONFIG_WPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tls_wps_get_pin(u8*<sp/>pin);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tls_wps_set_pin(u8*<sp/>pin,<sp/>u8<sp/>pin_len);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tls_wps_start_pin(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tls_wps_start_pbc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga9aebced2b79d4d8d010f7e3c43798ede" kindref="member">tls_ethernet_data_rx_callback</ref>(<ref refid="wm__wifi_8h_1a81c727b3accf88c5069eeda88da55279" kindref="member">net_rx_data_cb</ref><sp/>callback);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_AP_OPT_FWD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tls_ethernet_ip_rx_callback(<ref refid="wm__wifi_8h_1a81c727b3accf88c5069eeda88da55279" kindref="member">net_rx_data_cb</ref><sp/>callback);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga1c52421d516b50d09c4a8a2b46bc5ccc" kindref="member">tls_wifi_set_psflag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alwaysflag);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal">u32<sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga4d435f1c3424d2433456b6775e5b11b8" kindref="member">tls_wifi_get_psflag</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga84df24ff00d6f17fdefb7c32b3001867" kindref="member">tls_wifi_send_oneshotdata</ref>(u8<sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*ssid,<sp/>u8<sp/>ssid_len);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal">u8<sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gad5ec9c8768ce9141db46ba8c1cb0c303" kindref="member">tls_wifi_get_tx_gain_max</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a86d5b3ebcab41ccf93a21b1f7967cc16" kindref="member">tls_wifi_tx_rate</ref><sp/>tx_rate);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gac2856f458751b687dc9d6550dd7fca75" kindref="member">tls_wifi_send_mgmt</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a3b119cac813943aa528918a32c12b2a6" kindref="member">tls_wifi_mgmt_type</ref><sp/>type,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__wifi__hdr__mac__t" kindref="compound">tls_wifi_hdr_mac_t</ref><sp/>*mac,<sp/>u8<sp/>*ie,<sp/>u16<sp/>ie_len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__wifi__tx__rate__t" kindref="compound">tls_wifi_tx_rate_t</ref><sp/>*tx);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaf9e9ad8e104a7b239d6412fb8e7177e8" kindref="member">tls_wifi_send_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__wifi__hdr__mac__t" kindref="compound">tls_wifi_hdr_mac_t</ref><sp/>*mac,<sp/>u8<sp/>*data,<sp/>u16<sp/>data_len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtls__wifi__tx__rate__t" kindref="compound">tls_wifi_tx_rate_t</ref><sp/>*tx);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_AP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gaa915c36025feeb352765f82c97786aff" kindref="member">tls_wifi_get_authed_sta_info</ref>(u32<sp/>*sta_num,<sp/>u8<sp/>*buf,<sp/>u32<sp/>buf_size);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a68533ba3b74ad28ada8a0419149f7983" kindref="member">tls_wifi_states</ref><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga4e543971eb7529f695ef360bd12d2215" kindref="member">tls_wifi_get_state</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1ga04806810b28f9c82abdb4a6ff6334dac" kindref="member">tls_wifi_get_errno</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___w_m___wi-_fi___a_p_is_1gad82bec457e35cd87980ac768af606325" kindref="member">tls_wifi_perror</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*info);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group___w_m___wi-_fi___a_p_is_1ga1e8b5310e04e610b4a030c74d983d26d" kindref="member">tls_wifi_get_errinfo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eno);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tls_wifi_set_opmode(u8<sp/>mode);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal">u8<sp/>tls_wifi_get_opmode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__wifi_8h_1a2f2a1556bdc30da42a5de4db093718e5" kindref="member">tls_wifi_mem_cfg</ref>(u32<sp/>startmem,<sp/>u8<sp/>txcnt,<sp/>u8<sp/>rxcnt);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tls_wl_get_isr_count(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_WIFI_FUNC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Include/WiFi/wm_wifi.h"/>
  </compounddef>
</doxygen>
