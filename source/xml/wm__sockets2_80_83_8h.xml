<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="wm__sockets2_80_83_8h" kind="file" language="C++">
    <compoundname>wm_sockets2.0.3.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="wm__type__def_8h" local="yes">wm_type_def.h</includes>
    <includes refid="wm__config_8h" local="yes">wm_config.h</includes>
    <incdepgraph>
      <node id="258">
        <label>Include/Net/wm_sockets2.0.3.h</label>
        <link refid="wm__sockets2_80_83_8h"/>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>wm_type_def.h</label>
        <link refid="wm__type__def_8h"/>
      </node>
      <node id="263">
        <label>wm_wifi_config.h</label>
        <link refid="wm__wifi__config_8h"/>
      </node>
      <node id="262">
        <label>wm_os_config.h</label>
        <link refid="wm__os__config_8h"/>
      </node>
      <node id="261">
        <label>wm_config.h</label>
        <link refid="wm__config_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>stdio.h</label>
      </node>
      <node id="264">
        <label>wm_ram_config.h</label>
        <link refid="wm__ram__config_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structin__addr" prot="public">in_addr</innerclass>
    <innerclass refid="structin6__addr" prot="public">in6_addr</innerclass>
    <innerclass refid="structsockaddr" prot="public">sockaddr</innerclass>
    <innerclass refid="structsockaddr__storage" prot="public">sockaddr_storage</innerclass>
    <innerclass refid="structhostent" prot="public">hostent</innerclass>
    <innerclass refid="structsockaddr__store" prot="public">sockaddr_store</innerclass>
    <innerclass refid="structlinger" prot="public">linger</innerclass>
    <innerclass refid="structip__mreq" prot="public">ip_mreq</innerclass>
    <innerclass refid="structfd__set" prot="public">fd_set</innerclass>
    <innerclass refid="structtimeval" prot="public">timeval</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac7f92897f00d3373bf818709dfb0724a" prot="public" static="no">
        <name>s6_addr</name>
        <initializer>un.u8_addr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="43" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abc4b2e3531c4992f2ae4b8c0f9751544" prot="public" static="no">
        <name>IPADDR_NONE</name>
        <initializer>((u32_t)0xffffffffUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>255.255.255.255 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="47" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a6f51a2eb21547df4e6b3ba046188345e" prot="public" static="no">
        <name>IPADDR_LOOPBACK</name>
        <initializer>((u32_t)0x7f000001UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>127.0.0.1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="49" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad6ed0d622d61ecd6edd606e3b564f0a2" prot="public" static="no">
        <name>IPADDR_ANY</name>
        <initializer>((u32_t)0x00000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0.0.0.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="51" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac661fca7e7d25e5cd379b811a767c29a" prot="public" static="no">
        <name>IPADDR_BROADCAST</name>
        <initializer>((u32_t)0xffffffffUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>255.255.255.255 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="53" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a3d2472d6cf31b73eeb829110dd0fffea" prot="public" static="no">
        <name>INADDR_NONE</name>
        <initializer><ref refid="wm__sockets2_80_83_8h_1abc4b2e3531c4992f2ae4b8c0f9751544" kindref="member">IPADDR_NONE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>255.255.255.255 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="56" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ae1ac25d7797666cff6d01d6c795c2378" prot="public" static="no">
        <name>INADDR_LOOPBACK</name>
        <initializer><ref refid="wm__sockets2_80_83_8h_1a6f51a2eb21547df4e6b3ba046188345e" kindref="member">IPADDR_LOOPBACK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>127.0.0.1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="58" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a5d1940045dc2e7de552f3d4ff13a74ab" prot="public" static="no">
        <name>INADDR_ANY</name>
        <initializer><ref refid="wm__sockets2_80_83_8h_1ad6ed0d622d61ecd6edd606e3b564f0a2" kindref="member">IPADDR_ANY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>0.0.0.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="60" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4a725f61ded23ce8a7dff8e82ed51986" prot="public" static="no">
        <name>INADDR_BROADCAST</name>
        <initializer><ref refid="wm__sockets2_80_83_8h_1ac661fca7e7d25e5cd379b811a767c29a" kindref="member">IPADDR_BROADCAST</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>255.255.255.255 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="62" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a1de876a356ee05a2e9427b741f99f49c" prot="public" static="no">
        <name>IN6ADDR_ANY_INIT</name>
        <initializer>{{{0,0,0,0}}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This macro can be used to initialize a variable of type struct <ref refid="structin6__addr" kindref="compound">in6_addr</ref> to the IPv6 wildcard address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="66" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a5562c81af19ee5988ddc5a5c6153cf37" prot="public" static="no">
        <name>IN6ADDR_LOOPBACK_INIT</name>
        <initializer>{{{0,0,0,PP_HTONL(1)}}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This macro can be used to initialize a variable of type struct <ref refid="structin6__addr" kindref="compound">in6_addr</ref> to the IPv6 loopback address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="69" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4d04a8261523c8f3473946257c12ce5b" prot="public" static="no">
        <name>h_addr</name>
        <initializer>h_addr_list[0] /* for backward compatibility */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="120" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a249394484f9410a2e3f8eba24657feb9" prot="public" static="no">
        <name>SOCK_STREAM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket protocol types (TCP/UDP/RAW) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="142" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4db8b9a846c67404db0b6f014f9a9fdf" prot="public" static="no">
        <name>SOCK_DGRAM</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="143" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a346f84e37c42f88e91e7304c3d77fde8" prot="public" static="no">
        <name>SOCK_RAW</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="144" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a5589f74fada0d0cd47bd6ea8741a58ee" prot="public" static="no">
        <name>SO_REUSEADDR</name>
        <initializer>0x0004 /* Allow local address reuse */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Option flags per-socket. These must match the SOF_ flags in ip.h (checked in init.c) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="149" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0691781c519eed3f9a634f8eb55cd258" prot="public" static="no">
        <name>SO_KEEPALIVE</name>
        <initializer>0x0008 /* keep connections alive */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="150" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad05e5d66b4608d73747c4a10b802a737" prot="public" static="no">
        <name>SO_BROADCAST</name>
        <initializer>0x0020 /* permit to send and to receive broadcast messages (see IP_SOF_BROADCAST option) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="151" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9dbc641eb342d3ad19f1162305d268d6" prot="public" static="no">
        <name>SO_DEBUG</name>
        <initializer>0x0001 /* Unimplemented: turn on debugging info recording */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Additional options, not kept in so_options. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="157" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4a86a7abccf8140410bf8a64c571bd6d" prot="public" static="no">
        <name>SO_ACCEPTCONN</name>
        <initializer>0x0002 /* socket has had listen() */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="158" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4a6d9f7ea4bf046c50102c17ba1faf37" prot="public" static="no">
        <name>SO_DONTROUTE</name>
        <initializer>0x0010 /* Unimplemented: just use interface addresses */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="159" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9f051c5764666e36a27dfa7de1d5299a" prot="public" static="no">
        <name>SO_USELOOPBACK</name>
        <initializer>0x0040 /* Unimplemented: bypass hardware when possible */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="160" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a552d2cd8ffc1157c016299c5eba95b72" prot="public" static="no">
        <name>SO_LINGER</name>
        <initializer>0x0080 /* linger on close if data present */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="161" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aede2022ca89457890f6e43ed67086a86" prot="public" static="no">
        <name>SO_DONTLINGER</name>
        <initializer>((int)(~<ref refid="wm__sockets_8h_1a552d2cd8ffc1157c016299c5eba95b72" kindref="member">SO_LINGER</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="162" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a1ab39f351679dd0e32436f0e6c9890d4" prot="public" static="no">
        <name>SO_OOBINLINE</name>
        <initializer>0x0100 /* Unimplemented: leave received OOB data in line */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="163" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a36151618368affd148255e77785e365e" prot="public" static="no">
        <name>SO_REUSEPORT</name>
        <initializer>0x0200 /* Unimplemented: allow local address &amp; port reuse */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="164" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af618cbb85161ff3196d3bcdf7565ba64" prot="public" static="no">
        <name>SO_SNDBUF</name>
        <initializer>0x1001 /* Unimplemented: send buffer size */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="165" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0db12e960ac303030400d9fd95391b52" prot="public" static="no">
        <name>SO_RCVBUF</name>
        <initializer>0x1002 /* receive buffer size */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="166" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a5b4707f0d55cfacf9cd25e5554975c8f" prot="public" static="no">
        <name>SO_SNDLOWAT</name>
        <initializer>0x1003 /* Unimplemented: send low-water mark */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="167" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac750f0f8266f391654627fe3068f79c8" prot="public" static="no">
        <name>SO_RCVLOWAT</name>
        <initializer>0x1004 /* Unimplemented: receive low-water mark */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="168" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ab9d2f7ca5c94bd51cdab3e1913b66e2d" prot="public" static="no">
        <name>SO_SNDTIMEO</name>
        <initializer>0x1005 /* send timeout */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="169" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af2d1ed6a34336a6f3df80fb518325846" prot="public" static="no">
        <name>SO_RCVTIMEO</name>
        <initializer>0x1006 /* receive timeout */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="170" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a040d4fd00495232970a03425bc00e77a" prot="public" static="no">
        <name>SO_ERROR</name>
        <initializer>0x1007 /* get error status and clear */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="171" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a8ab1e00e94a92737d3a4b407f7fa90f1" prot="public" static="no">
        <name>SO_TYPE</name>
        <initializer>0x1008 /* get socket type */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="172" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a78b29d7e045bfa7fb4a1feb9ff84cfa3" prot="public" static="no">
        <name>SO_CONTIMEO</name>
        <initializer>0x1009 /* Unimplemented: connect timeout */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="173" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a88d1651c7afcaf0a010fa1ac8e35bce9" prot="public" static="no">
        <name>SO_NO_CHECK</name>
        <initializer>0x100a /* don&apos;t create UDP checksum */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="174" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a92d045f6ee2f343d6b28830a9fec082e" prot="public" static="no">
        <name>SOL_SOCKET</name>
        <initializer>0xfff    /* options for socket level */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Level number for (get/set)sockopt() to apply to socket itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="187" column="10" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ae77ae24b14b7b7f294f3e04121173f12" prot="public" static="no">
        <name>AF_UNSPEC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="190" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9930604d0e32588eae76f43ca38e7826" prot="public" static="no">
        <name>AF_INET</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="191" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aa03706b2738b9a58d4985dfbe99e1bac" prot="public" static="no">
        <name>AF_INET6</name>
        <initializer><ref refid="wm__sockets_8h_1ae77ae24b14b7b7f294f3e04121173f12" kindref="member">AF_UNSPEC</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="195" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a3f5da0b5be27fe31ec7cc11bfa8d1a25" prot="public" static="no">
        <name>PF_INET</name>
        <initializer><ref refid="wm__sockets_8h_1a9930604d0e32588eae76f43ca38e7826" kindref="member">AF_INET</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="197" column="11" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a323f2649198fc7e64b19881869265618" prot="public" static="no">
        <name>PF_INET6</name>
        <initializer><ref refid="wm__sockets_8h_1aa03706b2738b9a58d4985dfbe99e1bac" kindref="member">AF_INET6</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="198" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a51dba11ffc8e3b1bf695e721b3144094" prot="public" static="no">
        <name>PF_UNSPEC</name>
        <initializer><ref refid="wm__sockets_8h_1ae77ae24b14b7b7f294f3e04121173f12" kindref="member">AF_UNSPEC</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="199" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abf96615d54d7d81630efc2e8f1770223" prot="public" static="no">
        <name>IPPROTO_IP</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="201" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a98edd0af28e1b5f97c806c9cae442339" prot="public" static="no">
        <name>IPPROTO_ICMP</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="202" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a94f83c72c1e5e6ef453e47cf59885fb5" prot="public" static="no">
        <name>IPPROTO_TCP</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="203" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ab332d40b15142f33a88d4fcb1d6a5920" prot="public" static="no">
        <name>IPPROTO_UDP</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="204" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a76019e374e4b3301abea0090e9c5c0f6" prot="public" static="no">
        <name>IPPROTO_UDPLITE</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="209" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0154c93d7a162b8576ee47e10be53239" prot="public" static="no">
        <name>IPPROTO_RAW</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="210" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a60c35b1016d0d87fe1066ea817acad98" prot="public" static="no">
        <name>MSG_PEEK</name>
        <initializer>0x01    /* Peeks at an incoming message */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags we can use with send and recv. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="213" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0c0fac4635e91ca9d839e20a09d3989e" prot="public" static="no">
        <name>MSG_WAITALL</name>
        <initializer>0x02    /* Unimplemented: Requests that the function block until the full amount of data requested can be returned */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="214" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a99bc202592bac1adbd525f47b359b722" prot="public" static="no">
        <name>MSG_OOB</name>
        <initializer>0x04    /* Unimplemented: Requests out-of-band data. The significance and semantics of out-of-band data are protocol-specific */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="215" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ab18d3d439e4a9c8d0f73e7166e8eb376" prot="public" static="no">
        <name>MSG_DONTWAIT</name>
        <initializer>0x08    /* Nonblocking i/o for this operation only */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="216" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a7b7c7e5e523ff0fc8823e7bff7665ead" prot="public" static="no">
        <name>MSG_MORE</name>
        <initializer>0x10    /* Sender will send more */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="217" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a879a5597c2c02787d91b6a112c2660a2" prot="public" static="no">
        <name>IP_TOS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Options for level IPPROTO_IP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="223" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4e304dc3f19993aee2a94bb63ee5f2fa" prot="public" static="no">
        <name>IP_TTL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="224" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a8f02455d581f55196a37a12377ecfc0e" prot="public" static="no">
        <name>TCP_NODELAY</name>
        <initializer>0x01    /* don&apos;t delay send to coalesce packets */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="230" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a6b17e75dc74d8bc4ce0b206c29733d61" prot="public" static="no">
        <name>TCP_KEEPALIVE</name>
        <initializer>0x02    /* send KEEPALIVE probes when idle for pcb-&gt;keep_idle milliseconds */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="231" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aa603b466ef9284b35c22b7281cbaa8cb" prot="public" static="no">
        <name>TCP_KEEPIDLE</name>
        <initializer>0x03    /* set pcb-&gt;keep_idle  - Same as TCP_KEEPALIVE, but use seconds for get/setsockopt */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="232" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9c6b9a6c4de47f3d63a3aebfe576949a" prot="public" static="no">
        <name>TCP_KEEPINTVL</name>
        <initializer>0x04    /* set pcb-&gt;keep_intvl - Use seconds for get/setsockopt */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="233" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a12f91d2d736c245cb8a3dcd9ce47ea56" prot="public" static="no">
        <name>TCP_KEEPCNT</name>
        <initializer>0x05    /* set pcb-&gt;keep_cnt   - Use number of probes sent for get/setsockopt */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="234" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a1b2e3aea5b22026c1f4322cc2d78743d" prot="public" static="no">
        <name>UDPLITE_SEND_CSCOV</name>
        <initializer>0x01 /* sender checksum coverage */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Options for level IPPROTO_UDPLITE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="247" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af421f8f6f43679e0ec3b2048aec37bec" prot="public" static="no">
        <name>UDPLITE_RECV_CSCOV</name>
        <initializer>0x02 /* minimal receiver checksum coverage */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="248" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a924b1653500b7d3bf1bcef96a1a28431" prot="public" static="no">
        <name>IP_ADD_MEMBERSHIP</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Options and types related to multicast membership </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="263" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad9e530e8ee1d2a001717d40d3aa26618" prot="public" static="no">
        <name>IP_DROP_MEMBERSHIP</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="264" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4bc64f5f52739a41d25425e2190fa217" prot="public" static="no">
        <name>IPTOS_TOS_MASK</name>
        <initializer>0x1E</initializer>
        <briefdescription>
<para>The Type of Service provides an indication of the abstract parameters of the quality of service desired. These parameters are to be used to guide the selection of the actual service parameters when transmitting a datagram through a particular network. Several networks offer service precedence, which somehow treats high precedence traffic as more important than other traffic (generally by accepting only traffic above a certain precedence at time of high load). The major choice is a three way tradeoff between low-delay, high-reliability, and high-throughput. The use of the Delay, Throughput, and Reliability indications may increase the cost (in some sense) of the service. In many networks better performance for one of these parameters is coupled with worse performance on another. Except for very unusual cases at most two of these three indications should be set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="297" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a965fa6b51d3e7d9132b1413fde5eb8ab" prot="public" static="no">
        <name>IPTOS_TOS</name>
        <param><defname>tos</defname></param>
        <initializer>((tos) &amp; <ref refid="wm__sockets2_80_83_8h_1a4bc64f5f52739a41d25425e2190fa217" kindref="member">IPTOS_TOS_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="298" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a417721f0e1f1445e71fc0f55e04c7026" prot="public" static="no">
        <name>IPTOS_LOWDELAY</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="299" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a130bd030a96cdf2ad079d4d0e452af8c" prot="public" static="no">
        <name>IPTOS_THROUGHPUT</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="300" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4dab62eb6b0c87716f292a38ea179f60" prot="public" static="no">
        <name>IPTOS_RELIABILITY</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="301" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af8a4a9b6f335b1d76c2f000610087a33" prot="public" static="no">
        <name>IPTOS_LOWCOST</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="302" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a6dc4cfef3512b905e64164e25a611e54" prot="public" static="no">
        <name>IPTOS_MINCOST</name>
        <initializer>IPTOS_LOWCOST</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="303" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac8dd803ec5ce870aab899e5193ee4450" prot="public" static="no">
        <name>IPTOS_PREC_MASK</name>
        <initializer>0xe0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="314" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a7c2ec82e247b0722573cdf0fd6a23ba1" prot="public" static="no">
        <name>IPTOS_PREC</name>
        <param><defname>tos</defname></param>
        <initializer>((tos) &amp; IPTOS_PREC_MASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="315" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abbadb580e845deee10f08617b37c9f76" prot="public" static="no">
        <name>IPTOS_PREC_NETCONTROL</name>
        <initializer>0xe0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="316" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aad2536be3b05d82e79158c07c0d26142" prot="public" static="no">
        <name>IPTOS_PREC_INTERNETCONTROL</name>
        <initializer>0xc0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="317" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ae85f29854b413cd4e025c72dcab4b91b" prot="public" static="no">
        <name>IPTOS_PREC_CRITIC_ECP</name>
        <initializer>0xa0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="318" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ae3b1617689bb38814e538ee7fa8156db" prot="public" static="no">
        <name>IPTOS_PREC_FLASHOVERRIDE</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="319" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad77807141a68a553295ca04447c90d84" prot="public" static="no">
        <name>IPTOS_PREC_FLASH</name>
        <initializer>0x60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="320" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a19815ff979eaed79adc64041ac70e3ec" prot="public" static="no">
        <name>IPTOS_PREC_IMMEDIATE</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="321" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a5cf64e373ede3045bf4b1c57ce371383" prot="public" static="no">
        <name>IPTOS_PREC_PRIORITY</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="322" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abc94cde17aa2536a76fd5904fd2b25e8" prot="public" static="no">
        <name>IPTOS_PREC_ROUTINE</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="323" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a12085624b18c53c98d676ef97d617292" prot="public" static="no">
        <name>IOCPARM_MASK</name>
        <initializer>0x7fU           /* parameters must be &lt; 128 bytes */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="337" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a7871c80cdb00b01cc72dc287259a5986" prot="public" static="no">
        <name>IOC_VOID</name>
        <initializer>0x20000000UL    /* no parameters */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="338" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aefe531e01b900d7ec9446d8a72060870" prot="public" static="no">
        <name>IOC_OUT</name>
        <initializer>0x40000000UL    /* copy out parameters */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="339" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af941c6f2773d4304f947706d53fb9873" prot="public" static="no">
        <name>IOC_IN</name>
        <initializer>0x80000000UL    /* copy in parameters */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="340" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a92f2b6ee13301e2094cfe3b4762265d2" prot="public" static="no">
        <name>IOC_INOUT</name>
        <initializer>(<ref refid="wm__sockets_8h_1af941c6f2773d4304f947706d53fb9873" kindref="member">IOC_IN</ref>|<ref refid="wm__sockets_8h_1aefe531e01b900d7ec9446d8a72060870" kindref="member">IOC_OUT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="341" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a31f5ca786d9d4a1d4bf70e5e9b0d9c7a" prot="public" static="no">
        <name>_IO</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(<ref refid="wm__sockets_8h_1a7871c80cdb00b01cc72dc287259a5986" kindref="member">IOC_VOID</ref>|((x)&lt;&lt;8)|(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="344" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a619d1feb2921838fd2fbc5a3a421abb7" prot="public" static="no">
        <name>_IOR</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>t</defname></param>
        <initializer>(<ref refid="wm__sockets_8h_1aefe531e01b900d7ec9446d8a72060870" kindref="member">IOC_OUT</ref>|(((long)sizeof(t)&amp;<ref refid="wm__sockets_8h_1a12085624b18c53c98d676ef97d617292" kindref="member">IOCPARM_MASK</ref>)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="346" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ae5215f9e1f7aecf5c21e4dc182fd20ab" prot="public" static="no">
        <name>_IOW</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>t</defname></param>
        <initializer>(<ref refid="wm__sockets_8h_1af941c6f2773d4304f947706d53fb9873" kindref="member">IOC_IN</ref>|(((long)sizeof(t)&amp;<ref refid="wm__sockets_8h_1a12085624b18c53c98d676ef97d617292" kindref="member">IOCPARM_MASK</ref>)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="348" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac68826c621a12d91544dab200c86c75a" prot="public" static="no">
        <name>FIONREAD</name>
        <initializer>_IOR(&apos;f&apos;, 127, unsigned long) /* get # bytes to <ref refid="wm__sockets2_80_83_8h_1a822040573319cf87bfe6758d511be57f" kindref="member">read</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="352" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af48a6e38eb0ae226621514b44b9844eb" prot="public" static="no">
        <name>FIONBIO</name>
        <initializer>_IOW(&apos;f&apos;, 126, unsigned long) /* set/clear non-blocking i/o */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="355" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a3b5746c83986d00d3c9a4463e2007bba" prot="public" static="no">
        <name>SIOCSHIWAT</name>
        <initializer>_IOW(&apos;s&apos;,  0, unsigned long)  /* set high watermark */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket I/O Controls: unimplemented </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="360" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a33801b5543b9cfe57f0c92dee4804a7e" prot="public" static="no">
        <name>SIOCGHIWAT</name>
        <initializer>_IOR(&apos;s&apos;,  1, unsigned long)  /* get high watermark */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="361" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1acb393c38894038301db96869f117a740" prot="public" static="no">
        <name>SIOCSLOWAT</name>
        <initializer>_IOW(&apos;s&apos;,  2, unsigned long)  /* set low watermark */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="362" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1accc098bc6021029c25a91f453d5d1724" prot="public" static="no">
        <name>SIOCGLOWAT</name>
        <initializer>_IOR(&apos;s&apos;,  3, unsigned long)  /* get low watermark */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="363" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0d3de9033c4baa7dba2387516e4ba40f" prot="public" static="no">
        <name>SIOCATMARK</name>
        <initializer>_IOR(&apos;s&apos;,  7, unsigned long)  /* at oob mark? */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="364" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a025fad21a889c79f02ec53abe3526c32" prot="public" static="no">
        <name>F_GETFL</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>commands for fnctl </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="369" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af2939853c650561d3495ed40f68f6249" prot="public" static="no">
        <name>F_SETFL</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="372" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a39d33ce33804efd4d52606d59071c6d8" prot="public" static="no">
        <name>O_NONBLOCK</name>
        <initializer>1 /* nonblocking I/O */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>File status flags and file access modes for fnctl, these are bits in an int. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="378" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a63ba256ec18f373817941d5a4d0e2d5e" prot="public" static="no">
        <name>O_NDELAY</name>
        <initializer>1 /* same as <ref refid="wm__sockets2_80_83_8h_1a39d33ce33804efd4d52606d59071c6d8" kindref="member">O_NONBLOCK</ref>, for compatibility */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="381" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af1c8cf84ac37451afaef3bde9976b6e1" prot="public" static="no">
        <name>SHUT_RD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="385" column="11" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1addb0a758e6fafdd89f5b7120f84738eb" prot="public" static="no">
        <name>SHUT_WR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="386" column="11" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a80c54d1399557c97a0c81a319d08e9db" prot="public" static="no">
        <name>SHUT_RDWR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="387" column="11" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" prot="public" static="no">
        <name>LWIP_SOCKET_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FD_SET used for lwip_select </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="395" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1acb40bd726b7e15593b20a628d298f456" prot="public" static="no">
        <name>MEMP_NUM_NETCONN</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="399" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a86c5dbf5a99358e288f573d6a1e0873f" prot="public" static="no">
        <name>FD_SETSIZE</name>
        <initializer>MEMP_NUM_NETCONN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make FD_SETSIZE match NUM_SOCKETS in socket.c </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="403" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a30bea7e966155764f9e19c57cc4b8bae" prot="public" static="no">
        <name>FDSETSAFESET</name>
        <param><defname>n</defname></param>
        <param><defname>code</defname></param>
        <initializer>do { \
  if (((n) - <ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref> &lt; MEMP_NUM_NETCONN) &amp;&amp; (((int)(n) - <ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>) &gt;= 0)) { \
  code; }} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="404" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4d79f3556559f553f2d5a9b91806de28" prot="public" static="no">
        <name>FDSETSAFEGET</name>
        <param><defname>n</defname></param>
        <param><defname>code</defname></param>
        <initializer>(((n) - <ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref> &lt; MEMP_NUM_NETCONN) &amp;&amp; (((int)(n) - <ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>) &gt;= 0) ?\
  (code) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="407" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad97013c4b9982b36a8308917d5c22c52" prot="public" static="no">
        <name>FD_SET</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>FDSETSAFESET(n, (p)-&gt;fd_bits[((n)-<ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>)/8] |=  (1 &lt;&lt; (((n)-<ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>) &amp; 7)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="409" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af8400cddb6c274506ce072e1160ff09f" prot="public" static="no">
        <name>FD_CLR</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>FDSETSAFESET(n, (p)-&gt;fd_bits[((n)-<ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>)/8] &amp;= ~(1 &lt;&lt; (((n)-<ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>) &amp; 7)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="410" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9bc0a7e611c4d98105fdf031d60e29ad" prot="public" static="no">
        <name>FD_ISSET</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>FDSETSAFEGET(n, (p)-&gt;fd_bits[((n)-<ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>)/8] &amp;   (1 &lt;&lt; (((n)-<ref refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" kindref="member">LWIP_SOCKET_OFFSET</ref>) &amp; 7)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="411" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a23c97009457b26f0e96afc9d0e10876b" prot="public" static="no">
        <name>FD_ZERO</name>
        <param><defname>p</defname></param>
        <initializer>memset((void*)(p), 0, sizeof(*(p)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="412" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aaffd64f6887883ec6401e6bb684c40fa" prot="public" static="no">
        <name>LWIP_TIMEVAL_PRIVATE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LWIP_TIMEVAL_PRIVATE: if you want to use the struct timeval provided by your system, set this to 0 and include &lt;sys/time.h&gt; in cc.h </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="426" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a822040573319cf87bfe6758d511be57f" prot="public" static="no">
        <name>read</name>
        <param><defname>s</defname></param>
        <param><defname>mem</defname></param>
        <param><defname>len</defname></param>
        <initializer><ref refid="group___s_o_c_k_e_t___a_p_is_1gac98728e53b98f1b22474f48ce6658749" kindref="member">recv</ref>(s,mem,len,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="477" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0a651eb5fb5e6127f5e5153ce2251f3d" prot="public" static="no">
        <name>write</name>
        <param><defname>s</defname></param>
        <param><defname>dataptr</defname></param>
        <param><defname>len</defname></param>
        <initializer><ref refid="group___s_o_c_k_e_t___a_p_is_1gab4a2874617ed0d46a44b0da20b3850d0" kindref="member">send</ref>(s,dataptr,len,0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="479" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4ef17e85ec4d3acdcee5ce23f8ed93c4" prot="public" static="no">
        <name>close</name>
        <param><defname>s</defname></param>
        <initializer><ref refid="group___s_o_c_k_e_t___a_p_is_1gacb704989306fb22b3586d14661a3f990" kindref="member">closesocket</ref>(s)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="481" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a50a83956bc3a96e6274a21ec0d4d6338" prot="public" static="no">
        <name>ioctl</name>
        <param><defname>s</defname></param>
        <param><defname>cmd</defname></param>
        <param><defname>argp</defname></param>
        <initializer><ref refid="group___s_o_c_k_e_t___a_p_is_1ga42742239f95827a7a86461d4ddaa3d47" kindref="member">ioctlsocket</ref>(s,cmd,argp)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="483" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ab7fffd06ef1d1a7d34f99eedbb9f44dd" prot="public" static="no">
        <name>htons</name>
        <param><defname>n</defname></param>
        <initializer>(((n &amp; 0xff) &lt;&lt; 8) | ((n &amp; 0xff00) &gt;&gt; 8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="500" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af8185bfc3e242e1460a6d7de5320a875" prot="public" static="no">
        <name>htonl</name>
        <param><defname>n</defname></param>
        <initializer>(((n &amp; 0xff) &lt;&lt; 24) |\
			    				((n &amp; 0xff00) &lt;&lt; 8) |\
			   				((n &amp; 0xff0000UL) &gt;&gt; 8) |\
			    				((n &amp; 0xff000000UL) &gt;&gt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="501" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac095315f785966b573a80cf7502b654f" prot="public" static="no">
        <name>ntohs</name>
        <param><defname>n</defname></param>
        <initializer><ref refid="wm__sockets_8h_1ab7fffd06ef1d1a7d34f99eedbb9f44dd" kindref="member">htons</ref>(n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="505" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad1e59c7e2db1fdf26e5a3c4250af3e7f" prot="public" static="no">
        <name>ntohl</name>
        <param><defname>n</defname></param>
        <initializer><ref refid="wm__sockets_8h_1af8185bfc3e242e1460a6d7de5320a875" kindref="member">htonl</ref>(n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="506" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1acf56d3da92a0a7a8a62a617e793e948c" prot="public" static="no">
        <name>LWIP_MAKEU32</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>(((u32_t)((a) &amp; 0xff) &lt;&lt; 24) | \
                               ((u32_t)((b) &amp; 0xff) &lt;&lt; 16) | \
                               ((u32_t)((c) &amp; 0xff) &lt;&lt; 8)  | \
                                (u32_t)((d) &amp; 0xff))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create u32_t value from bytes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="509" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1afea9c21aa1f56180cdf6fb42ef14a294" prot="public" static="no">
        <name>PP_HTONL</name>
        <param><defname>x</defname></param>
        <initializer>((((x) &amp; 0x000000ffUL) &lt;&lt; 24) | \
                     (((x) &amp; 0x0000ff00UL) &lt;&lt;  8) | \
                     (((x) &amp; 0x00ff0000UL) &gt;&gt;  8) | \
                     (((x) &amp; 0xff000000UL) &gt;&gt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="513" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a234cb2e45cd58a80bc3ef433d23f4c57" prot="public" static="no">
        <name>IP_ADDR_PCB_VERSION_MATCH</name>
        <param><defname>addr</defname></param>
        <param><defname>pcb</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1047" column="10" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1047" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a81ed1fbe375d867d6e77c83976c07671" prot="public" static="no">
        <name>IP_ADDR_PCB_VERSION_MATCH_EXACT</name>
        <param><defname>pcb</defname></param>
        <param><defname>ipaddr</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1048" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1048" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a1266e500b1db0b7cdc4b269cace49746" prot="public" static="no">
        <name>IPADDR6_INIT</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>{ { a, b, c, d } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1096" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1096" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1adaff748da2b808995993dd3db5420f08" prot="public" static="no">
        <name>IPADDR6_INIT_HOST</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>{ { PP_HTONL(a), PP_HTONL(b), PP_HTONL(c), PP_HTONL(d) } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1097" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1097" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ab1a059f07bd9c50aa58447d963b823a1" prot="public" static="no">
        <name>IP_IS_V4_VAL</name>
        <param><defname>ipaddr</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1098" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a1578e34703e86711a7fb7dcc3857004d" prot="public" static="no">
        <name>IP_IS_V6_VAL</name>
        <param><defname>ipaddr</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1099" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abee5dab2191bb0f3355d7f30d1496f24" prot="public" static="no">
        <name>IP_IS_V4</name>
        <param><defname>ipaddr</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1100" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9bac7e938757f1d24df2404e8b57cb7d" prot="public" static="no">
        <name>IP_IS_V6</name>
        <param><defname>ipaddr</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1101" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a83b17dbf7d1faf5c8f8c20b039db8bb8" prot="public" static="no">
        <name>IP_IS_ANY_TYPE_VAL</name>
        <param><defname>ipaddr</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1102" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aaa800ce1929a1bb0f3d64bebd44e4051" prot="public" static="no">
        <name>IP_SET_TYPE_VAL</name>
        <param><defname>ipaddr</defname></param>
        <param><defname>iptype</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1103" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a4d435d88b2eaebaea1ef75ee586204fd" prot="public" static="no">
        <name>IP_SET_TYPE</name>
        <param><defname>ipaddr</defname></param>
        <param><defname>iptype</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1104" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aa2d07afd28376f89da2cdcf5d2497ce7" prot="public" static="no">
        <name>IP_GET_TYPE</name>
        <param><defname>ipaddr</defname></param>
        <initializer><ref refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585caae510fd8ec7fe405b594b57af61f9a02" kindref="member">IPADDR_TYPE_V6</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1105" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a06e75bcd198012b5ba39480c233608bd" prot="public" static="no">
        <name>ip_2_ip6</name>
        <param><defname>ipaddr</defname></param>
        <initializer>(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1106" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9ee53b601b89dcb517496ba0bccf9bd0" prot="public" static="no">
        <name>IP_ADDR6</name>
        <param><defname>ipaddr</defname></param>
        <param><defname>i0</defname></param>
        <param><defname>i1</defname></param>
        <param><defname>i2</defname></param>
        <param><defname>i3</defname></param>
        <initializer>IP6_ADDR(ipaddr,i0,i1,i2,i3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1107" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abfb1ce44d6a8791336bf3ac06aa086ca" prot="public" static="no">
        <name>IP_ADDR6_HOST</name>
        <param><defname>ipaddr</defname></param>
        <param><defname>i0</defname></param>
        <param><defname>i1</defname></param>
        <param><defname>i2</defname></param>
        <param><defname>i3</defname></param>
        <initializer>IP_ADDR6(ipaddr,PP_HTONL(i0),PP_HTONL(i1),PP_HTONL(i2),PP_HTONL(i3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1108" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a77a933975db287f6aa5c2e70249ba18f" prot="public" static="no">
        <name>ip_addr_copy</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>ip6_addr_copy(dest, src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1110" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1abe6f7908ce8a91dc587e2ebc2172e651" prot="public" static="no">
        <name>ip_addr_copy_from_ip6</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>ip6_addr_copy(dest, src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1111" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a40db7feae2b92f7a7a01d65a85b06e18" prot="public" static="no">
        <name>ip_addr_set</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>ip6_addr_set(dest, src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1112" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aea5e4795598bc33fa2db1773c8e6fbac" prot="public" static="no">
        <name>ip_addr_set_ipaddr</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>ip6_addr_set(dest, src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1113" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aae7edb585c062ae03bfbd3af7bf671bc" prot="public" static="no">
        <name>ip_addr_set_zero</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_set_zero(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1114" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1afb3a0e5241683aff573e195f31ba8845" prot="public" static="no">
        <name>ip_addr_set_zero_ip6</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_set_zero(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1115" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a8853fce54b1816dca3af90b48677e673" prot="public" static="no">
        <name>ip_addr_set_any</name>
        <param><defname>is_ipv6</defname></param>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_set_any(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1116" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a8f9d56ac85cd87338a1823e4a58ba1da" prot="public" static="no">
        <name>ip_addr_set_loopback</name>
        <param><defname>is_ipv6</defname></param>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_set_loopback(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1117" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a3528798be1d2f1ec6a6bccd35694edce" prot="public" static="no">
        <name>ip_addr_set_hton</name>
        <param><defname>dest</defname></param>
        <param><defname>src</defname></param>
        <initializer>ip6_addr_set_hton(dest, src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1118" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a535520cd0a0d08a4c4c29b331c55830f" prot="public" static="no">
        <name>ip_addr_get_network</name>
        <param><defname>target</defname></param>
        <param><defname>host</defname></param>
        <param><defname>mask</defname></param>
        <initializer>ip6_addr_set_zero(target)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1119" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a3a2123f0bbf6fe843c8542e349c680eb" prot="public" static="no">
        <name>ip_addr_netcmp</name>
        <param><defname>addr1</defname></param>
        <param><defname>addr2</defname></param>
        <param><defname>mask</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1120" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a008c9c92d770cc030ea054e6b259835a" prot="public" static="no">
        <name>ip_addr_cmp</name>
        <param><defname>addr1</defname></param>
        <param><defname>addr2</defname></param>
        <initializer>ip6_addr_cmp(addr1, addr2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1121" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a279118890e6a90aa740051fb8b0cc5f4" prot="public" static="no">
        <name>ip_addr_isany</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_isany(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1122" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1acd8f5aa151cff966fd28368b85f38c05" prot="public" static="no">
        <name>ip_addr_isany_val</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_isany_val(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1123" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a0fc8bf6662809274750868683b3a422e" prot="public" static="no">
        <name>ip_addr_isloopback</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_isloopback(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1124" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a33bc079baaf513a9a7381b9531a1f653" prot="public" static="no">
        <name>ip_addr_islinklocal</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_islinklocal(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1125" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a11275b39f9b8e876e8124a16410e8840" prot="public" static="no">
        <name>ip_addr_isbroadcast</name>
        <param><defname>addr</defname></param>
        <param><defname>netif</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1126" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a2170d3ee13dd22722222228e7b1c5752" prot="public" static="no">
        <name>ip_addr_ismulticast</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_ismulticast(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1127" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1af7d84bce2fb861a97f3047ecd69ab018" prot="public" static="no">
        <name>ip_addr_debug_print</name>
        <param><defname>debug</defname></param>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_debug_print(debug, ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1128" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac3d7eec8027db2203117e6f30df8fba5" prot="public" static="no">
        <name>ip_addr_debug_print_val</name>
        <param><defname>debug</defname></param>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6_addr_debug_print_val(debug, ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1129" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ad345f630acbf2a01536d10d3aacee04f" prot="public" static="no">
        <name>ipaddr_ntoa</name>
        <param><defname>ipaddr</defname></param>
        <initializer>ip6addr_ntoa(ipaddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1130" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ac5a2215f804102c72f59dcdf1ccf6449" prot="public" static="no">
        <name>ipaddr_ntoa_r</name>
        <param><defname>ipaddr</defname></param>
        <param><defname>buf</defname></param>
        <param><defname>buflen</defname></param>
        <initializer>ip6addr_ntoa_r(ipaddr, buf, buflen)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1131" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a9b9fae6ad88a288c3c6da050644e2a48" prot="public" static="no">
        <name>ipaddr_aton</name>
        <param><defname>cp</defname></param>
        <param><defname>addr</defname></param>
        <initializer>ip6addr_aton(cp, addr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1132" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a8619278bcbf705844f584f36972fc758" prot="public" static="no">
        <name>IPADDR_STRLEN_MAX</name>
        <initializer>IP6ADDR_STRLEN_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1134" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1ae221446ab455b8a1a0d2a4153b9c1bb3" prot="public" static="no">
        <name>IP46_ADDR_ANY</name>
        <param><defname>type</defname></param>
        <initializer>(IP6_ADDR_ANY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1136" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a93b37007689284fd9c4bde1a8f4b9199" prot="public" static="no">
        <name>INET_ADDRSTRLEN</name>
        <initializer>IP4ADDR_STRLEN_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1142" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1aa40bf11abb409097e68aa3a6982eb52b" prot="public" static="no">
        <name>inet_ntop</name>
        <param><defname>af</defname></param>
        <param><defname>src</defname></param>
        <param><defname>dst</defname></param>
        <param><defname>size</defname></param>
        <initializer>(((af) == <ref refid="wm__sockets_8h_1aa03706b2738b9a58d4985dfbe99e1bac" kindref="member">AF_INET6</ref>) ? ip6addr_ntoa_r((const ip6_addr_t*)(src),(dst),(size)) : NULL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1165" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets2_80_83_8h_1a90d2b417d82e8da981c940a665324fd5" prot="public" static="no">
        <name>inet_pton</name>
        <param><defname>af</defname></param>
        <param><defname>src</defname></param>
        <param><defname>dst</defname></param>
        <initializer>(((af) == <ref refid="wm__sockets_8h_1aa03706b2738b9a58d4985dfbe99e1bac" kindref="member">AF_INET6</ref>) ? ip6addr_aton((src),(ip6_addr_t*)(dst)) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1167" column="9" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585c" prot="public" static="no" strong="no">
        <type></type>
        <name>lwip_ip_addr_type</name>
        <enumvalue id="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585cace47fa82608deeb1c1c7c2c891eb5049" prot="public">
          <name>IPADDR_TYPE_V4</name>
          <initializer>=   0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IPv4 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585caae510fd8ec7fe405b594b57af61f9a02" prot="public">
          <name>IPADDR_TYPE_V6</name>
          <initializer>=   6U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IPv6 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585cac6b2c99cf920e08efcb55dc40e42944e" prot="public">
          <name>IPADDR_TYPE_ANY</name>
          <initializer>= 46U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IPv4+IPv6 (&quot;dual-stack&quot;) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP address types for use in ip_addr_t.type member. <simplesect kind="see"><para>tcp_new_ip_type(), udp_new_ip_type(), raw_new_ip_type(). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="863" column="1" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="863" bodyend="870"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1ac1d1bf0e58741cf5e92739411d9e848f" prot="public" static="no">
        <type>u8_t</type>
        <definition>typedef u8_t sa_family_t</definition>
        <argsstring></argsstring>
        <name>sa_family_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If your port already typedef&apos;s sa_family_t, define SA_FAMILY_T_DEFINED to prevent this code from redefining it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="20" column="1" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1ae8ae7e0167cd5587b7403e02f202ddd9" prot="public" static="no">
        <type>u16_t</type>
        <definition>typedef u16_t in_port_t</definition>
        <argsstring></argsstring>
        <name>in_port_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If your port already typedef&apos;s in_port_t, define IN_PORT_T_DEFINED to prevent this code from redefining it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="25" column="1" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1ab4fa3cac7cd90edc5ceb4efca7ec0059" prot="public" static="no">
        <type>u32_t</type>
        <definition>typedef u32_t in_addr_t</definition>
        <argsstring></argsstring>
        <name>in_addr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If your port already typedef&apos;s in_addr_t, define IN_ADDR_T_DEFINED to prevent this code from redefining it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="31" column="1" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1a5e71e24cf38c5d7049bf949c895429af" prot="public" static="no">
        <type>u32_t</type>
        <definition>typedef u32_t socklen_t</definition>
        <argsstring></argsstring>
        <name>socklen_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If your port already typedef&apos;s socklen_t, define SOCKLEN_T_DEFINED to prevent this code from redefining it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="136" column="1" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1aa4d37763f8765fcd6df959b08d738c14" prot="public" static="no">
        <type>struct <ref refid="structip__mreq" kindref="compound">ip_mreq</ref></type>
        <definition>typedef struct ip_mreq  ip_mreq</definition>
        <argsstring></argsstring>
        <name>ip_mreq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1af0ed703bf1724b9af3e4d30d0cc932af" prot="public" static="no">
        <type>struct <ref refid="structfd__set" kindref="compound">fd_set</ref></type>
        <definition>typedef struct fd_set  fd_set</definition>
        <argsstring></argsstring>
        <name>fd_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets2_80_83_8h_1a88b43639738c4de2d3cd22e3a1fd7696" prot="public" static="no">
        <type>ip6_addr_t</type>
        <definition>typedef ip6_addr_t ip_addr_t</definition>
        <argsstring></argsstring>
        <name>ip_addr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1095" column="1" bodyfile="Include/Net/wm_sockets2.0.3.h" bodystart="1095" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="wm__sockets2_80_83_8h_1af8c97553060738d9edd6bfeab13ef7c3" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structin6__addr" kindref="compound">in6_addr</ref></type>
        <definition>const struct in6_addr in6addr_any</definition>
        <argsstring></argsstring>
        <name>in6addr_any</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This variable is initialized by the system to contain the wildcard IPv6 address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="31" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1aaaf2f15c3d464ebd84caabb51920c4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int accept</definition>
        <argsstring>(int s, struct sockaddr *addr, socklen_t *addrlen)</argsstring>
        <name>accept</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a8dca0ad474f0bb98c58283c151d6e2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bind</definition>
        <argsstring>(int s, const struct sockaddr *name, socklen_t namelen)</argsstring>
        <name>bind</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a8744a596bc9132c457bcce518fb854dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shutdown</definition>
        <argsstring>(int s, int how)</argsstring>
        <name>shutdown</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>how</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1acb704989306fb22b3586d14661a3f990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int closesocket</definition>
        <argsstring>(int s)</argsstring>
        <name>closesocket</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a30a78fb09c5f8eb192eb9da70babda64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int connect</definition>
        <argsstring>(int s, const struct sockaddr *name, socklen_t namelen)</argsstring>
        <name>connect</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a7bafa2b03fec4e2d4e7492269b262975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getsockname</definition>
        <argsstring>(int s, struct sockaddr *name, socklen_t *namelen)</argsstring>
        <name>getsockname</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a4f016ffafb303902b981988fdc675940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getpeername</definition>
        <argsstring>(int s, struct sockaddr *name, socklen_t *namelen)</argsstring>
        <name>getpeername</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a3437a49823cdfa961c994aaaf661bd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setsockopt</definition>
        <argsstring>(int s, int level, int optname, const void *optval, socklen_t optlen)</argsstring>
        <name>setsockopt</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>optval</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>optlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1aad5e3dc6d10cb45c3d98038a5733980c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getsockopt</definition>
        <argsstring>(int s, int level, int optname, void *optval, socklen_t *optlen)</argsstring>
        <name>getsockopt</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>optval</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>optlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1add5137ee4523809b8e087345ff5dae6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int listen</definition>
        <argsstring>(int s, int backlog)</argsstring>
        <name>listen</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backlog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1ac98728e53b98f1b22474f48ce6658749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int recv</definition>
        <argsstring>(int s, void *mem, size_t len, int flags)</argsstring>
        <name>recv</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a0add4d77d9f1142e0256df85c5c4d992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int recvfrom</definition>
        <argsstring>(int s, void *mem, size_t len, int flags, struct sockaddr *from, socklen_t *fromlen)</argsstring>
        <name>recvfrom</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>fromlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1ab4a2874617ed0d46a44b0da20b3850d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int send</definition>
        <argsstring>(int s, const void *data, size_t size, int flags)</argsstring>
        <name>send</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a7d0859ad197b472a5fd930872dab8763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sendto</definition>
        <argsstring>(int s, const void *data, size_t size, int flags, const struct sockaddr *to, socklen_t tolen)</argsstring>
        <name>sendto</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>tolen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1af4e0711877c45a41168ac677b0670ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int socket</definition>
        <argsstring>(int domain, int type, int protocol)</argsstring>
        <name>socket</name>
        <param>
          <type>int</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a7697c5e2abe442fee5267ff362eff0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int select</definition>
        <argsstring>(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset, struct timeval *timeout)</argsstring>
        <name>select</name>
        <param>
          <type>int</type>
          <declname>maxfdp1</declname>
        </param>
        <param>
          <type><ref refid="structfd__set" kindref="compound">fd_set</ref> *</type>
          <declname>readset</declname>
        </param>
        <param>
          <type><ref refid="structfd__set" kindref="compound">fd_set</ref> *</type>
          <declname>writeset</declname>
        </param>
        <param>
          <type><ref refid="structfd__set" kindref="compound">fd_set</ref> *</type>
          <declname>exceptset</declname>
        </param>
        <param>
          <type>struct <ref refid="structtimeval" kindref="compound">timeval</ref> *</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a42742239f95827a7a86461d4ddaa3d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ioctlsocket</definition>
        <argsstring>(int s, long cmd, void *argp)</argsstring>
        <name>ioctlsocket</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1ab80c6b00ff4bad5290333b912c4c7ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fcntl</definition>
        <argsstring>(int s, int cmd, int val)</argsstring>
        <name>fcntl</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a636674bf9937205b85a797ee6077faa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structhostent" kindref="compound">hostent</ref> *</type>
        <definition>struct hostent* gethostbyname</definition>
        <argsstring>(const char *name)</argsstring>
        <name>gethostbyname</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1a2c05f9138da41115978409e547df9670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32_t</type>
        <definition>u32_t ipaddr_addr</definition>
        <argsstring>(const char *cp)</argsstring>
        <name>ipaddr_addr</name>
        <param>
          <type>const char *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="wm__sockets2_80_83_8h_1ab3b2881511189b0973cf61289cb4460b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_ipaddr</definition>
        <argsstring>(ip_addr_t *ip)</argsstring>
        <name>print_ipaddr</name>
        <param>
          <type><ref refid="wm__netif_8h_1a335a8c9df66319e88a1a529047ce0a1e" kindref="member">ip_addr_t</ref> *</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets2.0.3.h" line="1171" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>sockets2.0.3 apis </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>winnermicro</para></simplesect>
<simplesect kind="copyright"><para>(c) 2014 Winner Microelectronics Co., Ltd. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>WM_SOCKET_API2_0_3_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WM_SOCKET_API2_0_3_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__type__def_8h" kindref="compound">wm_type_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__config_8h" kindref="compound">wm_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor">#if<sp/>!defined(sa_family_t)<sp/>&amp;&amp;<sp/>!defined(SA_FAMILY_T_DEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="wm__sockets2_80_83_8h_1ac1d1bf0e58741cf5e92739411d9e848f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u8_t<sp/><ref refid="wm__sockets2_80_83_8h_1ac1d1bf0e58741cf5e92739411d9e848f" kindref="member">sa_family_t</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#if<sp/>!defined(in_port_t)<sp/>&amp;&amp;<sp/>!defined(IN_PORT_T_DEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="wm__sockets2_80_83_8h_1ae8ae7e0167cd5587b7403e02f202ddd9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u16_t<sp/><ref refid="wm__sockets2_80_83_8h_1ae8ae7e0167cd5587b7403e02f202ddd9" kindref="member">in_port_t</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">#if<sp/>!defined(in_addr_t)<sp/>&amp;&amp;<sp/>!defined(IN_ADDR_T_DEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="wm__sockets2_80_83_8h_1ab4fa3cac7cd90edc5ceb4efca7ec0059" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u32_t<sp/><ref refid="wm__sockets2_80_83_8h_1ab4fa3cac7cd90edc5ceb4efca7ec0059" kindref="member">in_addr_t</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structin__addr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="wm__sockets2_80_83_8h_1ab4fa3cac7cd90edc5ceb4efca7ec0059" kindref="member">in_addr_t</ref><sp/>s_addr;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>u32_addr[4];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/><sp/>u8_addr[16];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}<sp/>un;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>s6_addr<sp/><sp/>un.u8_addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="wm__sockets2_80_83_8h_1abc4b2e3531c4992f2ae4b8c0f9751544" refkind="member"><highlight class="preprocessor">#define<sp/>IPADDR_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((u32_t)0xffffffffUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="wm__sockets2_80_83_8h_1a6f51a2eb21547df4e6b3ba046188345e" refkind="member"><highlight class="preprocessor">#define<sp/>IPADDR_LOOPBACK<sp/><sp/><sp/><sp/><sp/>((u32_t)0x7f000001UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="wm__sockets2_80_83_8h_1ad6ed0d622d61ecd6edd606e3b564f0a2" refkind="member"><highlight class="preprocessor">#define<sp/>IPADDR_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((u32_t)0x00000000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="wm__sockets2_80_83_8h_1ac661fca7e7d25e5cd379b811a767c29a" refkind="member"><highlight class="preprocessor">#define<sp/>IPADDR_BROADCAST<sp/><sp/><sp/><sp/>((u32_t)0xffffffffUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="wm__sockets2_80_83_8h_1a3d2472d6cf31b73eeb829110dd0fffea" refkind="member"><highlight class="preprocessor">#define<sp/>INADDR_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPADDR_NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="wm__sockets2_80_83_8h_1ae1ac25d7797666cff6d01d6c795c2378" refkind="member"><highlight class="preprocessor">#define<sp/>INADDR_LOOPBACK<sp/><sp/><sp/><sp/><sp/>IPADDR_LOOPBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="wm__sockets2_80_83_8h_1a5d1940045dc2e7de552f3d4ff13a74ab" refkind="member"><highlight class="preprocessor">#define<sp/>INADDR_ANY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPADDR_ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="wm__sockets2_80_83_8h_1a4a725f61ded23ce8a7dff8e82ed51986" refkind="member"><highlight class="preprocessor">#define<sp/>INADDR_BROADCAST<sp/><sp/><sp/><sp/>IPADDR_BROADCAST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="wm__sockets2_80_83_8h_1a1de876a356ee05a2e9427b741f99f49c" refkind="member"><highlight class="preprocessor">#define<sp/>IN6ADDR_ANY_INIT<sp/>{{{0,0,0,0}}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="wm__sockets2_80_83_8h_1a5562c81af19ee5988ddc5a5c6153cf37" refkind="member"><highlight class="preprocessor">#define<sp/>IN6ADDR_LOOPBACK_INIT<sp/>{{{0,0,0,PP_HTONL(1)}}}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/><ref refid="wm__sockets2_80_83_8h_1af8c97553060738d9edd6bfeab13ef7c3" kindref="member">in6addr_any</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr__in" kindref="compound">sockaddr_in</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>u8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsockaddr__in_1a5a44d7c63f2a63207889253dbf8771ac" kindref="member">sin_len</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>sa_family_t<sp/><sp/><sp/><sp/><sp/><ref refid="structsockaddr__in_1ab49bcca40b28a0c8eb0a2941ca098795" kindref="member">sin_family</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>in_port_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsockaddr__in_1a44f9f5870495104b62d7753d88f40ee3" kindref="member">sin_port</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/><sp/><ref refid="structsockaddr__in_1afdcaa232019d7b23d7c2e9b0367a9adc" kindref="member">sin_addr</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIN_ZERO_LEN<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsockaddr__in_1a0254bfac1c18e922cb6638c3f6139e09" kindref="member">sin_zero</ref>[SIN_ZERO_LEN];</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV4<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr__in6" kindref="compound">sockaddr_in6</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>u8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_len;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>this<sp/>structure<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>sa_family_t<sp/><sp/><sp/><sp/><sp/>sin6_family;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AF_INET6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>in_port_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_port;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transport<sp/>layer<sp/>port<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>u32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_flowinfo;<sp/></highlight><highlight class="comment">/*<sp/>IPv6<sp/>flow<sp/>information<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>sin6_addr;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IPv6<sp/>address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>u32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_scope_id;<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>of<sp/>interfaces<sp/>for<sp/>scope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>u8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsockaddr_1ace648295d8600b1564a45cdfdf4ce836" kindref="member">sa_len</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>sa_family_t<sp/><ref refid="structsockaddr_1a855eb400750c566f67bca1ab16bcbfe1" kindref="member">sa_family</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsockaddr_1a82791edaa35776a38d75182edb0f5a3d" kindref="member">sa_data</ref>[14];</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="structsockaddr__storage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr__storage" kindref="compound">sockaddr_storage</ref><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>u8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_len;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>sa_family_t<sp/>ss_family;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_data1[2];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>u32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_data2[3];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>u32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_data3[3];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhostent" kindref="compound">hostent</ref><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structhostent_1a2673b3effc9688880551140d4d683454" kindref="member">h_name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Official<sp/>name<sp/>of<sp/>the<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structhostent_1a4531fae316926d6a9f9ea3c5c9c673ec" kindref="member">h_aliases</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>pointer<sp/>to<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>alternative<sp/>host<sp/>names,</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terminated<sp/>by<sp/>a<sp/>null<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhostent_1a405ebb31a6922898809635b03f0faf06" kindref="member">h_addrtype</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Address<sp/>type.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhostent_1ab9db18bfcc6adfc9c944b0c06ec2dccc" kindref="member">h_length</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>length,<sp/>in<sp/>bytes,<sp/>of<sp/>the<sp/>address.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structhostent_1a724d319362cb1558e899960ba17ad953" kindref="member">h_addr_list</ref>;<sp/></highlight><highlight class="comment">/*<sp/>A<sp/>pointer<sp/>to<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>network<sp/>addresses<sp/>(in</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network<sp/>byte<sp/>order)<sp/>for<sp/>the<sp/>host,<sp/>terminated<sp/>by<sp/>a<sp/>null<sp/>pointer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>h_addr<sp/>h_addr_list[0]<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>backward<sp/>compatibility<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structsockaddr__store" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr__store" kindref="compound">sockaddr_store</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>u8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_len;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>sa_family_t<sp/>ss_family;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_data1[2];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>u32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_data2[3];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>u32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2_data3[3];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor">#if<sp/>!defined(socklen_t)<sp/>&amp;&amp;<sp/>!defined(SOCKLEN_T_DEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="wm__sockets2_80_83_8h_1a5e71e24cf38c5d7049bf949c895429af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u32_t<sp/><ref refid="wm__sockets2_80_83_8h_1a5e71e24cf38c5d7049bf949c895429af" kindref="member">socklen_t</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lwip_sock;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="wm__sockets2_80_83_8h_1a249394484f9410a2e3f8eba24657feb9" refkind="member"><highlight class="preprocessor">#define<sp/>SOCK_STREAM<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOCK_DGRAM<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOCK_RAW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="wm__sockets2_80_83_8h_1a5589f74fada0d0cd47bd6ea8741a58ee" refkind="member"><highlight class="preprocessor">#define<sp/>SO_REUSEADDR<sp/><sp/><sp/>0x0004<sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>local<sp/>address<sp/>reuse<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_KEEPALIVE<sp/><sp/><sp/>0x0008<sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>connections<sp/>alive<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_BROADCAST<sp/><sp/><sp/>0x0020<sp/></highlight><highlight class="comment">/*<sp/>permit<sp/>to<sp/>send<sp/>and<sp/>to<sp/>receive<sp/>broadcast<sp/>messages<sp/>(see<sp/>IP_SOF_BROADCAST<sp/>option)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="wm__sockets2_80_83_8h_1a9dbc641eb342d3ad19f1162305d268d6" refkind="member"><highlight class="preprocessor">#define<sp/>SO_DEBUG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>turn<sp/>on<sp/>debugging<sp/>info<sp/>recording<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_ACCEPTCONN<sp/><sp/>0x0002<sp/></highlight><highlight class="comment">/*<sp/>socket<sp/>has<sp/>had<sp/>listen()<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_DONTROUTE<sp/><sp/><sp/>0x0010<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>just<sp/>use<sp/>interface<sp/>addresses<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_USELOOPBACK<sp/>0x0040<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>bypass<sp/>hardware<sp/>when<sp/>possible<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_LINGER<sp/><sp/><sp/><sp/><sp/><sp/>0x0080<sp/></highlight><highlight class="comment">/*<sp/>linger<sp/>on<sp/>close<sp/>if<sp/>data<sp/>present<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_DONTLINGER<sp/><sp/>((int)(~SO_LINGER))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_OOBINLINE<sp/><sp/><sp/>0x0100<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>leave<sp/>received<sp/>OOB<sp/>data<sp/>in<sp/>line<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_REUSEPORT<sp/><sp/><sp/>0x0200<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>allow<sp/>local<sp/>address<sp/>&amp;<sp/>port<sp/>reuse<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_SNDBUF<sp/><sp/><sp/><sp/><sp/><sp/>0x1001<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>send<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_RCVBUF<sp/><sp/><sp/><sp/><sp/><sp/>0x1002<sp/></highlight><highlight class="comment">/*<sp/>receive<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_SNDLOWAT<sp/><sp/><sp/><sp/>0x1003<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>send<sp/>low-water<sp/>mark<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_RCVLOWAT<sp/><sp/><sp/><sp/>0x1004<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>receive<sp/>low-water<sp/>mark<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_SNDTIMEO<sp/><sp/><sp/><sp/>0x1005<sp/></highlight><highlight class="comment">/*<sp/>send<sp/>timeout<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_RCVTIMEO<sp/><sp/><sp/><sp/>0x1006<sp/></highlight><highlight class="comment">/*<sp/>receive<sp/>timeout<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1007<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>error<sp/>status<sp/>and<sp/>clear<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_TYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1008<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>socket<sp/>type<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_CONTIMEO<sp/><sp/><sp/><sp/>0x1009<sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>connect<sp/>timeout<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SO_NO_CHECK<sp/><sp/><sp/><sp/>0x100a<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>create<sp/>UDP<sp/>checksum<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlinger" kindref="compound">linger</ref><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlinger_1aa917aeadf061af6ed64aad87df3255fc" kindref="member">l_onoff</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>option<sp/>on/off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlinger_1a2b7d01c9a43f95d2ba6f6cf0ec68b412" kindref="member">l_linger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>linger<sp/>time<sp/>in<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="wm__sockets2_80_83_8h_1a92d045f6ee2f343d6b28830a9fec082e" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SOL_SOCKET<sp/><sp/>0xfff<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>options<sp/>for<sp/>socket<sp/>level<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_UNSPEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_INET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_INET6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AF_INET6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_UNSPEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PF_INET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_INET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PF_INET6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_INET6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PF_UNSPEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_UNSPEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_IP<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_ICMP<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_TCP<sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_UDP<sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_IPV6<sp/><sp/><sp/><sp/>41</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_ICMPV6<sp/><sp/>58</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_UDPLITE<sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPPROTO_RAW<sp/><sp/><sp/><sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="wm__sockets2_80_83_8h_1a60c35b1016d0d87fe1066ea817acad98" refkind="member"><highlight class="preprocessor">#define<sp/>MSG_PEEK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Peeks<sp/>at<sp/>an<sp/>incoming<sp/>message<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_WAITALL<sp/><sp/><sp/><sp/>0x02<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>Requests<sp/>that<sp/>the<sp/>function<sp/>block<sp/>until<sp/>the<sp/>full<sp/>amount<sp/>of<sp/>data<sp/>requested<sp/>can<sp/>be<sp/>returned<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_OOB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unimplemented:<sp/>Requests<sp/>out-of-band<sp/>data.<sp/>The<sp/>significance<sp/>and<sp/>semantics<sp/>of<sp/>out-of-band<sp/>data<sp/>are<sp/>protocol-specific<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_DONTWAIT<sp/><sp/><sp/>0x08<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nonblocking<sp/>i/o<sp/>for<sp/>this<sp/>operation<sp/>only<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_MORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sender<sp/>will<sp/>send<sp/>more<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="wm__sockets2_80_83_8h_1a879a5597c2c02787d91b6a112c2660a2" refkind="member"><highlight class="preprocessor">#define<sp/>IP_TOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_TTL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>Options<sp/>for<sp/>level<sp/>IPPROTO_TCP</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_NODELAY<sp/><sp/><sp/><sp/>0x01<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>delay<sp/>send<sp/>to<sp/>coalesce<sp/>packets<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_KEEPALIVE<sp/><sp/>0x02<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>KEEPALIVE<sp/>probes<sp/>when<sp/>idle<sp/>for<sp/>pcb-&gt;keep_idle<sp/>milliseconds<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_KEEPIDLE<sp/><sp/><sp/>0x03<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>pcb-&gt;keep_idle<sp/><sp/>-<sp/>Same<sp/>as<sp/>TCP_KEEPALIVE,<sp/>but<sp/>use<sp/>seconds<sp/>for<sp/>get/setsockopt<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_KEEPINTVL<sp/><sp/>0x04<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>pcb-&gt;keep_intvl<sp/>-<sp/>Use<sp/>seconds<sp/>for<sp/>get/setsockopt<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TCP_KEEPCNT<sp/><sp/><sp/><sp/>0x05<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>pcb-&gt;keep_cnt<sp/><sp/><sp/>-<sp/>Use<sp/>number<sp/>of<sp/>probes<sp/>sent<sp/>for<sp/>get/setsockopt<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor">#define<sp/>IPV6_CHECKSUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/></highlight><highlight class="comment">/*<sp/>RFC3542:<sp/>calculate<sp/>and<sp/>insert<sp/>the<sp/>ICMPv6<sp/>checksum<sp/>for<sp/>raw<sp/>sockets.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPV6_V6ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27<sp/></highlight><highlight class="comment">/*<sp/>RFC3493:<sp/>boolean<sp/>control<sp/>to<sp/>restrict<sp/>AF_INET6<sp/>sockets<sp/>to<sp/>IPv6<sp/>communications<sp/>only.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="wm__sockets2_80_83_8h_1a1b2e3aea5b22026c1f4322cc2d78743d" refkind="member"><highlight class="preprocessor">#define<sp/>UDPLITE_SEND_CSCOV<sp/>0x01<sp/></highlight><highlight class="comment">/*<sp/>sender<sp/>checksum<sp/>coverage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UDPLITE_RECV_CSCOV<sp/>0x02<sp/></highlight><highlight class="comment">/*<sp/>minimal<sp/>receiver<sp/>checksum<sp/>coverage<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IGMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor">#define<sp/>IP_MULTICAST_TTL<sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_MULTICAST_IF<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_MULTICAST_LOOP<sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IGMP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1//<sp/>TLS_CONFIG_IGMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="wm__sockets2_80_83_8h_1a924b1653500b7d3bf1bcef96a1a28431" refkind="member"><highlight class="preprocessor">#define<sp/>IP_ADD_MEMBERSHIP<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_DROP_MEMBERSHIP<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structip__mreq" kindref="compound">ip_mreq</ref><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/><ref refid="structip__mreq_1ab8bbc939fa8e4c7d2e0a5486aa294be4" kindref="member">imr_multiaddr</ref>;<sp/></highlight><highlight class="comment">/*<sp/>IP<sp/>multicast<sp/>address<sp/>of<sp/>group<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__addr" kindref="compound">in_addr</ref><sp/><ref refid="structip__mreq_1a035e3c13b292fd67c1c35ec3c5ff4fc5" kindref="member">imr_interface</ref>;<sp/></highlight><highlight class="comment">/*<sp/>local<sp/>IP<sp/>address<sp/>of<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/><ref refid="wm__sockets_8h_1aa4d37763f8765fcd6df959b08d738c14" kindref="member">ip_mreq</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPV6_JOIN_GROUP<sp/><sp/><sp/><sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPV6_LEAVE_GROUP<sp/><sp/><sp/><sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ipv6_mreq<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>ipv6mr_multiaddr;<sp/></highlight><highlight class="comment">/*<sp/>IP<sp/>multicast<sp/>address<sp/>of<sp/>group<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipv6mr_interface;<sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">}<sp/>ipv6_mreq;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IGMP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="wm__sockets2_80_83_8h_1a4bc64f5f52739a41d25425e2190fa217" refkind="member"><highlight class="preprocessor">#define<sp/>IPTOS_TOS_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_TOS(tos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tos)<sp/>&amp;<sp/>IPTOS_TOS_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_LOWDELAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_THROUGHPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_RELIABILITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_LOWCOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_MINCOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPTOS_LOWCOST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>Network<sp/>Control<sp/>precedence<sp/>designation<sp/>is<sp/>intended<sp/>to<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>within<sp/>a<sp/>network<sp/>only.<sp/><sp/>The<sp/>actual<sp/>use<sp/>and<sp/>control<sp/>of<sp/>that</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>designation<sp/>is<sp/>up<sp/>to<sp/>each<sp/>network.<sp/>The<sp/>Internetwork<sp/>Control</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>designation<sp/>is<sp/>intended<sp/>for<sp/>use<sp/>by<sp/>gateway<sp/>control<sp/>originators<sp/>only.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>actual<sp/>use<sp/>of<sp/>these<sp/>precedence<sp/>designations<sp/>is<sp/>of<sp/>concern<sp/>to</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>a<sp/>particular<sp/>network,<sp/>it<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>that<sp/>network<sp/>to</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>control<sp/>the<sp/>access<sp/>to,<sp/>and<sp/>use<sp/>of,<sp/>those<sp/>precedence<sp/>designations.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC(tos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tos)<sp/>&amp;<sp/>IPTOS_PREC_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_NETCONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_INTERNETCONTROL<sp/><sp/><sp/><sp/><sp/><sp/>0xc0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_CRITIC_ECP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xa0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_FLASHOVERRIDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_FLASH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_IMMEDIATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_PRIORITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_ROUTINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Commands<sp/>for<sp/>ioctlsocket(),<sp/><sp/>taken<sp/>from<sp/>the<sp/>BSD<sp/>file<sp/>fcntl.h.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>lwip_ioctl<sp/>only<sp/>supports<sp/>FIONREAD<sp/>and<sp/>FIONBIO,<sp/>for<sp/>now</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>Ioctl&apos;s<sp/>have<sp/>the<sp/>command<sp/>encoded<sp/>in<sp/>the<sp/>lower<sp/>word,</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>size<sp/>of<sp/>any<sp/>in<sp/>or<sp/>out<sp/>parameters<sp/>in<sp/>the<sp/>upper</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>word.<sp/><sp/>The<sp/>high<sp/>2<sp/>bits<sp/>of<sp/>the<sp/>upper<sp/>word<sp/>are<sp/>used</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>to<sp/>encode<sp/>the<sp/>in/out<sp/>status<sp/>of<sp/>the<sp/>parameter;<sp/>for<sp/>now</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>we<sp/>restrict<sp/>parameters<sp/>to<sp/>at<sp/>most<sp/>128<sp/>bytes.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(FIONREAD)<sp/>||<sp/>!defined(FIONBIO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOCPARM_MASK<sp/><sp/><sp/><sp/>0x7fU<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parameters<sp/>must<sp/>be<sp/>&lt;<sp/>128<sp/>bytes<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOC_VOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20000000UL<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>parameters<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOC_OUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40000000UL<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>out<sp/>parameters<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOC_IN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000UL<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>in<sp/>parameters<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOC_INOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOC_IN|IOC_OUT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0x20000000<sp/>distinguishes<sp/>new<sp/>&amp;</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>ioctl&apos;s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IO(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOC_VOID|((x)&lt;&lt;8)|(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IOR(x,y,t)<sp/><sp/><sp/><sp/><sp/>(IOC_OUT|(((long)sizeof(t)&amp;IOCPARM_MASK)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IOW(x,y,t)<sp/><sp/><sp/><sp/><sp/>(IOC_IN|(((long)sizeof(t)&amp;IOCPARM_MASK)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!defined(FIONREAD)<sp/>||<sp/>!defined(FIONBIO)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FIONREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIONREAD<sp/><sp/><sp/><sp/>_IOR(&apos;f&apos;,<sp/>127,<sp/>unsigned<sp/>long)<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>#<sp/>bytes<sp/>to<sp/>read<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FIONBIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIONBIO<sp/><sp/><sp/><sp/><sp/>_IOW(&apos;f&apos;,<sp/>126,<sp/>unsigned<sp/>long)<sp/></highlight><highlight class="comment">/*<sp/>set/clear<sp/>non-blocking<sp/>i/o<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor">#ifndef<sp/>SIOCSHIWAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="wm__sockets2_80_83_8h_1a3b5746c83986d00d3c9a4463e2007bba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIOCSHIWAT<sp/><sp/>_IOW(&apos;s&apos;,<sp/><sp/>0,<sp/>unsigned<sp/>long)<sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>high<sp/>watermark<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIOCGHIWAT<sp/><sp/>_IOR(&apos;s&apos;,<sp/><sp/>1,<sp/>unsigned<sp/>long)<sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>high<sp/>watermark<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIOCSLOWAT<sp/><sp/>_IOW(&apos;s&apos;,<sp/><sp/>2,<sp/>unsigned<sp/>long)<sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>low<sp/>watermark<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIOCGLOWAT<sp/><sp/>_IOR(&apos;s&apos;,<sp/><sp/>3,<sp/>unsigned<sp/>long)<sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>low<sp/>watermark<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIOCATMARK<sp/><sp/>_IOR(&apos;s&apos;,<sp/><sp/>7,<sp/>unsigned<sp/>long)<sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>oob<sp/>mark?<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor">#ifndef<sp/>F_GETFL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="wm__sockets2_80_83_8h_1a025fad21a889c79f02ec53abe3526c32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_GETFL<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>F_SETFL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_SETFL<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor">#ifndef<sp/>O_NONBLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="wm__sockets2_80_83_8h_1a39d33ce33804efd4d52606d59071c6d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>O_NONBLOCK<sp/><sp/>1<sp/></highlight><highlight class="comment">/*<sp/>nonblocking<sp/>I/O<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>O_NDELAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>O_NDELAY<sp/><sp/><sp/><sp/>1<sp/></highlight><highlight class="comment">/*<sp/>same<sp/>as<sp/>O_NONBLOCK,<sp/>for<sp/>compatibility<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHUT_RD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>SHUT_RD<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>SHUT_WR<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>SHUT_RDWR<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor">#ifndef<sp/>FD_SET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>FD_SETSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LWIP_SOCKET_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="wm__sockets2_80_83_8h_1ad0197c845fbb44c920b272f0fef3b57e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_SOCKET_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MEMP_NUM_NETCONN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMP_NUM_NETCONN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="wm__sockets2_80_83_8h_1a86c5dbf5a99358e288f573d6a1e0873f" refkind="member"><highlight class="preprocessor">#define<sp/>FD_SETSIZE<sp/><sp/><sp/><sp/>MEMP_NUM_NETCONN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FDSETSAFESET(n,<sp/>code)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/>if<sp/>(((n)<sp/>-<sp/>LWIP_SOCKET_OFFSET<sp/>&lt;<sp/>MEMP_NUM_NETCONN)<sp/>&amp;&amp;<sp/>(((int)(n)<sp/>-<sp/>LWIP_SOCKET_OFFSET)<sp/>&gt;=<sp/>0))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"><sp/><sp/>code;<sp/>}}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FDSETSAFEGET(n,<sp/>code)<sp/>(((n)<sp/>-<sp/>LWIP_SOCKET_OFFSET<sp/>&lt;<sp/>MEMP_NUM_NETCONN)<sp/>&amp;&amp;<sp/>(((int)(n)<sp/>-<sp/>LWIP_SOCKET_OFFSET)<sp/>&gt;=<sp/>0)<sp/>?\</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"><sp/><sp/>(code)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FD_SET(n,<sp/>p)<sp/><sp/>FDSETSAFESET(n,<sp/>(p)-&gt;fd_bits[((n)-LWIP_SOCKET_OFFSET)/8]<sp/>|=<sp/><sp/>(1<sp/>&lt;&lt;<sp/>(((n)-LWIP_SOCKET_OFFSET)<sp/>&amp;<sp/>7)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FD_CLR(n,<sp/>p)<sp/><sp/>FDSETSAFESET(n,<sp/>(p)-&gt;fd_bits[((n)-LWIP_SOCKET_OFFSET)/8]<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>(((n)-LWIP_SOCKET_OFFSET)<sp/>&amp;<sp/>7)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FD_ISSET(n,p)<sp/>FDSETSAFEGET(n,<sp/>(p)-&gt;fd_bits[((n)-LWIP_SOCKET_OFFSET)/8]<sp/>&amp;<sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>(((n)-LWIP_SOCKET_OFFSET)<sp/>&amp;<sp/>7)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FD_ZERO(p)<sp/><sp/><sp/><sp/>memset((void*)(p),<sp/>0,<sp/>sizeof(*(p)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfd__set" kindref="compound">fd_set</ref></highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fd_bits<sp/>[(<ref refid="wm__sockets2_80_83_8h_1a86c5dbf5a99358e288f573d6a1e0873f" kindref="member">FD_SETSIZE</ref>+7)/8];</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>LWIP_SOCKET_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>LWIP_SOCKET_OFFSET<sp/>does<sp/>not<sp/>work<sp/>with<sp/>external<sp/>FD_SET!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FD_SET<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor">#ifndef<sp/>LWIP_TIMEVAL_PRIVATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="wm__sockets2_80_83_8h_1aaffd64f6887883ec6401e6bb684c40fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_TIMEVAL_PRIVATE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_TIMEVAL_PRIVATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimeval_1a3599199839a89e99a2ce29d45312b5cf" kindref="member">tv_sec</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimeval_1aa8396731f2914f9ed2a457d3da602b80" kindref="member">tv_usec</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>microseconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_TIMEVAL_PRIVATE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gaaaf2f15c3d464ebd84caabb51920c4bc" kindref="member">accept</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*addrlen);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga8dca0ad474f0bb98c58283c151d6e2e2" kindref="member">bind</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>namelen);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga8744a596bc9132c457bcce518fb854dd" kindref="member">shutdown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gacb704989306fb22b3586d14661a3f990" kindref="member">closesocket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga30a78fb09c5f8eb192eb9da70babda64" kindref="member">connect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>namelen);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga7bafa2b03fec4e2d4e7492269b262975" kindref="member">getsockname</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*namelen);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga4f016ffafb303902b981988fdc675940" kindref="member">getpeername</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*namelen);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga3437a49823cdfa961c994aaaf661bd36" kindref="member">setsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>optlen);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gaad5e3dc6d10cb45c3d98038a5733980c" kindref="member">getsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*optlen);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gadd5137ee4523809b8e087345ff5dae6f" kindref="member">listen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backlog);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gac98728e53b98f1b22474f48ce6658749" kindref="member">recv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga0add4d77d9f1142e0256df85c5c4d992" kindref="member">recvfrom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*from,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*fromlen);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gab4a2874617ed0d46a44b0da20b3850d0" kindref="member">send</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga7d0859ad197b472a5fd930872dab8763" kindref="member">sendto</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*to,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>tolen);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gaf4e0711877c45a41168ac677b0670ccd" kindref="member">socket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga7697c5e2abe442fee5267ff362eff0b5" kindref="member">select</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxfdp1,<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>*readset,<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>*writeset,<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>*exceptset,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>*timeout);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga42742239f95827a7a86461d4ddaa3d47" kindref="member">ioctlsocket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fcntl(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhostent" kindref="compound">hostent</ref>*<sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga636674bf9937205b85a797ee6077faa9" kindref="member">gethostbyname</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="wm__sockets2_80_83_8h_1a822040573319cf87bfe6758d511be57f" refkind="member"><highlight class="preprocessor">#define<sp/>read(s,mem,len)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv(s,mem,len,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="wm__sockets2_80_83_8h_1a0a651eb5fb5e6127f5e5153ce2251f3d" refkind="member"><highlight class="preprocessor">#define<sp/>write(s,dataptr,len)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(s,dataptr,len,0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="wm__sockets2_80_83_8h_1a4ef17e85ec4d3acdcee5ce23f8ed93c4" refkind="member"><highlight class="preprocessor">#define<sp/>close(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="wm__sockets2_80_83_8h_1a50a83956bc3a96e6274a21ec0d4d6338" refkind="member"><highlight class="preprocessor">#define<sp/>ioctl(s,cmd,argp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ioctlsocket(s,cmd,argp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">u32_t<sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga689de871afcb769240f7bf9f0d72b9a3" kindref="member">ipaddr_addr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>htonl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>htonl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>htonl<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ntohl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ntohl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ntohl<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>htons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>htons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>htons<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ntohs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ntohs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ntohs<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>htons(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((n<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((n<sp/>&amp;<sp/>0xff00)<sp/>&gt;&gt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>htonl(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((n<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>24)<sp/>|\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((n<sp/>&amp;<sp/>0xff00)<sp/>&lt;&lt;<sp/>8)<sp/>|\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((n<sp/>&amp;<sp/>0xff0000UL)<sp/>&gt;&gt;<sp/>8)<sp/>|\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((n<sp/>&amp;<sp/>0xff000000UL)<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ntohs(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htons(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ntohl(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htonl(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="wm__sockets2_80_83_8h_1acf56d3da92a0a7a8a62a617e793e948c" refkind="member"><highlight class="preprocessor">#define<sp/>LWIP_MAKEU32(a,b,c,d)<sp/>(((u32_t)((a)<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((u32_t)((b)<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((u32_t)((c)<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)<sp/><sp/>|<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u32_t)((d)<sp/>&amp;<sp/>0xff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP_HTONL(x)<sp/>((((x)<sp/>&amp;<sp/>0x000000ffUL)<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>&amp;<sp/>0x0000ff00UL)<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>&amp;<sp/>0x00ff0000UL)<sp/>&gt;&gt;<sp/><sp/>8)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>&amp;<sp/>0xff000000UL)<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ip4_addr<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>u32_t<sp/>addr;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">};</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ip4_addr<sp/>ip4_addr_t;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor">#define<sp/>IP4_ADDR(ipaddr,<sp/>a,b,c,d)<sp/><sp/>(ipaddr)-&gt;addr<sp/>=<sp/>PP_HTONL(LWIP_MAKEU32(a,b,c,d))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor">#ifndef<sp/>IPADDR2_COPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR2_COPY(dest,<sp/>src)<sp/>SMEMCPY(dest,<sp/>src,<sp/>sizeof(ip4_addr_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor">#define<sp/>ip4_addr_copy(dest,<sp/>src)<sp/>((dest).addr<sp/>=<sp/>(src).addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor">#define<sp/>ip4_addr_set(dest,<sp/>src)<sp/>((dest)-&gt;addr<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(src)-&gt;addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor">#define<sp/>ip4_addr_set_zero(ipaddr)<sp/><sp/><sp/><sp/><sp/>((ipaddr)-&gt;addr<sp/>=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor">#define<sp/>ip4_addr_set_any(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/>((ipaddr)-&gt;addr<sp/>=<sp/>IPADDR_ANY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor">#define<sp/>ip4_addr_set_loopback(ipaddr)<sp/>((ipaddr)-&gt;addr<sp/>=<sp/>PP_HTONL(IPADDR_LOOPBACK))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor">#define<sp/>ip4_addr_isloopback(ipaddr)<sp/><sp/><sp/><sp/>(((ipaddr)-&gt;addr<sp/>&amp;<sp/>PP_HTONL(IP_CLASSA_NET))<sp/>==<sp/>PP_HTONL(((u32_t)IP_LOOPBACKNET)<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor">#define<sp/>ip4_addr_set_hton(dest,<sp/>src)<sp/>((dest)-&gt;addr<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((src)<sp/>==<sp/>NULL<sp/>?<sp/>0:\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lwip_htonl((src)-&gt;addr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor">#define<sp/>ip4_addr_set_u32(dest_ipaddr,<sp/>src_u32)<sp/>((dest_ipaddr)-&gt;addr<sp/>=<sp/>(src_u32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor">#define<sp/>ip4_addr_get_u32(src_ipaddr)<sp/>((src_ipaddr)-&gt;addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor">#define<sp/>ip4_addr_get_network(target,<sp/>host,<sp/>netmask)<sp/>do<sp/>{<sp/>((target)-&gt;addr<sp/>=<sp/>((host)-&gt;addr)<sp/>&amp;<sp/>((netmask)-&gt;addr));<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor">#define<sp/>ip4_addr_netcmp(addr1,<sp/>addr2,<sp/>mask)<sp/>(((addr1)-&gt;addr<sp/>&amp;<sp/>\</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mask)-&gt;addr)<sp/>==<sp/>\</highlight></codeline>
<codeline lineno="576"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((addr2)-&gt;addr<sp/>&amp;<sp/>\</highlight></codeline>
<codeline lineno="577"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mask)-&gt;addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_cmp(addr1,<sp/>addr2)<sp/>((addr1)-&gt;addr<sp/>==<sp/>(addr2)-&gt;addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_isany_val(addr1)<sp/><sp/><sp/>((addr1).addr<sp/>==<sp/>IPADDR_ANY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_isany(addr1)<sp/>((addr1)<sp/>==<sp/>NULL<sp/>||<sp/>ip4_addr_isany_val(*(addr1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_netmask_valid(netmask)<sp/>ip4_addr_netmask_valid((netmask)-&gt;addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">u8_t<sp/>ip4_addr_netmask_valid(u32_t<sp/>netmask);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_ismulticast(addr1)<sp/>(((addr1)-&gt;addr<sp/>&amp;<sp/>PP_HTONL(0xf0000000UL))<sp/>==<sp/>PP_HTONL(0xe0000000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_islinklocal(addr1)<sp/>(((addr1)-&gt;addr<sp/>&amp;<sp/>PP_HTONL(0xffff0000UL))<sp/>==<sp/>PP_HTONL(0xa9fe0000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_debug_print_parts(debug,<sp/>a,<sp/>b,<sp/>c,<sp/>d)<sp/>\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/>LWIP_DEBUGF(debug,<sp/>(&quot;%&quot;<sp/>U16_F<sp/>&quot;.%&quot;<sp/>U16_F<sp/>&quot;.%&quot;<sp/>U16_F<sp/>&quot;.%&quot;<sp/>U16_F,<sp/>a,<sp/>b,<sp/>c,<sp/>d))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_debug_print(debug,<sp/>ipaddr)<sp/>\</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"><sp/><sp/>ip4_addr_debug_print_parts(debug,<sp/>\</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>ip4_addr1_16(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>ip4_addr2_16(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>ip4_addr3_16(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>ip4_addr4_16(ipaddr)<sp/>:<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr_debug_print_val(debug,<sp/>ipaddr)<sp/>\</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"><sp/><sp/>ip4_addr_debug_print_parts(debug,<sp/>\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr1_16(&amp;(ipaddr)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr2_16(&amp;(ipaddr)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr3_16(&amp;(ipaddr)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr4_16(&amp;(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor">#define<sp/>ip4_addr1(ipaddr)<sp/>(((const<sp/>u8_t*)(&amp;(ipaddr)-&gt;addr))[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr2(ipaddr)<sp/>(((const<sp/>u8_t*)(&amp;(ipaddr)-&gt;addr))[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr3(ipaddr)<sp/>(((const<sp/>u8_t*)(&amp;(ipaddr)-&gt;addr))[2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr4(ipaddr)<sp/>(((const<sp/>u8_t*)(&amp;(ipaddr)-&gt;addr))[3])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor">#define<sp/>ip4_addr1_16(ipaddr)<sp/>((u16_t)ip4_addr1(ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr2_16(ipaddr)<sp/>((u16_t)ip4_addr2(ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr3_16(ipaddr)<sp/>((u16_t)ip4_addr3(ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip4_addr4_16(ipaddr)<sp/>((u16_t)ip4_addr4(ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP4ADDR_STRLEN_MAX<sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor">#define<sp/>ip_ntoa(ipaddr)<sp/><sp/>ipaddr_ntoa(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">u32_t<sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga689de871afcb769240f7bf9f0d72b9a3" kindref="member">ipaddr_addr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip4addr_aton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp,<sp/>ip4_addr_t<sp/>*addr);</highlight></codeline>
<codeline lineno="625"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ip4addr_ntoa(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ip4_addr_t<sp/>*addr);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ip4addr_ntoa_r(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ip4_addr_t<sp/>*addr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor">#define<sp/>inet_addr(cp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipaddr_addr(cp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inet_aton(cp,<sp/>addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4addr_aton(cp,<sp/>(ip4_addr_t*)addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inet_ntoa(addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipaddr_ntoa((ip_addr_t*)&amp;(addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ip6_addr<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>u32_t<sp/>addr[4];</highlight></codeline>
<codeline lineno="640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ip6_addr<sp/>ip6_addr_t;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor">#define<sp/>IP6_ADDR_PART(ip6addr,<sp/>index,<sp/>a,b,c,d)<sp/>\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[index]<sp/>=<sp/>PP_HTONL(LWIP_MAKEU32(a,b,c,d))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor">#define<sp/>IP6_ADDR(ip6addr,<sp/>idx0,<sp/>idx1,<sp/>idx2,<sp/>idx3)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[0]<sp/>=<sp/>idx0;<sp/>\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>idx1;<sp/>\</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>idx2;<sp/>\</highlight></codeline>
<codeline lineno="655"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>idx3;<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK1(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[0])<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK2(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[0]))<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK3(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[1])<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK4(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[1]))<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK5(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[2])<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK6(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[2]))<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK7(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[3])<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor">#define<sp/>IP6_ADDR_BLOCK8(ip6addr)<sp/>((u16_t)((lwip_htonl((ip6addr)-&gt;addr[3]))<sp/>&amp;<sp/>0xffff))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor">#define<sp/>ip6_addr_copy(dest,<sp/>src)<sp/>do{(dest).addr[0]<sp/>=<sp/>(src).addr[0];<sp/>\</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest).addr[1]<sp/>=<sp/>(src).addr[1];<sp/>\</highlight></codeline>
<codeline lineno="677"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest).addr[2]<sp/>=<sp/>(src).addr[2];<sp/>\</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest).addr[3]<sp/>=<sp/>(src).addr[3];}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor">#define<sp/>ip6_addr_set(dest,<sp/>src)<sp/>do{(dest)-&gt;addr[0]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>(src)-&gt;addr[0];<sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest)-&gt;addr[1]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>(src)-&gt;addr[1];<sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest)-&gt;addr[2]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>(src)-&gt;addr[2];<sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest)-&gt;addr[3]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>(src)-&gt;addr[3];}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor">#define<sp/>ip6_addr_set_zero(ip6addr)<sp/><sp/><sp/><sp/>do{(ip6addr)-&gt;addr[0]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>0;}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor">#define<sp/>ip6_addr_set_any(ip6addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set_zero(ip6addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="preprocessor">#define<sp/>ip6_addr_set_loopback(ip6addr)<sp/>do{(ip6addr)-&gt;addr[0]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="695"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>PP_HTONL(0x00000001UL);}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="preprocessor">#define<sp/>ip6_addr_set_hton(dest,<sp/>src)<sp/>do{(dest)-&gt;addr[0]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>lwip_htonl((src)-&gt;addr[0]);<sp/>\</highlight></codeline>
<codeline lineno="701"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest)-&gt;addr[1]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>lwip_htonl((src)-&gt;addr[1]);<sp/>\</highlight></codeline>
<codeline lineno="702"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest)-&gt;addr[2]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>lwip_htonl((src)-&gt;addr[2]);<sp/>\</highlight></codeline>
<codeline lineno="703"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dest)-&gt;addr[3]<sp/>=<sp/>(src)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>lwip_htonl((src)-&gt;addr[3]);}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="preprocessor">#define<sp/>ip6_addr_netcmp(addr1,<sp/>addr2)<sp/>(((addr1)-&gt;addr[0]<sp/>==<sp/>(addr2)-&gt;addr[0])<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="714"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((addr1)-&gt;addr[1]<sp/>==<sp/>(addr2)-&gt;addr[1]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_cmp(addr1,<sp/>addr2)<sp/>(((addr1)-&gt;addr[0]<sp/>==<sp/>(addr2)-&gt;addr[0])<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="717"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((addr1)-&gt;addr[1]<sp/>==<sp/>(addr2)-&gt;addr[1])<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((addr1)-&gt;addr[2]<sp/>==<sp/>(addr2)-&gt;addr[2])<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="719"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((addr1)-&gt;addr[3]<sp/>==<sp/>(addr2)-&gt;addr[3]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_get_subnet_id(ip6addr)<sp/><sp/><sp/>(lwip_htonl((ip6addr)-&gt;addr[2])<sp/>&amp;<sp/>0x0000ffffUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isany_val(ip6addr)<sp/>(((ip6addr).addr[0]<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr).addr[1]<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="725"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr).addr[2]<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="726"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr).addr[3]<sp/>==<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isany(ip6addr)<sp/>(((ip6addr)<sp/>==<sp/>NULL)<sp/>||<sp/>ip6_addr_isany_val(*(ip6addr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isloopback(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="730"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[1]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="731"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[2]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="732"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[3]<sp/>==<sp/>PP_HTONL(0x00000001UL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isglobal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xe0000000UL))<sp/>==<sp/>PP_HTONL(0x20000000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_islinklocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xffc00000UL))<sp/>==<sp/>PP_HTONL(0xfe800000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_issitelocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xffc00000UL))<sp/>==<sp/>PP_HTONL(0xfec00000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isuniquelocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xfe000000UL))<sp/>==<sp/>PP_HTONL(0xfc000000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isipv4mappedipv6(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((ip6addr)-&gt;addr[1]<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(((ip6addr)-&gt;addr[2])<sp/>==<sp/>PP_HTONL(0x0000FFFFUL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff000000UL))<sp/>==<sp/>PP_HTONL(0xff000000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_multicast_transient_flag(ip6addr)<sp/><sp/>((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0x00100000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_multicast_prefix_flag(ip6addr)<sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0x00200000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_multicast_rendezvous_flag(ip6addr)<sp/>((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0x00400000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_multicast_scope(ip6addr)<sp/>((lwip_htonl((ip6addr)-&gt;addr[0])<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xf)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_RESERVED0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_INTERFACE_LOCAL<sp/><sp/><sp/><sp/><sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_LINK_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_RESERVED3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_ADMIN_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_SITE_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_ORGANIZATION_LOCAL<sp/><sp/>0x8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_GLOBAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_MULTICAST_SCOPE_RESERVEDF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast_iflocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff8f0000UL))<sp/>==<sp/>PP_HTONL(0xff010000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast_linklocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff8f0000UL))<sp/>==<sp/>PP_HTONL(0xff020000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast_adminlocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff8f0000UL))<sp/>==<sp/>PP_HTONL(0xff040000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast_sitelocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff8f0000UL))<sp/>==<sp/>PP_HTONL(0xff050000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast_orglocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff8f0000UL))<sp/>==<sp/>PP_HTONL(0xff080000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ismulticast_global(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>&amp;<sp/>PP_HTONL(0xff8f0000UL))<sp/>==<sp/>PP_HTONL(0xff0e0000UL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor">#define<sp/>ip6_addr_isallnodes_iflocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>==<sp/>PP_HTONL(0xff010000UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[1]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[2]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[3]<sp/>==<sp/>PP_HTONL(0x00000001UL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isallnodes_linklocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>==<sp/>PP_HTONL(0xff020000UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="773"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[1]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[2]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[3]<sp/>==<sp/>PP_HTONL(0x00000001UL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_set_allnodes_linklocal(ip6addr)<sp/>do{(ip6addr)-&gt;addr[0]<sp/>=<sp/>PP_HTONL(0xff020000UL);<sp/>\</highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>PP_HTONL(0x00000001UL);}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isallrouters_linklocal(ip6addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>==<sp/>PP_HTONL(0xff020000UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[1]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[2]<sp/>==<sp/>0UL)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[3]<sp/>==<sp/>PP_HTONL(0x00000002UL)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_set_allrouters_linklocal(ip6addr)<sp/>do{(ip6addr)-&gt;addr[0]<sp/>=<sp/>PP_HTONL(0xff020000UL);<sp/>\</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>PP_HTONL(0x00000002UL);}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_issolicitednode(ip6addr)<sp/>(<sp/>((ip6addr)-&gt;addr[0]<sp/>==<sp/>PP_HTONL(0xff020000UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[2]<sp/>==<sp/>PP_HTONL(0x00000001UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((ip6addr)-&gt;addr[3]<sp/>&amp;<sp/>PP_HTONL(0xff000000UL))<sp/>==<sp/>PP_HTONL(0xff000000UL))<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_set_solicitednode(ip6addr,<sp/>if_id)<sp/>do{(ip6addr)-&gt;addr[0]<sp/>=<sp/>PP_HTONL(0xff020000UL);<sp/>\</highlight></codeline>
<codeline lineno="795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="796"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>PP_HTONL(0x00000001UL);<sp/>\</highlight></codeline>
<codeline lineno="797"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>(PP_HTONL(0xff000000UL)<sp/>|<sp/>(if_id));}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_cmp_solicitednode(ip6addr,<sp/>sn_addr)<sp/>(((ip6addr)-&gt;addr[0]<sp/>==<sp/>PP_HTONL(0xff020000UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="800"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[1]<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[2]<sp/>==<sp/>PP_HTONL(0x00000001UL))<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="802"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ip6addr)-&gt;addr[3]<sp/>==<sp/>(PP_HTONL(0xff000000UL)<sp/>|<sp/>(sn_addr)-&gt;addr[3])))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IPv6<sp/>address<sp/>states.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_INVALID<sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE<sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_1<sp/><sp/>0x09<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>probe<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_2<sp/><sp/>0x0a<sp/></highlight><highlight class="comment">/*<sp/>2<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_3<sp/><sp/>0x0b<sp/></highlight><highlight class="comment">/*<sp/>3<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_4<sp/><sp/>0x0c<sp/></highlight><highlight class="comment">/*<sp/>4<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_5<sp/><sp/>0x0d<sp/></highlight><highlight class="comment">/*<sp/>5<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_6<sp/><sp/>0x0e<sp/></highlight><highlight class="comment">/*<sp/>6<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_7<sp/><sp/>0x0f<sp/></highlight><highlight class="comment">/*<sp/>7<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>bit<sp/>marks<sp/>an<sp/>address<sp/>as<sp/>valid<sp/>(preferred<sp/>or<sp/>deprecated)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_PREFERRED<sp/><sp/><sp/><sp/>0x30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_DEPRECATED<sp/><sp/><sp/>0x10<sp/></highlight><highlight class="comment">/*<sp/>Same<sp/>as<sp/>VALID<sp/>(valid<sp/>but<sp/>not<sp/>preferred)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6_ADDR_TENTATIVE_COUNT_MASK<sp/>0x07<sp/></highlight><highlight class="comment">/*<sp/>1-7<sp/>probes<sp/>sent<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isinvalid(addr_state)<sp/>(addr_state<sp/>==<sp/>IP6_ADDR_INVALID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_istentative(addr_state)<sp/>(addr_state<sp/>&amp;<sp/>IP6_ADDR_TENTATIVE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isvalid(addr_state)<sp/>(addr_state<sp/>&amp;<sp/>IP6_ADDR_VALID)<sp/></highlight><highlight class="comment">/*<sp/>Include<sp/>valid,<sp/>preferred,<sp/>and<sp/>deprecated.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_ispreferred(addr_state)<sp/>(addr_state<sp/>==<sp/>IP6_ADDR_PREFERRED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_isdeprecated(addr_state)<sp/>(addr_state<sp/>==<sp/>IP6_ADDR_DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_debug_print_parts(debug,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h)<sp/>\</highlight></codeline>
<codeline lineno="827"><highlight class="preprocessor"><sp/><sp/>LWIP_DEBUGF(debug,<sp/>(&quot;%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F<sp/>&quot;:%&quot;<sp/>X16_F,<sp/>\</highlight></codeline>
<codeline lineno="828"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>g,<sp/>h))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_debug_print(debug,<sp/>ipaddr)<sp/>\</highlight></codeline>
<codeline lineno="830"><highlight class="preprocessor"><sp/><sp/>ip6_addr_debug_print_parts(debug,<sp/>\</highlight></codeline>
<codeline lineno="831"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK1(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="832"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK2(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="833"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK3(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="834"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK4(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="835"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK5(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="836"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK6(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="837"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK7(ipaddr)<sp/>:<sp/>0),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="838"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u16_t)((ipaddr)<sp/>!=<sp/>NULL<sp/>?<sp/>IP6_ADDR_BLOCK8(ipaddr)<sp/>:<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip6_addr_debug_print_val(debug,<sp/>ipaddr)<sp/>\</highlight></codeline>
<codeline lineno="840"><highlight class="preprocessor"><sp/><sp/>ip6_addr_debug_print_parts(debug,<sp/>\</highlight></codeline>
<codeline lineno="841"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK1(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="842"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK2(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="843"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK3(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="844"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK4(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="845"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK5(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="846"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK6(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="847"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK7(&amp;(ipaddr)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="848"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR_BLOCK8(&amp;(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP6ADDR_STRLEN_MAX<sp/><sp/><sp/><sp/>46</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip6addr_aton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp,<sp/>ip6_addr_t<sp/>*addr);</highlight></codeline>
<codeline lineno="854"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ip6addr_ntoa(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ip6_addr_t<sp/>*addr);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ip6addr_ntoa_r(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ip6_addr_t<sp/>*addr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buflen);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585c" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585c" kindref="member">lwip_ip_addr_type</ref><sp/>{</highlight></codeline>
<codeline lineno="865" refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585cace47fa82608deeb1c1c7c2c891eb5049" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585cace47fa82608deeb1c1c7c2c891eb5049" kindref="member">IPADDR_TYPE_V4</ref><sp/>=<sp/><sp/><sp/>0U,</highlight></codeline>
<codeline lineno="867" refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585caae510fd8ec7fe405b594b57af61f9a02" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585caae510fd8ec7fe405b594b57af61f9a02" kindref="member">IPADDR_TYPE_V6</ref><sp/>=<sp/><sp/><sp/>6U,</highlight></codeline>
<codeline lineno="869" refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585cac6b2c99cf920e08efcb55dc40e42944e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wm__sockets2_80_83_8h_1af2142f0dfdcc938e2db16aa745ed585cac6b2c99cf920e08efcb55dc40e42944e" kindref="member">IPADDR_TYPE_ANY</ref><sp/>=<sp/>46U</highlight></codeline>
<codeline lineno="870"><highlight class="normal">};</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV4&amp;&amp;TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structip__addr" kindref="compound">ip_addr</ref><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ip6_addr_t<sp/>ip6;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>ip4_addr_t<sp/>ip4;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}<sp/>u_addr;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>u8_t<sp/>type;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}<sp/><ref refid="wm__netif_8h_1a335a8c9df66319e88a1a529047ce0a1e" kindref="member">ip_addr_t</ref>;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structip__addr" kindref="compound">ip_addr_t</ref><sp/>ip_addr_any_type;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor">#define<sp/>IPADDR4_INIT(u32val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>{<sp/>{<sp/>u32val,<sp/>0ul,<sp/>0ul,<sp/>0ul<sp/>}<sp/>}<sp/>},<sp/>IPADDR_TYPE_V4<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="preprocessor">#define<sp/>IPADDR4_INIT_BYTES(a,b,c,d)<sp/><sp/><sp/>IPADDR4_INIT(PP_HTONL(LWIP_MAKEU32(a,b,c,d)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="preprocessor">#define<sp/>IPADDR6_INIT(a,<sp/>b,<sp/>c,<sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>{<sp/>{<sp/>a,<sp/>b,<sp/>c,<sp/>d<sp/>}<sp/>}<sp/>},<sp/>IPADDR_TYPE_V6<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="preprocessor">#define<sp/>IPADDR6_INIT_HOST(a,<sp/>b,<sp/>c,<sp/>d)<sp/>{<sp/>{<sp/>{<sp/>{<sp/>PP_HTONL(a),<sp/>PP_HTONL(b),<sp/>PP_HTONL(c),<sp/>PP_HTONL(d)<sp/>}<sp/>}<sp/>},<sp/>IPADDR_TYPE_V6<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="preprocessor">#define<sp/>IP_IS_ANY_TYPE_VAL(ipaddr)<sp/><sp/><sp/><sp/>(IP_GET_TYPE(&amp;ipaddr)<sp/>==<sp/>IPADDR_TYPE_ANY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="preprocessor">#define<sp/>IPADDR_ANY_TYPE_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>{<sp/>{<sp/>0ul,<sp/>0ul,<sp/>0ul,<sp/>0ul<sp/>}<sp/>}<sp/>},<sp/>IPADDR_TYPE_ANY<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="preprocessor">#define<sp/>IP_IS_V4_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IP_GET_TYPE(&amp;ipaddr)<sp/>==<sp/>IPADDR_TYPE_V4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="preprocessor">#define<sp/>IP_IS_V6_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IP_GET_TYPE(&amp;ipaddr)<sp/>==<sp/>IPADDR_TYPE_V6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="preprocessor">#define<sp/>IP_IS_V4(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((ipaddr)<sp/>==<sp/>NULL)<sp/>||<sp/>IP_IS_V4_VAL(*(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="preprocessor">#define<sp/>IP_IS_V6(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((ipaddr)<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>IP_IS_V6_VAL(*(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_SET_TYPE_VAL(ipaddr,<sp/>iptype)<sp/>do<sp/>{<sp/>(ipaddr).type<sp/>=<sp/>(iptype);<sp/>}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_SET_TYPE(ipaddr,<sp/>iptype)<sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>if((ipaddr)<sp/>!=<sp/>NULL)<sp/>{<sp/>IP_SET_TYPE_VAL(*(ipaddr),<sp/>iptype);<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_GET_TYPE(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ipaddr)-&gt;type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR_PCB_VERSION_MATCH_EXACT(pcb,<sp/>ipaddr)<sp/>(IP_GET_TYPE(&amp;pcb-&gt;local_ip)<sp/>==<sp/>IP_GET_TYPE(ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR_PCB_VERSION_MATCH(pcb,<sp/>ipaddr)<sp/>(IP_IS_ANY_TYPE_VAL(pcb-&gt;local_ip)<sp/>||<sp/>IP_ADDR_PCB_VERSION_MATCH_EXACT(pcb,<sp/>ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="preprocessor">#define<sp/>ip_2_ip6(ipaddr)<sp/><sp/><sp/>(&amp;((ipaddr)-&gt;u_addr.ip6))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="preprocessor">#define<sp/>ip_2_ip4(ipaddr)<sp/><sp/><sp/>(&amp;((ipaddr)-&gt;u_addr.ip4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="preprocessor">#define<sp/>IP_ADDR4(ipaddr,a,b,c,d)<sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>IP4_ADDR(ip_2_ip4(ipaddr),a,b,c,d);<sp/>\</highlight></codeline>
<codeline lineno="930"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP_SET_TYPE_VAL(*(ipaddr),<sp/>IPADDR_TYPE_V4);<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="preprocessor">#define<sp/>IP_ADDR6(ipaddr,i0,i1,i2,i3)<sp/><sp/>do<sp/>{<sp/>IP6_ADDR(ip_2_ip6(ipaddr),i0,i1,i2,i3);<sp/>\</highlight></codeline>
<codeline lineno="933"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP_SET_TYPE_VAL(*(ipaddr),<sp/>IPADDR_TYPE_V6);<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="preprocessor">#define<sp/>IP_ADDR6_HOST(ipaddr,i0,i1,i2,i3)<sp/><sp/>IP_ADDR6(ipaddr,PP_HTONL(i0),PP_HTONL(i1),PP_HTONL(i2),PP_HTONL(i3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="preprocessor">#define<sp/>ip_addr_copy(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/>do{<sp/>IP_SET_TYPE_VAL(dest,<sp/>IP_GET_TYPE(&amp;src));<sp/>if(IP_IS_V6_VAL(src)){<sp/>\</highlight></codeline>
<codeline lineno="939"><highlight class="preprocessor"><sp/><sp/>ip6_addr_copy(*ip_2_ip6(&amp;(dest)),<sp/>*ip_2_ip6(&amp;(src)));<sp/>}else{<sp/>\</highlight></codeline>
<codeline lineno="940"><highlight class="preprocessor"><sp/><sp/>ip4_addr_copy(*ip_2_ip4(&amp;(dest)),<sp/>*ip_2_ip4(&amp;(src)));<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="preprocessor">#define<sp/>ip_addr_copy_from_ip6(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/>do{<sp/>\</highlight></codeline>
<codeline lineno="943"><highlight class="preprocessor"><sp/><sp/>ip6_addr_copy(*ip_2_ip6(&amp;(dest)),<sp/>src);<sp/>IP_SET_TYPE_VAL(dest,<sp/>IPADDR_TYPE_V6);<sp/>}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="preprocessor">#define<sp/>ip_addr_copy_from_ip4(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/>do{<sp/>\</highlight></codeline>
<codeline lineno="946"><highlight class="preprocessor"><sp/><sp/>ip4_addr_copy(*ip_2_ip4(&amp;(dest)),<sp/>src);<sp/>IP_SET_TYPE_VAL(dest,<sp/>IPADDR_TYPE_V4);<sp/>}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="preprocessor">#define<sp/>ip_addr_set_ip4_u32(ipaddr,<sp/>val)<sp/><sp/>do{if(ipaddr){ip4_addr_set_u32(ip_2_ip4(ipaddr),<sp/>val);<sp/>\</highlight></codeline>
<codeline lineno="949"><highlight class="preprocessor"><sp/><sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V4);<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="preprocessor">#define<sp/>ip_addr_get_ip4_u32(ipaddr)<sp/><sp/>(((ipaddr)<sp/>&amp;&amp;<sp/>IP_IS_V4(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="952"><highlight class="preprocessor"><sp/><sp/>ip4_addr_get_u32(ip_2_ip4(ipaddr))<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="preprocessor">#define<sp/>ip_addr_set(dest,<sp/>src)<sp/>do{<sp/>IP_SET_TYPE(dest,<sp/>IP_GET_TYPE(src));<sp/>if(IP_IS_V6(src)){<sp/>\</highlight></codeline>
<codeline lineno="955"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set(ip_2_ip6(dest),<sp/>ip_2_ip6(src));<sp/>}else{<sp/>\</highlight></codeline>
<codeline lineno="956"><highlight class="preprocessor"><sp/><sp/>ip4_addr_set(ip_2_ip4(dest),<sp/>ip_2_ip4(src));<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="preprocessor">#define<sp/>ip_addr_set_ipaddr(dest,<sp/>src)<sp/>ip_addr_set(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="preprocessor">#define<sp/>ip_addr_set_zero(ipaddr)<sp/><sp/><sp/><sp/><sp/>do{<sp/>\</highlight></codeline>
<codeline lineno="961"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set_zero(ip_2_ip6(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>0);<sp/>}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="preprocessor">#define<sp/>ip_addr_set_zero_ip4(ipaddr)<sp/><sp/><sp/><sp/><sp/>do{<sp/>\</highlight></codeline>
<codeline lineno="964"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set_zero(ip_2_ip6(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V4);<sp/>}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="preprocessor">#define<sp/>ip_addr_set_zero_ip6(ipaddr)<sp/><sp/><sp/><sp/><sp/>do{<sp/>\</highlight></codeline>
<codeline lineno="967"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set_zero(ip_2_ip6(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V6);<sp/>}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="preprocessor">#define<sp/>ip_addr_set_any(is_ipv6,<sp/>ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/>do{if(is_ipv6){<sp/>\</highlight></codeline>
<codeline lineno="970"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set_any(ip_2_ip6(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V6);<sp/>}else{<sp/>\</highlight></codeline>
<codeline lineno="971"><highlight class="preprocessor"><sp/><sp/>ip4_addr_set_any(ip_2_ip4(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V4);<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="preprocessor">#define<sp/>ip_addr_set_loopback(is_ipv6,<sp/>ipaddr)<sp/>do{if(is_ipv6){<sp/>\</highlight></codeline>
<codeline lineno="974"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set_loopback(ip_2_ip6(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V6);<sp/>}else{<sp/>\</highlight></codeline>
<codeline lineno="975"><highlight class="preprocessor"><sp/><sp/>ip4_addr_set_loopback(ip_2_ip4(ipaddr));<sp/>IP_SET_TYPE(ipaddr,<sp/>IPADDR_TYPE_V4);<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="preprocessor">#define<sp/>ip_addr_set_hton(dest,<sp/>src)<sp/><sp/>do{if(IP_IS_V6(src)){<sp/>\</highlight></codeline>
<codeline lineno="978"><highlight class="preprocessor"><sp/><sp/>ip6_addr_set_hton(ip_2_ip6(ipaddr),<sp/>(src));<sp/>IP_SET_TYPE(dest,<sp/>IPADDR_TYPE_V6);<sp/>}else{<sp/>\</highlight></codeline>
<codeline lineno="979"><highlight class="preprocessor"><sp/><sp/>ip4_addr_set_hton(ip_2_ip4(ipaddr),<sp/>(src));<sp/>IP_SET_TYPE(dest,<sp/>IPADDR_TYPE_V4);<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="preprocessor">#define<sp/>ip_addr_get_network(target,<sp/>host,<sp/>netmask)<sp/>do{if(IP_IS_V6(host)){<sp/>\</highlight></codeline>
<codeline lineno="982"><highlight class="preprocessor"><sp/><sp/>ip4_addr_set_zero(ip_2_ip4(target));<sp/>IP_SET_TYPE(target,<sp/>IPADDR_TYPE_V6);<sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="983"><highlight class="preprocessor"><sp/><sp/>ip4_addr_get_network(ip_2_ip4(target),<sp/>ip_2_ip4(host),<sp/>ip_2_ip4(netmask));<sp/>IP_SET_TYPE(target,<sp/>IPADDR_TYPE_V4);<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor">#define<sp/>ip_addr_netcmp(addr1,<sp/>addr2,<sp/>mask)<sp/>((IP_IS_V6(addr1)<sp/>&amp;&amp;<sp/>IP_IS_V6(addr2))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="986"><highlight class="preprocessor"><sp/><sp/>0<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="987"><highlight class="preprocessor"><sp/><sp/>ip4_addr_netcmp(ip_2_ip4(addr1),<sp/>ip_2_ip4(addr2),<sp/>mask))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor">#define<sp/>ip_addr_cmp(addr1,<sp/>addr2)<sp/><sp/><sp/><sp/>((IP_GET_TYPE(addr1)<sp/>!=<sp/>IP_GET_TYPE(addr2))<sp/>?<sp/>0<sp/>:<sp/>(IP_IS_V6_VAL(*(addr1))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="990"><highlight class="preprocessor"><sp/><sp/>ip6_addr_cmp(ip_2_ip6(addr1),<sp/>ip_2_ip6(addr2))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="991"><highlight class="preprocessor"><sp/><sp/>ip4_addr_cmp(ip_2_ip4(addr1),<sp/>ip_2_ip4(addr2))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="preprocessor">#define<sp/>ip_addr_isany(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IP_IS_V6(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="994"><highlight class="preprocessor"><sp/><sp/>ip6_addr_isany(ip_2_ip6(ipaddr))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="995"><highlight class="preprocessor"><sp/><sp/>ip4_addr_isany(ip_2_ip4(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="preprocessor">#define<sp/>ip_addr_isany_val(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((IP_IS_V6_VAL(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="998"><highlight class="preprocessor"><sp/><sp/>ip6_addr_isany_val(*ip_2_ip6(&amp;(ipaddr)))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="999"><highlight class="preprocessor"><sp/><sp/>ip4_addr_isany_val(*ip_2_ip4(&amp;(ipaddr))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="preprocessor">#define<sp/>ip_addr_isbroadcast(ipaddr,<sp/>netif)<sp/>((IP_IS_V6(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="1002"><highlight class="preprocessor"><sp/><sp/>0<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1003"><highlight class="preprocessor"><sp/><sp/>ip4_addr_isbroadcast(ip_2_ip4(ipaddr),<sp/>netif))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="preprocessor">#define<sp/>ip_addr_ismulticast(ipaddr)<sp/><sp/>((IP_IS_V6(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="1006"><highlight class="preprocessor"><sp/><sp/>ip6_addr_ismulticast(ip_2_ip6(ipaddr))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1007"><highlight class="preprocessor"><sp/><sp/>ip4_addr_ismulticast(ip_2_ip4(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="preprocessor">#define<sp/>ip_addr_isloopback(ipaddr)<sp/><sp/>((IP_IS_V6(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="1010"><highlight class="preprocessor"><sp/><sp/>ip6_addr_isloopback(ip_2_ip6(ipaddr))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1011"><highlight class="preprocessor"><sp/><sp/>ip4_addr_isloopback(ip_2_ip4(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="preprocessor">#define<sp/>ip_addr_islinklocal(ipaddr)<sp/><sp/>((IP_IS_V6(ipaddr))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="1014"><highlight class="preprocessor"><sp/><sp/>ip6_addr_islinklocal(ip_2_ip6(ipaddr))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1015"><highlight class="preprocessor"><sp/><sp/>ip4_addr_islinklocal(ip_2_ip4(ipaddr)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_debug_print(debug,<sp/>ipaddr)<sp/>do<sp/>{<sp/>if(IP_IS_V6(ipaddr))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1017"><highlight class="preprocessor"><sp/><sp/>ip6_addr_debug_print(debug,<sp/>ip_2_ip6(ipaddr));<sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1018"><highlight class="preprocessor"><sp/><sp/>ip4_addr_debug_print(debug,<sp/>ip_2_ip4(ipaddr));<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_debug_print_val(debug,<sp/>ipaddr)<sp/>do<sp/>{<sp/>if(IP_IS_V6_VAL(ipaddr))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1020"><highlight class="preprocessor"><sp/><sp/>ip6_addr_debug_print_val(debug,<sp/>*ip_2_ip6(&amp;(ipaddr)));<sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1021"><highlight class="preprocessor"><sp/><sp/>ip4_addr_debug_print_val(debug,<sp/>*ip_2_ip4(&amp;(ipaddr)));<sp/>}}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="preprocessor">#define<sp/>ipaddr_ntoa(addr)<sp/><sp/><sp/>(((addr)<sp/>==<sp/>NULL)<sp/>?<sp/>&quot;NULL&quot;<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1024"><highlight class="preprocessor"><sp/><sp/>((IP_IS_V6(addr))<sp/>?<sp/>ip6addr_ntoa(ip_2_ip6(addr))<sp/>:<sp/>ip4addr_ntoa(ip_2_ip4(addr))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="preprocessor">#define<sp/>ipaddr_ntoa_r(addr,<sp/>buf,<sp/>buflen)<sp/><sp/><sp/>(((addr)<sp/>==<sp/>NULL)<sp/>?<sp/>&quot;NULL&quot;<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1027"><highlight class="preprocessor"><sp/><sp/>((IP_IS_V6(addr))<sp/>?<sp/>ip6addr_ntoa_r(ip_2_ip6(addr),<sp/>buf,<sp/>buflen)<sp/>:<sp/>ip4addr_ntoa_r(ip_2_ip4(addr),<sp/>buf,<sp/>buflen)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipaddr_aton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp,<sp/><ref refid="structip__addr" kindref="compound">ip_addr_t</ref><sp/>*addr);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="preprocessor">#define<sp/>IPADDR_STRLEN_MAX<sp/><sp/><sp/>IP6ADDR_STRLEN_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="preprocessor">#define<sp/>ip4_2_ipv4_mapped_ipv6(ip6addr,<sp/>ip4addr)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1035"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[3]<sp/>=<sp/>(ip4addr)-&gt;addr;<sp/>\</highlight></codeline>
<codeline lineno="1036"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[2]<sp/>=<sp/>PP_HTONL(0x0000FFFFUL);<sp/>\</highlight></codeline>
<codeline lineno="1037"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[1]<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="1038"><highlight class="preprocessor"><sp/><sp/>(ip6addr)-&gt;addr[0]<sp/>=<sp/>0;<sp/>}<sp/>while(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="preprocessor">#define<sp/>unmap_ipv4_mapped_ipv6(ip4addr,<sp/>ip6addr)<sp/>\</highlight></codeline>
<codeline lineno="1042"><highlight class="preprocessor"><sp/><sp/>(ip4addr)-&gt;addr<sp/>=<sp/>(ip6addr)-&gt;addr[3];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP46_ADDR_ANY(type)<sp/>(((type)<sp/>==<sp/>IPADDR_TYPE_V6)?<sp/>IP6_ADDR_ANY<sp/>:<sp/>IP4_ADDR_ANY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR_PCB_VERSION_MATCH(addr,<sp/>pcb)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR_PCB_VERSION_MATCH_EXACT(pcb,<sp/>ipaddr)<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ip4_addr_t<sp/><ref refid="wm__netif_8h_1a335a8c9df66319e88a1a529047ce0a1e" kindref="member">ip_addr_t</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR4_INIT(u32val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>u32val<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR4_INIT_BYTES(a,b,c,d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPADDR4_INIT(PP_HTONL(LWIP_MAKEU32(a,b,c,d)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V4_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V6_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V4(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V6(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_ANY_TYPE_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_SET_TYPE_VAL(ipaddr,<sp/>iptype)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_SET_TYPE(ipaddr,<sp/>iptype)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_GET_TYPE(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPADDR_TYPE_V4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_2_ip4(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR4(ipaddr,a,b,c,d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP4_ADDR(ipaddr,a,b,c,d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_copy(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_copy(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_copy_from_ip4(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_copy(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_ip4_u32(ipaddr,<sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set_u32(ip_2_ip4(ipaddr),<sp/>val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_get_ip4_u32(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_get_u32(ip_2_ip4(ipaddr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_ipaddr(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_zero(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set_zero(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_zero_ip4(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set_zero(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_any(is_ipv6,<sp/>ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set_any(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_loopback(is_ipv6,<sp/>ipaddr)<sp/><sp/><sp/>ip4_addr_set_loopback(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_hton(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_set_hton(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_get_network(target,<sp/>host,<sp/>mask)<sp/>ip4_addr_get_network(target,<sp/>host,<sp/>mask)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_netcmp(addr1,<sp/>addr2,<sp/>mask)<sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_netcmp(addr1,<sp/>addr2,<sp/>mask)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_cmp(addr1,<sp/>addr2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_cmp(addr1,<sp/>addr2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isany(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_isany(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isany_val(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_isany_val(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isloopback(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_isloopback(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_islinklocal(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_islinklocal(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isbroadcast(addr,<sp/>netif)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_isbroadcast(addr,<sp/>netif)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_ismulticast(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_ismulticast(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_debug_print(debug,<sp/>ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/>ip4_addr_debug_print(debug,<sp/>ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_debug_print_val(debug,<sp/>ipaddr)<sp/><sp/>ip4_addr_debug_print_val(debug,<sp/>ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ipaddr_ntoa(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4addr_ntoa(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ipaddr_ntoa_r(ipaddr,<sp/>buf,<sp/>buflen)<sp/><sp/><sp/><sp/><sp/><sp/>ip4addr_ntoa_r(ipaddr,<sp/>buf,<sp/>buflen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ipaddr_aton(cp,<sp/>addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip4addr_aton(cp,<sp/>addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR_STRLEN_MAX<sp/><sp/><sp/>IP4ADDR_STRLEN_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP46_ADDR_ANY(type)<sp/>(IP4_ADDR_ANY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ip6_addr_t<sp/><ref refid="wm__netif_8h_1a335a8c9df66319e88a1a529047ce0a1e" kindref="member">ip_addr_t</ref>;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR6_INIT(a,<sp/>b,<sp/>c,<sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>a,<sp/>b,<sp/>c,<sp/>d<sp/>}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR6_INIT_HOST(a,<sp/>b,<sp/>c,<sp/>d)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>{<sp/>PP_HTONL(a),<sp/>PP_HTONL(b),<sp/>PP_HTONL(c),<sp/>PP_HTONL(d)<sp/>}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V4_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V6_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V4(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_V6(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_IS_ANY_TYPE_VAL(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_SET_TYPE_VAL(ipaddr,<sp/>iptype)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_SET_TYPE(ipaddr,<sp/>iptype)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_GET_TYPE(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPADDR_TYPE_V6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_2_ip6(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR6(ipaddr,i0,i1,i2,i3)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP6_ADDR(ipaddr,i0,i1,i2,i3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_ADDR6_HOST(ipaddr,i0,i1,i2,i3)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>IP_ADDR6(ipaddr,PP_HTONL(i0),PP_HTONL(i1),PP_HTONL(i2),PP_HTONL(i3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_copy(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_copy(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_copy_from_ip6(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_copy(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_ipaddr(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_zero(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set_zero(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_zero_ip6(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set_zero(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_any(is_ipv6,<sp/>ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set_any(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_loopback(is_ipv6,<sp/>ipaddr)<sp/><sp/><sp/>ip6_addr_set_loopback(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_set_hton(dest,<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_set_hton(dest,<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_get_network(target,<sp/>host,<sp/>mask)<sp/>ip6_addr_set_zero(target)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_netcmp(addr1,<sp/>addr2,<sp/>mask)<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_cmp(addr1,<sp/>addr2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_cmp(addr1,<sp/>addr2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isany(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_isany(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isany_val(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_isany_val(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isloopback(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_isloopback(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_islinklocal(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_islinklocal(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_isbroadcast(addr,<sp/>netif)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_ismulticast(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_ismulticast(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_debug_print(debug,<sp/>ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/>ip6_addr_debug_print(debug,<sp/>ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_debug_print_val(debug,<sp/>ipaddr)<sp/><sp/>ip6_addr_debug_print_val(debug,<sp/>ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ipaddr_ntoa(ipaddr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6addr_ntoa(ipaddr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ipaddr_ntoa_r(ipaddr,<sp/>buf,<sp/>buflen)<sp/><sp/><sp/><sp/><sp/><sp/>ip6addr_ntoa_r(ipaddr,<sp/>buf,<sp/>buflen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ipaddr_aton(cp,<sp/>addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip6addr_aton(cp,<sp/>addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPADDR_STRLEN_MAX<sp/><sp/><sp/>IP6ADDR_STRLEN_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP46_ADDR_ANY(type)<sp/>(IP6_ADDR_ANY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INET_ADDRSTRLEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INET_ADDRSTRLEN<sp/><sp/><sp/><sp/><sp/>IP4ADDR_STRLEN_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INET6_ADDRSTRLEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INET6_ADDRSTRLEN<sp/><sp/><sp/><sp/>IP6ADDR_STRLEN_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_IPV4<sp/>&amp;&amp;<sp/>TLS_CONFIG_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="preprocessor">#define<sp/>inet_ntop(af,src,dst,size)<sp/>\</highlight></codeline>
<codeline lineno="1153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((af)<sp/>==<sp/>AF_INET6)<sp/>?<sp/>ip6addr_ntoa_r((const<sp/>ip6_addr_t*)(src),(dst),(size))<sp/>\</highlight></codeline>
<codeline lineno="1154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>:<sp/>(((af)<sp/>==<sp/>AF_INET)<sp/>?<sp/>ip4addr_ntoa_r((const<sp/>ip4_addr_t*)(src),(dst),(size))<sp/>:<sp/>NULL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="preprocessor">#define<sp/>inet_pton(af,src,dst)<sp/>\</highlight></codeline>
<codeline lineno="1157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((af)<sp/>==<sp/>AF_INET6)<sp/>?<sp/>ip6addr_aton((src),(ip6_addr_t*)(dst))<sp/>\</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>:<sp/>(((af)<sp/>==<sp/>AF_INET)<sp/>?<sp/>ip4addr_aton((src),(ip4_addr_t*)(dst))<sp/>:<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>TLS_CONFIG_IPV4<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV4<sp/>&amp;&amp;<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inet_ntop(af,src,dst,size)<sp/>\</highlight></codeline>
<codeline lineno="1161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((af)<sp/>==<sp/>AF_INET)<sp/>?<sp/>ip4addr_ntoa_r((const<sp/>ip4_addr_t*)(src),(dst),(size))<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inet_pton(af,src,dst)<sp/>\</highlight></codeline>
<codeline lineno="1163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((af)<sp/>==<sp/>AF_INET)<sp/>?<sp/>ip4addr_aton((src),(ip4_addr_t*)(dst))<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV4<sp/>&amp;&amp;<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inet_ntop(af,src,dst,size)<sp/>\</highlight></codeline>
<codeline lineno="1166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((af)<sp/>==<sp/>AF_INET6)<sp/>?<sp/>ip6addr_ntoa_r((const<sp/>ip6_addr_t*)(src),(dst),(size))<sp/>:<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inet_pton(af,src,dst)<sp/>\</highlight></codeline>
<codeline lineno="1168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((af)<sp/>==<sp/>AF_INET6)<sp/>?<sp/>ip6addr_aton((src),(ip6_addr_t*)(dst))<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TLS_CONFIG_IPV4<sp/>&amp;&amp;<sp/>TLS_CONFIG_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_ipaddr(<ref refid="structip__addr" kindref="compound">ip_addr_t</ref><sp/>*ip);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Include/Net/wm_sockets2.0.3.h"/>
  </compounddef>
</doxygen>
