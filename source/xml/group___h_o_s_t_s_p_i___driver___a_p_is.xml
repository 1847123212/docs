<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="group___h_o_s_t_s_p_i___driver___a_p_is" kind="group">
    <compoundname>HOSTSPI_Driver_APIs</compoundname>
    <title>HOSTSPI Driver APIs</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1ga635f6073ca56f99d307da52a83013127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_spi_init</definition>
        <argsstring>(void)</argsstring>
        <name>tls_spi_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is used to initialize the SPI master driver. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>if initialize success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EBUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI is already initialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if malloc SPI memory fail</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1gad4ecaf515f4adc836210b2c24ac39785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_spi_setup</definition>
        <argsstring>(u8 mode, u8 cs_active, u32 fclk)</argsstring>
        <name>tls_spi_setup</name>
        <param>
          <type>u8</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>cs_active</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>fclk</declname>
        </param>
        <briefdescription>
<para>This function is used to setup the spi CPOL,CPHA,cs signal and clock. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>is CPOL and CPHA type defined in TLS_SPI_MODE_0 to TLS_SPI_MODE_3 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cs_active</parametername>
</parameternamelist>
<parameterdescription>
<para>is cs mode, defined as TLS_SPI_CS_LOW or TLS_SPI_CS_HIGH </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fclk</parametername>
</parameternamelist>
<parameterdescription>
<para>is spi clock,the unit is HZ.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>if setup success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EMODENOSUPPORT</parametername>
</parameternamelist>
<parameterdescription>
<para>if mode is not support </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if cs_active is not support </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ECLKNOSUPPORT</parametername>
</parameternamelist>
<parameterdescription>
<para>if fclk is not support</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1ga3c534b5d2120a3e21a420a9e95de05fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_spi_write</definition>
        <argsstring>(const u8 *buf, u32 len)</argsstring>
        <name>tls_spi_write</name>
        <param>
          <type>const u8 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>This function is used to synchronous write data by SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>is the user data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>is the data length.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>if write success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if argument is invalid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is no enough memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ESHUTDOWN</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI driver does not installed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1ga057ce408cb8dc896f9a4e007b527b76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_spi_read</definition>
        <argsstring>(u8 *buf, u32 len)</argsstring>
        <name>tls_spi_read</name>
        <param>
          <type>u8 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>This function is used to synchronous read data by SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>is the buffer for saving SPI data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>is the data length.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>if write success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if argument is invalid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is no enough memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ESHUTDOWN</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI driver does not installed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1gac650927a37520d2f306fe24621016119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_spi_read_with_cmd</definition>
        <argsstring>(const u8 *txbuf, u32 n_tx, u8 *rxbuf, u32 n_rx)</argsstring>
        <name>tls_spi_read_with_cmd</name>
        <param>
          <type>const u8 *</type>
          <declname>txbuf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>n_tx</declname>
        </param>
        <param>
          <type>u8 *</type>
          <declname>rxbuf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>n_rx</declname>
        </param>
        <briefdescription>
<para>This function is used to synchronous write command then read data by SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">txbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>is the write data buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n_tx</parametername>
</parameternamelist>
<parameterdescription>
<para>is the write data length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rxbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>is the read data buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n_rx</parametername>
</parameternamelist>
<parameterdescription>
<para>is the read data length.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>if write success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if argument is invalid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is no enough memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ESHUTDOWN</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI driver does not installed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1gaf5f6be8f66a91de38a5972b091c25519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tls_spi_write_with_cmd</definition>
        <argsstring>(const u8 *cmd, u32 n_cmd, const u8 *txbuf, u32 n_tx)</argsstring>
        <name>tls_spi_write_with_cmd</name>
        <param>
          <type>const u8 *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>n_cmd</declname>
        </param>
        <param>
          <type>const u8 *</type>
          <declname>txbuf</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>n_tx</declname>
        </param>
        <briefdescription>
<para>This function is used to synchronous write 32bit command then write data by SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>is the command data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>is the command len,can not bigger than four </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">txbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>is the write data buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n_tx</parametername>
</parameternamelist>
<parameterdescription>
<para>is the write data length.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>if write success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>if argument is invalid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>if there is no enough memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TLS_SPI_STATUS_ESHUTDOWN</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI driver does not installed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___h_o_s_t_s_p_i___driver___a_p_is_1ga6e780e0d8f8ea4c14f359a1e9a51c5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tls_spi_trans_type</definition>
        <argsstring>(u8 type)</argsstring>
        <name>tls_spi_trans_type</name>
        <param>
          <type>u8</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>This function is used to set SPI transfer mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>is the transfer type. type == SPI_BYTE_TRANSFER byte transfer type == SPI_WORD_TRANSFER word transfer type == SPI_DMA_TRANSFER DMA transfer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Driver/wm_hostspi.h" line="286" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>HOSTSPI driver APIs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
