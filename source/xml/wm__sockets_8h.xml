<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="wm__sockets_8h" kind="file" language="C++">
    <compoundname>wm_sockets.h</compoundname>
    <includes refid="wm__config_8h" local="yes">wm_config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="wm__type__def_8h" local="yes">wm_type_def.h</includes>
    <includes refid="wm__netif_8h" local="yes">wm_netif.h</includes>
    <includedby refid="wm__include_8h" local="yes">Include/wm_include.h</includedby>
    <includedby refid="wm__netif2_80_83_8h" local="yes">Include/App/wm_netif2.0.3.h</includedby>
    <incdepgraph>
      <node id="251">
        <label>wm_type_def.h</label>
        <link refid="wm__type__def_8h"/>
      </node>
      <node id="247">
        <label>wm_os_config.h</label>
        <link refid="wm__os__config_8h"/>
      </node>
      <node id="249">
        <label>wm_ram_config.h</label>
        <link refid="wm__ram__config_8h"/>
      </node>
      <node id="248">
        <label>wm_wifi_config.h</label>
        <link refid="wm__wifi__config_8h"/>
      </node>
      <node id="245">
        <label>Include/Net/wm_sockets.h</label>
        <link refid="wm__sockets_8h"/>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>wm_wifi.h</label>
        <link refid="wm__wifi_8h"/>
      </node>
      <node id="252">
        <label>wm_netif.h</label>
        <link refid="wm__netif_8h"/>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="254">
        <label>wm_params.h</label>
        <link refid="wm__params_8h"/>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>wm_config.h</label>
        <link refid="wm__config_8h"/>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="250">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="255">
        <label>Include/Net/wm_sockets.h</label>
        <link refid="wm__sockets_8h"/>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>Include/App/wm_netif2.0.3.h</label>
        <link refid="wm__netif2_80_83_8h"/>
      </node>
      <node id="256">
        <label>Include/wm_include.h</label>
        <link refid="wm__include_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structin__address" prot="public">in_address</innerclass>
    <innerclass refid="structin6__addr" prot="public">in6_addr</innerclass>
    <innerclass refid="structsockaddr__in" prot="public">sockaddr_in</innerclass>
    <innerclass refid="structsockaddr__in6" prot="public">sockaddr_in6</innerclass>
    <innerclass refid="structsockaddr" prot="public">sockaddr</innerclass>
    <innerclass refid="structhostent" prot="public">hostent</innerclass>
    <innerclass refid="structlinger" prot="public">linger</innerclass>
    <innerclass refid="structip__mreq" prot="public">ip_mreq</innerclass>
    <innerclass refid="structfd__set" prot="public">fd_set</innerclass>
    <innerclass refid="structtimeval" prot="public">timeval</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wm__sockets_8h_1ac7f92897f00d3373bf818709dfb0724a" prot="public" static="no">
        <name>s6_addr</name>
        <initializer>un.u8_addr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="47" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4d04a8261523c8f3473946257c12ce5b" prot="public" static="no">
        <name>h_addr</name>
        <initializer>h_addr_list[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for backward compatibility </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="85" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a249394484f9410a2e3f8eba24657feb9" prot="public" static="no">
        <name>SOCK_STREAM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket protocol types: TCP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="90" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4db8b9a846c67404db0b6f014f9a9fdf" prot="public" static="no">
        <name>SOCK_DGRAM</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket protocol types: UDP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="92" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a346f84e37c42f88e91e7304c3d77fde8" prot="public" static="no">
        <name>SOCK_RAW</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Socket protocol types: RAW </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="94" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a9dbc641eb342d3ad19f1162305d268d6" prot="public" static="no">
        <name>SO_DEBUG</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: turn on debugging info recording </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="100" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4a86a7abccf8140410bf8a64c571bd6d" prot="public" static="no">
        <name>SO_ACCEPTCONN</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>socket has had <ref refid="group___s_o_c_k_e_t___a_p_is_1gadd5137ee4523809b8e087345ff5dae6f" kindref="member">listen()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="102" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a5589f74fada0d0cd47bd6ea8741a58ee" prot="public" static="no">
        <name>SO_REUSEADDR</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow local address reuse </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="104" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a0691781c519eed3f9a634f8eb55cd258" prot="public" static="no">
        <name>SO_KEEPALIVE</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>keep connections alive </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="106" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4a6d9f7ea4bf046c50102c17ba1faf37" prot="public" static="no">
        <name>SO_DONTROUTE</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: just use interface addresses </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="108" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ad05e5d66b4608d73747c4a10b802a737" prot="public" static="no">
        <name>SO_BROADCAST</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permit to send and to receive broadcast messages (see IP_SOF_BROADCAST option) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="110" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a9f051c5764666e36a27dfa7de1d5299a" prot="public" static="no">
        <name>SO_USELOOPBACK</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: bypass hardware when possible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="112" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a552d2cd8ffc1157c016299c5eba95b72" prot="public" static="no">
        <name>SO_LINGER</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>linger on close if data present </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="114" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a1ab39f351679dd0e32436f0e6c9890d4" prot="public" static="no">
        <name>SO_OOBINLINE</name>
        <initializer>0x0100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: leave received OOB data in line </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="116" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a36151618368affd148255e77785e365e" prot="public" static="no">
        <name>SO_REUSEPORT</name>
        <initializer>0x0200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: allow local address &amp; port reuse </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="118" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aede2022ca89457890f6e43ed67086a86" prot="public" static="no">
        <name>SO_DONTLINGER</name>
        <initializer>((int)(~<ref refid="wm__sockets_8h_1a552d2cd8ffc1157c016299c5eba95b72" kindref="member">SO_LINGER</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do not linger on close if data present </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="120" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af618cbb85161ff3196d3bcdf7565ba64" prot="public" static="no">
        <name>SO_SNDBUF</name>
        <initializer>0x1001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: send buffer size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="126" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a0db12e960ac303030400d9fd95391b52" prot="public" static="no">
        <name>SO_RCVBUF</name>
        <initializer>0x1002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>receive buffer size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="128" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a5b4707f0d55cfacf9cd25e5554975c8f" prot="public" static="no">
        <name>SO_SNDLOWAT</name>
        <initializer>0x1003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: send low-water mark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="130" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ac750f0f8266f391654627fe3068f79c8" prot="public" static="no">
        <name>SO_RCVLOWAT</name>
        <initializer>0x1004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: receive low-water mark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="132" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ab9d2f7ca5c94bd51cdab3e1913b66e2d" prot="public" static="no">
        <name>SO_SNDTIMEO</name>
        <initializer>0x1005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: send timeout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="134" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af2d1ed6a34336a6f3df80fb518325846" prot="public" static="no">
        <name>SO_RCVTIMEO</name>
        <initializer>0x1006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>receive timeout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="136" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a040d4fd00495232970a03425bc00e77a" prot="public" static="no">
        <name>SO_ERROR</name>
        <initializer>0x1007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get error status and clear </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="138" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a8ab1e00e94a92737d3a4b407f7fa90f1" prot="public" static="no">
        <name>SO_TYPE</name>
        <initializer>0x1008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get socket type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="140" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a78b29d7e045bfa7fb4a1feb9ff84cfa3" prot="public" static="no">
        <name>SO_CONTIMEO</name>
        <initializer>0x1009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: connect timeout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="142" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a88d1651c7afcaf0a010fa1ac8e35bce9" prot="public" static="no">
        <name>SO_NO_CHECK</name>
        <initializer>0x100a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>don&apos;t create UDP checksum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="144" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a92d045f6ee2f343d6b28830a9fec082e" prot="public" static="no">
        <name>SOL_SOCKET</name>
        <initializer>0xfff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>options for socket level </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="157" column="10" bodyfile="Include/Net/wm_sockets.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ae77ae24b14b7b7f294f3e04121173f12" prot="public" static="no">
        <name>AF_UNSPEC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unspecified </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="163" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a9930604d0e32588eae76f43ca38e7826" prot="public" static="no">
        <name>AF_INET</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP Address family </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="165" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a3f5da0b5be27fe31ec7cc11bfa8d1a25" prot="public" static="no">
        <name>PF_INET</name>
        <initializer><ref refid="wm__sockets_8h_1a9930604d0e32588eae76f43ca38e7826" kindref="member">AF_INET</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP protocol family </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="167" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a51dba11ffc8e3b1bf695e721b3144094" prot="public" static="no">
        <name>PF_UNSPEC</name>
        <initializer><ref refid="wm__sockets_8h_1ae77ae24b14b7b7f294f3e04121173f12" kindref="member">AF_UNSPEC</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unspecified </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="169" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aa03706b2738b9a58d4985dfbe99e1bac" prot="public" static="no">
        <name>AF_INET6</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP version 6 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="171" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1abf96615d54d7d81630efc2e8f1770223" prot="public" static="no">
        <name>IPPROTO_IP</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dummy protocol for TCP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="177" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a94f83c72c1e5e6ef453e47cf59885fb5" prot="public" static="no">
        <name>IPPROTO_TCP</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmission Control Protocol </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="179" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ab332d40b15142f33a88d4fcb1d6a5920" prot="public" static="no">
        <name>IPPROTO_UDP</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User Datagram Protocol </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="181" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a76019e374e4b3301abea0090e9c5c0f6" prot="public" static="no">
        <name>IPPROTO_UDPLITE</name>
        <initializer>136</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>UDP-Lite (RFC 3828) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="183" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a60c35b1016d0d87fe1066ea817acad98" prot="public" static="no">
        <name>MSG_PEEK</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Peeks at an incoming message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="187" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a0c0fac4635e91ca9d839e20a09d3989e" prot="public" static="no">
        <name>MSG_WAITALL</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: Requests that the function block until the full amount of data requested can be returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="190" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a99bc202592bac1adbd525f47b359b722" prot="public" static="no">
        <name>MSG_OOB</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unimplemented: Requests out-of-band data. The significance and semantics of out-of-band data are protocol-specific </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="193" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ab18d3d439e4a9c8d0f73e7166e8eb376" prot="public" static="no">
        <name>MSG_DONTWAIT</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nonblocking i/o for this operation only </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="195" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a7b7c7e5e523ff0fc8823e7bff7665ead" prot="public" static="no">
        <name>MSG_MORE</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sender will send more </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="197" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a879a5597c2c02787d91b6a112c2660a2" prot="public" static="no">
        <name>IP_TOS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>int; IP type of service and precedence. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="204" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4e304dc3f19993aee2a94bb63ee5f2fa" prot="public" static="no">
        <name>IP_TTL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>int; IP time to live. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="206" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a924b1653500b7d3bf1bcef96a1a28431" prot="public" static="no">
        <name>IP_ADD_MEMBERSHIP</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structip__mreq" kindref="compound">ip_mreq</ref>; add an IP group membership </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="240" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ad9e530e8ee1d2a001717d40d3aa26618" prot="public" static="no">
        <name>IP_DROP_MEMBERSHIP</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structip__mreq" kindref="compound">ip_mreq</ref>; drop an IP group membership </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="242" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1abf2be8a26ec89482c3c440028aacc523" prot="public" static="no">
        <name>IP_MULTICAST_TTL</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>u_char; set/get IP multicast ttl </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="244" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a95ac9ecdbd7845274e20667d3b42cd00" prot="public" static="no">
        <name>IP_MULTICAST_IF</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structin__addr" kindref="compound">in_addr</ref>; set/get IP multicast i/f </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="246" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a5481dc4543c45fa31bf769119057a259" prot="public" static="no">
        <name>IP_MULTICAST_LOOP</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>i_char; set/get IP multicast loopback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="248" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4bc64f5f52739a41d25425e2190fa217" prot="public" static="no">
        <name>IPTOS_TOS_MASK</name>
        <initializer>0x1E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="273" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a965fa6b51d3e7d9132b1413fde5eb8ab" prot="public" static="no">
        <name>IPTOS_TOS</name>
        <param><defname>tos</defname></param>
        <initializer>((tos) &amp; <ref refid="wm__sockets2_80_83_8h_1a4bc64f5f52739a41d25425e2190fa217" kindref="member">IPTOS_TOS_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="274" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a417721f0e1f1445e71fc0f55e04c7026" prot="public" static="no">
        <name>IPTOS_LOWDELAY</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="275" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a130bd030a96cdf2ad079d4d0e452af8c" prot="public" static="no">
        <name>IPTOS_THROUGHPUT</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="276" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a4dab62eb6b0c87716f292a38ea179f60" prot="public" static="no">
        <name>IPTOS_RELIABILITY</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="277" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af8a4a9b6f335b1d76c2f000610087a33" prot="public" static="no">
        <name>IPTOS_LOWCOST</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="278" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a6dc4cfef3512b905e64164e25a611e54" prot="public" static="no">
        <name>IPTOS_MINCOST</name>
        <initializer>IPTOS_LOWCOST</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="279" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ac8dd803ec5ce870aab899e5193ee4450" prot="public" static="no">
        <name>IPTOS_PREC_MASK</name>
        <initializer>0xe0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="290" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a7c2ec82e247b0722573cdf0fd6a23ba1" prot="public" static="no">
        <name>IPTOS_PREC</name>
        <param><defname>tos</defname></param>
        <initializer>((tos) &amp; IPTOS_PREC_MASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="291" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1abbadb580e845deee10f08617b37c9f76" prot="public" static="no">
        <name>IPTOS_PREC_NETCONTROL</name>
        <initializer>0xe0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="292" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aad2536be3b05d82e79158c07c0d26142" prot="public" static="no">
        <name>IPTOS_PREC_INTERNETCONTROL</name>
        <initializer>0xc0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="293" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ae85f29854b413cd4e025c72dcab4b91b" prot="public" static="no">
        <name>IPTOS_PREC_CRITIC_ECP</name>
        <initializer>0xa0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="294" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ae3b1617689bb38814e538ee7fa8156db" prot="public" static="no">
        <name>IPTOS_PREC_FLASHOVERRIDE</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="295" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ad77807141a68a553295ca04447c90d84" prot="public" static="no">
        <name>IPTOS_PREC_FLASH</name>
        <initializer>0x60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="296" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a19815ff979eaed79adc64041ac70e3ec" prot="public" static="no">
        <name>IPTOS_PREC_IMMEDIATE</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="297" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a5cf64e373ede3045bf4b1c57ce371383" prot="public" static="no">
        <name>IPTOS_PREC_PRIORITY</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="298" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1abc94cde17aa2536a76fd5904fd2b25e8" prot="public" static="no">
        <name>IPTOS_PREC_ROUTINE</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="299" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a12085624b18c53c98d676ef97d617292" prot="public" static="no">
        <name>IOCPARM_MASK</name>
        <initializer>0x7fU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>parameters must be &lt; 128 bytes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="314" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a7871c80cdb00b01cc72dc287259a5986" prot="public" static="no">
        <name>IOC_VOID</name>
        <initializer>0x20000000UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>no parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="316" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aefe531e01b900d7ec9446d8a72060870" prot="public" static="no">
        <name>IOC_OUT</name>
        <initializer>0x40000000UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copy out parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="318" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af941c6f2773d4304f947706d53fb9873" prot="public" static="no">
        <name>IOC_IN</name>
        <initializer>0x80000000UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copy in parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="320" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a92f2b6ee13301e2094cfe3b4762265d2" prot="public" static="no">
        <name>IOC_INOUT</name>
        <initializer>(<ref refid="wm__sockets_8h_1af941c6f2773d4304f947706d53fb9873" kindref="member">IOC_IN</ref>|<ref refid="wm__sockets_8h_1aefe531e01b900d7ec9446d8a72060870" kindref="member">IOC_OUT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="321" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a31f5ca786d9d4a1d4bf70e5e9b0d9c7a" prot="public" static="no">
        <name>_IO</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(<ref refid="wm__sockets_8h_1a7871c80cdb00b01cc72dc287259a5986" kindref="member">IOC_VOID</ref>|((x)&lt;&lt;8)|(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="324" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a619d1feb2921838fd2fbc5a3a421abb7" prot="public" static="no">
        <name>_IOR</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>t</defname></param>
        <initializer>(<ref refid="wm__sockets_8h_1aefe531e01b900d7ec9446d8a72060870" kindref="member">IOC_OUT</ref>|(((long)sizeof(t)&amp;<ref refid="wm__sockets_8h_1a12085624b18c53c98d676ef97d617292" kindref="member">IOCPARM_MASK</ref>)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="326" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ae5215f9e1f7aecf5c21e4dc182fd20ab" prot="public" static="no">
        <name>_IOW</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>t</defname></param>
        <initializer>(<ref refid="wm__sockets_8h_1af941c6f2773d4304f947706d53fb9873" kindref="member">IOC_IN</ref>|(((long)sizeof(t)&amp;<ref refid="wm__sockets_8h_1a12085624b18c53c98d676ef97d617292" kindref="member">IOCPARM_MASK</ref>)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="328" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ac68826c621a12d91544dab200c86c75a" prot="public" static="no">
        <name>FIONREAD</name>
        <initializer>_IOR(&apos;f&apos;, 127, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get # bytes to read </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="333" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af48a6e38eb0ae226621514b44b9844eb" prot="public" static="no">
        <name>FIONBIO</name>
        <initializer>_IOW(&apos;f&apos;, 126, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set/clear non-blocking i/o </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="337" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a3b5746c83986d00d3c9a4463e2007bba" prot="public" static="no">
        <name>SIOCSHIWAT</name>
        <initializer>_IOW(&apos;s&apos;,  0, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set high watermark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="343" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a33801b5543b9cfe57f0c92dee4804a7e" prot="public" static="no">
        <name>SIOCGHIWAT</name>
        <initializer>_IOR(&apos;s&apos;,  1, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get high watermark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="345" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1acb393c38894038301db96869f117a740" prot="public" static="no">
        <name>SIOCSLOWAT</name>
        <initializer>_IOW(&apos;s&apos;,  2, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set low watermark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="347" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1accc098bc6021029c25a91f453d5d1724" prot="public" static="no">
        <name>SIOCGLOWAT</name>
        <initializer>_IOR(&apos;s&apos;,  3, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get low watermark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="349" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a0d3de9033c4baa7dba2387516e4ba40f" prot="public" static="no">
        <name>SIOCATMARK</name>
        <initializer>_IOR(&apos;s&apos;,  7, unsigned long)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>at oob mark </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="351" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a025fad21a889c79f02ec53abe3526c32" prot="public" static="no">
        <name>F_GETFL</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="356" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af2939853c650561d3495ed40f68f6249" prot="public" static="no">
        <name>F_SETFL</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="359" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a39d33ce33804efd4d52606d59071c6d8" prot="public" static="no">
        <name>O_NONBLOCK</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>nonblocking I/O </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="366" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a63ba256ec18f373817941d5a4d0e2d5e" prot="public" static="no">
        <name>O_NDELAY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>same as O_NONBLOCK, for compatibility </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="370" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af1c8cf84ac37451afaef3bde9976b6e1" prot="public" static="no">
        <name>SHUT_RD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No more receptions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="375" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1addb0a758e6fafdd89f5b7120f84738eb" prot="public" static="no">
        <name>SHUT_WR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No more transmissions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="377" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a80c54d1399557c97a0c81a319d08e9db" prot="public" static="no">
        <name>SHUT_RDWR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No more receptions or transmissions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="379" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a86c5dbf5a99358e288f573d6a1e0873f" prot="public" static="no">
        <name>FD_SETSIZE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="386" column="11" bodyfile="Include/Net/wm_sockets.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ad97013c4b9982b36a8308917d5c22c52" prot="public" static="no">
        <name>FD_SET</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>((p)-&gt;fd_bits[(n)/8] |=  (1 &lt;&lt; ((n) &amp; 7)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="387" column="11" bodyfile="Include/Net/wm_sockets.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af8400cddb6c274506ce072e1160ff09f" prot="public" static="no">
        <name>FD_CLR</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>((p)-&gt;fd_bits[(n)/8] &amp;= ~(1 &lt;&lt; ((n) &amp; 7)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="388" column="11" bodyfile="Include/Net/wm_sockets.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a9bc0a7e611c4d98105fdf031d60e29ad" prot="public" static="no">
        <name>FD_ISSET</name>
        <param><defname>n</defname></param>
        <param><defname>p</defname></param>
        <initializer>((p)-&gt;fd_bits[(n)/8] &amp;   (1 &lt;&lt; ((n) &amp; 7)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="389" column="11" bodyfile="Include/Net/wm_sockets.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a23c97009457b26f0e96afc9d0e10876b" prot="public" static="no">
        <name>FD_ZERO</name>
        <param><defname>p</defname></param>
        <initializer>memset((void*)(p),0,sizeof(*(p)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="390" column="11" bodyfile="Include/Net/wm_sockets.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aaffd64f6887883ec6401e6bb684c40fa" prot="public" static="no">
        <name>LWIP_TIMEVAL_PRIVATE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>LWIP_TIMEVAL_PRIVATE: if you want to use the struct timeval provided by your system, set this to 0 and include &lt;sys/time.h&gt; in cc.h </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="401" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a09c62e8a3bf599aa7f335e0ad0820e85" prot="public" static="no">
        <name>ip_addr_get_ip4_u32</name>
        <param><defname>ipaddr</defname></param>
        <initializer>((ipaddr)-&gt;addr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="413" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ab7fffd06ef1d1a7d34f99eedbb9f44dd" prot="public" static="no">
        <name>htons</name>
        <param><defname>n</defname></param>
        <initializer>((((n) &amp; 0xff) &lt;&lt; 8)       | (((n) &amp; 0xff00) &gt;&gt; 8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert 16bit between host and network byte order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="759" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1af8185bfc3e242e1460a6d7de5320a875" prot="public" static="no">
        <name>htonl</name>
        <param><defname>n</defname></param>
        <initializer>((((n) &amp; 0xff) &lt;&lt; 24)      | (((n) &amp; 0xff00) &lt;&lt; 8) |\
                                (((n) &amp; 0xff0000UL) &gt;&gt; 8) | (((n) &amp; 0xff000000UL) &gt;&gt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert 32bit between host and network byte order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="761" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ac095315f785966b573a80cf7502b654f" prot="public" static="no">
        <name>ntohs</name>
        <param><defname>n</defname></param>
        <initializer><ref refid="wm__sockets_8h_1ab7fffd06ef1d1a7d34f99eedbb9f44dd" kindref="member">htons</ref>(n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert 16bit between network and host byte order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="764" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ad1e59c7e2db1fdf26e5a3c4250af3e7f" prot="public" static="no">
        <name>ntohl</name>
        <param><defname>n</defname></param>
        <initializer><ref refid="wm__sockets_8h_1af8185bfc3e242e1460a6d7de5320a875" kindref="member">htonl</ref>(n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert 32bit between network and host byte order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="766" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a32caf20405b8659c07758352746c4331" prot="public" static="no">
        <name>ip4_addr1</name>
        <param><defname>ipaddr</defname></param>
        <initializer>(((u8*)(ipaddr))[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get first byte from the 4-byte address </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="769" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aee091caef24dd1705876bb8dbe28035c" prot="public" static="no">
        <name>ip4_addr2</name>
        <param><defname>ipaddr</defname></param>
        <initializer>(((u8*)(ipaddr))[1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get second byte from the 4-byte address </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="771" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1aead691bee580ea8111b70e67cf971c40" prot="public" static="no">
        <name>ip4_addr3</name>
        <param><defname>ipaddr</defname></param>
        <initializer>(((u8*)(ipaddr))[2])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get third byte from the 4-byte address </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="773" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="773" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1a78cbf5c1fd832f909f755c4cc9036f02" prot="public" static="no">
        <name>ip4_addr4</name>
        <param><defname>ipaddr</defname></param>
        <initializer>(((u8*)(ipaddr))[3])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get fourth byte from the 4-byte address </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="775" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wm__sockets_8h_1ab89a604cf190369ce8bdc84dcb5d59aa" prot="public" static="no">
        <name>inet_ntoa</name>
        <param><defname>addr</defname></param>
        <initializer><ref refid="group___s_o_c_k_e_t___a_p_is_1gace12d28aef35bb15962e8563aea571b1" kindref="member">ipaddr_ntoa</ref>((<ref refid="wm__netif_8h_1a335a8c9df66319e88a1a529047ce0a1e" kindref="member">ip_addr_t</ref>*)&amp;(addr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert numeric IP address into decimal dotted ASCII representation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="777" column="9" bodyfile="Include/Net/wm_sockets.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int socklen_t</definition>
        <argsstring></argsstring>
        <name>socklen_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type for length arguments in socket calls </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="25" column="1" bodyfile="Include/Net/wm_sockets.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets_8h_1a35d394b8ad5efe6fab086edd1641ed90" prot="public" static="no">
        <type>u8</type>
        <definition>typedef u8 sa_family_t</definition>
        <argsstring></argsstring>
        <name>sa_family_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="29" column="1" bodyfile="Include/Net/wm_sockets.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets_8h_1a19e418d713480fbd8b1c61ec6e2fee20" prot="public" static="no">
        <type>u16</type>
        <definition>typedef u16 in_port_t</definition>
        <argsstring></argsstring>
        <name>in_port_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="34" column="1" bodyfile="Include/Net/wm_sockets.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets_8h_1aa4d37763f8765fcd6df959b08d738c14" prot="public" static="no">
        <type>struct <ref refid="structip__mreq" kindref="compound">ip_mreq</ref></type>
        <definition>typedef struct ip_mreq  ip_mreq</definition>
        <argsstring></argsstring>
        <name>ip_mreq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request struct for multicast socket ops </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="wm__sockets_8h_1af0ed703bf1724b9af3e4d30d0cc932af" prot="public" static="no">
        <type>struct <ref refid="structfd__set" kindref="compound">fd_set</ref></type>
        <definition>typedef struct fd_set  fd_set</definition>
        <argsstring></argsstring>
        <name>fd_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="394" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gaaaf2f15c3d464ebd84caabb51920c4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int accept</definition>
        <argsstring>(int s, struct sockaddr *addr, socklen_t *addrlen)</argsstring>
        <name>accept</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>addrlen</declname>
        </param>
        <briefdescription>
<para>Await a connection on socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*addr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the address of the connecting </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*addrlen</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the address&apos;s actual length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the new socket&apos;s descriptor</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga8dca0ad474f0bb98c58283c151d6e2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bind</definition>
        <argsstring>(int s, const struct sockaddr *name, socklen_t namelen)</argsstring>
        <name>bind</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
<para>Give the socket ID the local address. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*name</parametername>
</parameternamelist>
<parameterdescription>
<para>the local address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">namelen</parametername>
</parameternamelist>
<parameterdescription>
<para>the local address length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga8744a596bc9132c457bcce518fb854dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shutdown</definition>
        <argsstring>(int s, int how)</argsstring>
        <name>shutdown</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>how</declname>
        </param>
        <briefdescription>
<para>Shut down all or part of the connection open on socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">how</parametername>
</parameternamelist>
<parameterdescription>
<para>HOW determines what to shut down: SHUT_RD = No more receptions; SHUT_WR = No more transmissions; SHUT_RDWR = No more receptions or transmissions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gacb704989306fb22b3586d14661a3f990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int closesocket</definition>
        <argsstring>(int s)</argsstring>
        <name>closesocket</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Destroy all or part of the connection open on socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga30a78fb09c5f8eb192eb9da70babda64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int connect</definition>
        <argsstring>(int s, const struct sockaddr *name, socklen_t namelen)</argsstring>
        <name>connect</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
<para>Open a connection on socket FD to peer at name. For connectionless socket types, just set the default address to send to and the only address from which to accept transmissions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*name</parametername>
</parameternamelist>
<parameterdescription>
<para>the address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">namelen</parametername>
</parameternamelist>
<parameterdescription>
<para>the address length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga7bafa2b03fec4e2d4e7492269b262975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getsockname</definition>
        <argsstring>(int s, struct sockaddr *name, socklen_t *namelen)</argsstring>
        <name>getsockname</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
<para>Put the local address of ID into *name and its length in *namelen. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*name</parametername>
</parameternamelist>
<parameterdescription>
<para>the address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*namelen</parametername>
</parameternamelist>
<parameterdescription>
<para>the address length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga4f016ffafb303902b981988fdc675940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getpeername</definition>
        <argsstring>(int s, struct sockaddr *name, socklen_t *namelen)</argsstring>
        <name>getpeername</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
<para>Put the address of the peer connected to socket FD into *name (which is *namelen bytes long), and its actual length into *namelen. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*name</parametername>
</parameternamelist>
<parameterdescription>
<para>the peer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*namelen</parametername>
</parameternamelist>
<parameterdescription>
<para>the peer length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga3437a49823cdfa961c994aaaf661bd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setsockopt</definition>
        <argsstring>(int s, int level, int optname, const void *optval, socklen_t optlen)</argsstring>
        <name>setsockopt</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>optval</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>optlen</declname>
        </param>
        <briefdescription>
<para>Set socket ID&apos;s option optname at protocol level to *optval (which is optlen bytes long) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">level</parametername>
</parameternamelist>
<parameterdescription>
<para>protocol level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">optname</parametername>
</parameternamelist>
<parameterdescription>
<para>option name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*optval</parametername>
</parameternamelist>
<parameterdescription>
<para>option value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">optlen</parametername>
</parameternamelist>
<parameterdescription>
<para>option value length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gaad5e3dc6d10cb45c3d98038a5733980c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getsockopt</definition>
        <argsstring>(int s, int level, int optname, void *optval, socklen_t *optlen)</argsstring>
        <name>getsockopt</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>optname</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>optval</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>optlen</declname>
        </param>
        <briefdescription>
<para>Put the current value for socket ID&apos;s option optname at protocol level into optval (which is *optlen bytes long), and set *optlen to the value&apos;s actual length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">level</parametername>
</parameternamelist>
<parameterdescription>
<para>protocol level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">optname</parametername>
</parameternamelist>
<parameterdescription>
<para>option name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*optval</parametername>
</parameternamelist>
<parameterdescription>
<para>option value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*optlen</parametername>
</parameternamelist>
<parameterdescription>
<para>option value length</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gadd5137ee4523809b8e087345ff5dae6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int listen</definition>
        <argsstring>(int s, int backlog)</argsstring>
        <name>listen</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>backlog</declname>
        </param>
        <briefdescription>
<para>Prepare to accept connections on socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">backlog</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum length to which the queue of pending connections</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>N connection requests will be queued before further requests are refused. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gac98728e53b98f1b22474f48ce6658749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int recv</definition>
        <argsstring>(int s, void *mem, size_t len, int flags)</argsstring>
        <name>recv</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Read len bytes into mem from socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*mem</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mem </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of Read bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>option of read</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the number read actually</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga0add4d77d9f1142e0256df85c5c4d992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int recvfrom</definition>
        <argsstring>(int s, void *mem, size_t len, int flags, struct sockaddr *from, socklen_t *fromlen)</argsstring>
        <name>recvfrom</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref> *</type>
          <declname>fromlen</declname>
        </param>
        <briefdescription>
<para>Read len bytes into mem through socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*mem</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mem </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of Read bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>option of read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*from</parametername>
</parameternamelist>
<parameterdescription>
<para>address of sender </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*fromlen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of address</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes read actually</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If from is not NULL, fill in *fromlen bytes of it with tha address of the sender, and store the actual size of the address in *fromlen. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="617" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gab4a2874617ed0d46a44b0da20b3850d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int send</definition>
        <argsstring>(int s, const void *data, size_t size, int flags)</argsstring>
        <name>send</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Send size bytes of data to socket ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data will be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>option of sent</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the number sent actually</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="633" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga7d0859ad197b472a5fd930872dab8763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sendto</definition>
        <argsstring>(int s, const void *data, size_t size, int flags, const struct sockaddr *to, socklen_t tolen)</argsstring>
        <name>sendto</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const struct <ref refid="structsockaddr" kindref="compound">sockaddr</ref> *</type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref></type>
          <declname>tolen</declname>
        </param>
        <briefdescription>
<para>Send size bytes of data on socket ID to peer at address to (which is tolen bytes long) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data will be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>option of sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*to</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to address of destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tolen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of address</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the number sent actually</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gaf4e0711877c45a41168ac677b0670ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int socket</definition>
        <argsstring>(int domain, int type, int protocol)</argsstring>
        <name>socket</name>
        <param>
          <type>int</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
<para>Create a new socket of type type in domain domain, using protocol protocol. If protocol is zero, one is chosen automatically. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">domain</parametername>
</parameternamelist>
<parameterdescription>
<para>Address families </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Socket protocol type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">protocol</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard well-defined IP protocols</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the new socket ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga7697c5e2abe442fee5267ff362eff0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int select</definition>
        <argsstring>(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset, struct timeval *timeout)</argsstring>
        <name>select</name>
        <param>
          <type>int</type>
          <declname>maxfdp1</declname>
        </param>
        <param>
          <type><ref refid="structfd__set" kindref="compound">fd_set</ref> *</type>
          <declname>readset</declname>
        </param>
        <param>
          <type><ref refid="structfd__set" kindref="compound">fd_set</ref> *</type>
          <declname>writeset</declname>
        </param>
        <param>
          <type><ref refid="structfd__set" kindref="compound">fd_set</ref> *</type>
          <declname>exceptset</declname>
        </param>
        <param>
          <type>struct <ref refid="structtimeval" kindref="compound">timeval</ref> *</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Check the first NFDS descriptors each in READFDS (if not NULL) for read readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS (if not NULL) for exceptional conditions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">maxfdp1</parametername>
</parameternamelist>
<parameterdescription>
<para>the highest socket index in the sets </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*readset</parametername>
</parameternamelist>
<parameterdescription>
<para>set of sockets to check for read events </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*writeset</parametername>
</parameternamelist>
<parameterdescription>
<para>set of sockets to check for write events </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*exceptset</parametername>
</parameternamelist>
<parameterdescription>
<para>set of sockets to check for error events </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>waitting time value</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of ready</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If TIMEOUT is not NULL, time out after waiting the interval specified therein. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga42742239f95827a7a86461d4ddaa3d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ioctlsocket</definition>
        <argsstring>(int s, long cmd, void *argp)</argsstring>
        <name>ioctlsocket</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argp</declname>
        </param>
        <briefdescription>
<para>Set/Get socket ID&apos;s option by command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>socket ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">*argp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga636674bf9937205b85a797ee6077faa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structhostent" kindref="compound">hostent</ref> *</type>
        <definition>struct hostent* gethostbyname</definition>
        <argsstring>(const char *name)</argsstring>
        <name>gethostbyname</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get entry from host data base for host with name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*name</parametername>
</parameternamelist>
<parameterdescription>
<para>hostname</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>!NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NULL</parametername>
</parameternamelist>
<parameterdescription>
<para>failed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1ga689de871afcb769240f7bf9f0d72b9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>u32 ipaddr_addr</definition>
        <argsstring>(const char *cp)</argsstring>
        <name>ipaddr_addr</name>
        <param>
          <type>const char *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Ascii internet address interpretation routine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*cp</parametername>
</parameternamelist>
<parameterdescription>
<para>IP address in ascii represenation (e.g. &quot;127.0.0.1&quot;)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ip address in network order</para></simplesect>
<simplesect kind="note"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_o_c_k_e_t___a_p_is_1gace12d28aef35bb15962e8563aea571b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* ipaddr_ntoa</definition>
        <argsstring>(const ip_addr_t *addr)</argsstring>
        <name>ipaddr_ntoa</name>
        <param>
          <type>const <ref refid="wm__netif_8h_1a335a8c9df66319e88a1a529047ce0a1e" kindref="member">ip_addr_t</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Convert numeric IP address into decimal dotted ASCII representation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*addr</parametername>
</parameternamelist>
<parameterdescription>
<para>addr ip address in network order to convert</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to a global static (!) buffer that holds the ASCII represenation of addr</para></simplesect>
<simplesect kind="note"><para>returns ptr to static buffer; not reentrant! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/Net/wm_sockets.h" line="735" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>socket apis </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>winnermicro</para></simplesect>
Copyright (c) 2014 Winner Microelectronics Co., Ltd. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>WM_SOCKET_API_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WM_SOCKET_API_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__config_8h" kindref="compound">wm_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TLS_CONFIG_LWIP_VER2_0_3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__sockets2_80_83_8h" kindref="compound">wm_sockets2.0.3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__type__def_8h" kindref="compound">wm_type_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wm__netif_8h" kindref="compound">wm_netif.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>socklen_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>socklen_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>your<sp/>port<sp/>already<sp/>typedef&apos;s<sp/>sa_family_t,<sp/>define<sp/>SA_FAMILY_T_DEFINED</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/>to<sp/>prevent<sp/>this<sp/>code<sp/>from<sp/>redefining<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(sa_family_t)<sp/>&amp;&amp;<sp/>!defined(SA_FAMILY_T_DEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u8<sp/><ref refid="wm__sockets2_80_83_8h_1ac1d1bf0e58741cf5e92739411d9e848f" kindref="member">sa_family_t</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>your<sp/>port<sp/>already<sp/>typedef&apos;s<sp/>in_port_t,<sp/>define<sp/>IN_PORT_T_DEFINED</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>to<sp/>prevent<sp/>this<sp/>code<sp/>from<sp/>redefining<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(in_port_t)<sp/>&amp;&amp;<sp/>!defined(IN_PORT_T_DEFINED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u16<sp/><ref refid="wm__sockets2_80_83_8h_1ae8ae7e0167cd5587b7403e02f202ddd9" kindref="member">in_port_t</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structin__address" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__address" kindref="compound">in_address</ref>{</highlight></codeline>
<codeline lineno="39" refid="structin__address_1a6413167e51a3269aae63e9209d1b0b02" refkind="member"><highlight class="normal"><sp/><sp/>u32<sp/><ref refid="structin__address_1a6413167e51a3269aae63e9209d1b0b02" kindref="member">s_addr</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structin6__addr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>u32_addr[4];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/><sp/>u8_addr[16];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}<sp/>un;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>s6_addr<sp/><sp/>un.u8_addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structsockaddr__in" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr__in" kindref="compound">sockaddr_in</ref><sp/>{</highlight></codeline>
<codeline lineno="53" refid="structsockaddr__in_1a5a44d7c63f2a63207889253dbf8771ac" refkind="member"><highlight class="normal"><sp/><sp/>u8<sp/><ref refid="structsockaddr__in_1a5a44d7c63f2a63207889253dbf8771ac" kindref="member">sin_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structsockaddr__in_1ab49bcca40b28a0c8eb0a2941ca098795" refkind="member"><highlight class="normal"><sp/><sp/>u8<sp/><ref refid="structsockaddr__in_1ab49bcca40b28a0c8eb0a2941ca098795" kindref="member">sin_family</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structsockaddr__in_1a44f9f5870495104b62d7753d88f40ee3" refkind="member"><highlight class="normal"><sp/><sp/>u16<sp/><ref refid="structsockaddr__in_1a44f9f5870495104b62d7753d88f40ee3" kindref="member">sin_port</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structsockaddr__in_1afdcaa232019d7b23d7c2e9b0367a9adc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__address" kindref="compound">in_address</ref><sp/><ref refid="structsockaddr__in_1afdcaa232019d7b23d7c2e9b0367a9adc" kindref="member">sin_addr</ref>;</highlight></codeline>
<codeline lineno="57" refid="structsockaddr__in_1a0254bfac1c18e922cb6638c3f6139e09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structsockaddr__in_1a0254bfac1c18e922cb6638c3f6139e09" kindref="member">sin_zero</ref>[8];<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structsockaddr__in6" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr__in6" kindref="compound">sockaddr_in6</ref><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>u8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_len;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>this<sp/>structure<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>sa_family_t<sp/><sp/><sp/><sp/><sp/>sin6_family;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AF_INET6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>in_port_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_port;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Transport<sp/>layer<sp/>port<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_flowinfo;<sp/></highlight><highlight class="comment">/*<sp/>IPv6<sp/>flow<sp/>information<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin6__addr" kindref="compound">in6_addr</ref><sp/>sin6_addr;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IPv6<sp/>address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin6_scope_id;<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>of<sp/>interfaces<sp/>for<sp/>scope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structsockaddr" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structsockaddr_1ace648295d8600b1564a45cdfdf4ce836" refkind="member"><highlight class="normal"><sp/><sp/>u8<sp/><ref refid="structsockaddr_1ace648295d8600b1564a45cdfdf4ce836" kindref="member">sa_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="structsockaddr_1a855eb400750c566f67bca1ab16bcbfe1" refkind="member"><highlight class="normal"><sp/><sp/>u8<sp/><ref refid="structsockaddr_1a855eb400750c566f67bca1ab16bcbfe1" kindref="member">sa_family</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structsockaddr_1a82791edaa35776a38d75182edb0f5a3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structsockaddr_1a82791edaa35776a38d75182edb0f5a3d" kindref="member">sa_data</ref>[14];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structhostent" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhostent" kindref="compound">hostent</ref><sp/>{</highlight></codeline>
<codeline lineno="78" refid="structhostent_1a2673b3effc9688880551140d4d683454" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structhostent_1a2673b3effc9688880551140d4d683454" kindref="member">h_name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="structhostent_1a4531fae316926d6a9f9ea3c5c9c673ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structhostent_1a4531fae316926d6a9f9ea3c5c9c673ec" kindref="member">h_aliases</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="structhostent_1a405ebb31a6922898809635b03f0faf06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhostent_1a405ebb31a6922898809635b03f0faf06" kindref="member">h_addrtype</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="structhostent_1ab9db18bfcc6adfc9c944b0c06ec2dccc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhostent_1ab9db18bfcc6adfc9c944b0c06ec2dccc" kindref="member">h_length</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="structhostent_1a724d319362cb1558e899960ba17ad953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structhostent_1a724d319362cb1558e899960ba17ad953" kindref="member">h_addr_list</ref>;<sp/></highlight></codeline>
<codeline lineno="85" refid="wm__sockets_8h_1a4d04a8261523c8f3473946257c12ce5b" refkind="member"><highlight class="preprocessor">#define<sp/>h_addr<sp/>h_addr_list[0]<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor">};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="wm__sockets_8h_1a249394484f9410a2e3f8eba24657feb9" refkind="member"><highlight class="preprocessor">#define<sp/>SOCK_STREAM<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="wm__sockets_8h_1a4db8b9a846c67404db0b6f014f9a9fdf" refkind="member"><highlight class="preprocessor">#define<sp/>SOCK_DGRAM<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="wm__sockets_8h_1a346f84e37c42f88e91e7304c3d77fde8" refkind="member"><highlight class="preprocessor">#define<sp/>SOCK_RAW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Option<sp/>flags<sp/>per-socket.<sp/>These<sp/>must<sp/>match<sp/>the<sp/>SOF_<sp/>flags<sp/>in<sp/>ip.h<sp/>(checked<sp/>in<sp/>init.c)</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="100" refid="wm__sockets_8h_1a9dbc641eb342d3ad19f1162305d268d6" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_DEBUG<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="wm__sockets_8h_1a4a86a7abccf8140410bf8a64c571bd6d" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_ACCEPTCONN<sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="wm__sockets_8h_1a5589f74fada0d0cd47bd6ea8741a58ee" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_REUSEADDR<sp/><sp/><sp/>0x0004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="wm__sockets_8h_1a0691781c519eed3f9a634f8eb55cd258" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_KEEPALIVE<sp/><sp/><sp/>0x0008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="wm__sockets_8h_1a4a6d9f7ea4bf046c50102c17ba1faf37" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_DONTROUTE<sp/><sp/><sp/>0x0010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="wm__sockets_8h_1ad05e5d66b4608d73747c4a10b802a737" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_BROADCAST<sp/><sp/><sp/>0x0020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="wm__sockets_8h_1a9f051c5764666e36a27dfa7de1d5299a" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_USELOOPBACK<sp/>0x0040</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="wm__sockets_8h_1a552d2cd8ffc1157c016299c5eba95b72" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_LINGER<sp/><sp/><sp/><sp/><sp/><sp/>0x0080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="wm__sockets_8h_1a1ab39f351679dd0e32436f0e6c9890d4" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_OOBINLINE<sp/><sp/><sp/>0x0100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="wm__sockets_8h_1a36151618368affd148255e77785e365e" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_REUSEPORT<sp/><sp/><sp/>0x0200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="wm__sockets_8h_1aede2022ca89457890f6e43ed67086a86" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SO_DONTLINGER<sp/><sp/><sp/>((int)(~SO_LINGER))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>Additional<sp/>options,<sp/>not<sp/>kept<sp/>in<sp/>so_options.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="126" refid="wm__sockets_8h_1af618cbb85161ff3196d3bcdf7565ba64" refkind="member"><highlight class="preprocessor">#define<sp/>SO_SNDBUF<sp/><sp/><sp/><sp/>0x1001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="wm__sockets_8h_1a0db12e960ac303030400d9fd95391b52" refkind="member"><highlight class="preprocessor">#define<sp/>SO_RCVBUF<sp/><sp/><sp/><sp/>0x1002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="wm__sockets_8h_1a5b4707f0d55cfacf9cd25e5554975c8f" refkind="member"><highlight class="preprocessor">#define<sp/>SO_SNDLOWAT<sp/><sp/>0x1003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="wm__sockets_8h_1ac750f0f8266f391654627fe3068f79c8" refkind="member"><highlight class="preprocessor">#define<sp/>SO_RCVLOWAT<sp/><sp/>0x1004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="wm__sockets_8h_1ab9d2f7ca5c94bd51cdab3e1913b66e2d" refkind="member"><highlight class="preprocessor">#define<sp/>SO_SNDTIMEO<sp/><sp/>0x1005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="wm__sockets_8h_1af2d1ed6a34336a6f3df80fb518325846" refkind="member"><highlight class="preprocessor">#define<sp/>SO_RCVTIMEO<sp/><sp/>0x1006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="wm__sockets_8h_1a040d4fd00495232970a03425bc00e77a" refkind="member"><highlight class="preprocessor">#define<sp/>SO_ERROR<sp/><sp/><sp/><sp/><sp/>0x1007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="wm__sockets_8h_1a8ab1e00e94a92737d3a4b407f7fa90f1" refkind="member"><highlight class="preprocessor">#define<sp/>SO_TYPE<sp/><sp/><sp/><sp/><sp/><sp/>0x1008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="wm__sockets_8h_1a78b29d7e045bfa7fb4a1feb9ff84cfa3" refkind="member"><highlight class="preprocessor">#define<sp/>SO_CONTIMEO<sp/><sp/>0x1009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="wm__sockets_8h_1a88d1651c7afcaf0a010fa1ac8e35bce9" refkind="member"><highlight class="preprocessor">#define<sp/>SO_NO_CHECK<sp/><sp/>0x100a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structlinger" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlinger" kindref="compound">linger</ref><sp/>{</highlight></codeline>
<codeline lineno="149" refid="structlinger_1aa917aeadf061af6ed64aad87df3255fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlinger_1aa917aeadf061af6ed64aad87df3255fc" kindref="member">l_onoff</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="structlinger_1a2b7d01c9a43f95d2ba6f6cf0ec68b412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlinger_1a2b7d01c9a43f95d2ba6f6cf0ec68b412" kindref="member">l_linger</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>Level<sp/>number<sp/>for<sp/>(get/set)sockopt()<sp/>to<sp/>apply<sp/>to<sp/>socket<sp/>itself.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="157" refid="wm__sockets_8h_1a92d045f6ee2f343d6b28830a9fec082e" refkind="member"><highlight class="preprocessor">#define<sp/><sp/>SOL_SOCKET<sp/><sp/>0xfff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>Address<sp/>families.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="163" refid="wm__sockets_8h_1ae77ae24b14b7b7f294f3e04121173f12" refkind="member"><highlight class="preprocessor">#define<sp/>AF_UNSPEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="wm__sockets_8h_1a9930604d0e32588eae76f43ca38e7826" refkind="member"><highlight class="preprocessor">#define<sp/>AF_INET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="wm__sockets_8h_1a3f5da0b5be27fe31ec7cc11bfa8d1a25" refkind="member"><highlight class="preprocessor">#define<sp/>PF_INET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_INET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="wm__sockets_8h_1a51dba11ffc8e3b1bf695e721b3144094" refkind="member"><highlight class="preprocessor">#define<sp/>PF_UNSPEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AF_UNSPEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="wm__sockets_8h_1aa03706b2738b9a58d4985dfbe99e1bac" refkind="member"><highlight class="preprocessor">#define<sp/>AF_INET6<sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>Standard<sp/>well-defined<sp/>IP<sp/>protocols.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="177" refid="wm__sockets_8h_1abf96615d54d7d81630efc2e8f1770223" refkind="member"><highlight class="preprocessor">#define<sp/>IPPROTO_IP<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="wm__sockets_8h_1a94f83c72c1e5e6ef453e47cf59885fb5" refkind="member"><highlight class="preprocessor">#define<sp/>IPPROTO_TCP<sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="wm__sockets_8h_1ab332d40b15142f33a88d4fcb1d6a5920" refkind="member"><highlight class="preprocessor">#define<sp/>IPPROTO_UDP<sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="wm__sockets_8h_1a76019e374e4b3301abea0090e9c5c0f6" refkind="member"><highlight class="preprocessor">#define<sp/>IPPROTO_UDPLITE<sp/>136</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>we<sp/>can<sp/>use<sp/>with<sp/>send<sp/>and<sp/>recv.<sp/>*/</highlight></codeline>
<codeline lineno="187" refid="wm__sockets_8h_1a60c35b1016d0d87fe1066ea817acad98" refkind="member"><highlight class="preprocessor">#define<sp/>MSG_PEEK<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="wm__sockets_8h_1a0c0fac4635e91ca9d839e20a09d3989e" refkind="member"><highlight class="preprocessor">#define<sp/>MSG_WAITALL<sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="wm__sockets_8h_1a99bc202592bac1adbd525f47b359b722" refkind="member"><highlight class="preprocessor">#define<sp/>MSG_OOB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="wm__sockets_8h_1ab18d3d439e4a9c8d0f73e7166e8eb376" refkind="member"><highlight class="preprocessor">#define<sp/>MSG_DONTWAIT<sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="wm__sockets_8h_1a7b7c7e5e523ff0fc8823e7bff7665ead" refkind="member"><highlight class="preprocessor">#define<sp/>MSG_MORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>Options<sp/>for<sp/>level<sp/>IPPROTO_IP</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="204" refid="wm__sockets_8h_1a879a5597c2c02787d91b6a112c2660a2" refkind="member"><highlight class="preprocessor">#define<sp/>IP_TOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="wm__sockets_8h_1a4e304dc3f19993aee2a94bb63ee5f2fa" refkind="member"><highlight class="preprocessor">#define<sp/>IP_TTL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_TCP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>Options<sp/>for<sp/>level<sp/>IPPROTO_TCP</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor">#define<sp/>TCP_NODELAY<sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor">#define<sp/>TCP_KEEPALIVE<sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor">#define<sp/>TCP_KEEPIDLE<sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor">#define<sp/>TCP_KEEPINTVL<sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">#define<sp/>TCP_KEEPCNT<sp/><sp/><sp/><sp/>0x05</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_TCP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_UDP<sp/>&amp;&amp;<sp/>LWIP_UDPLITE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>Options<sp/>for<sp/>level<sp/>IPPROTO_UDPLITE</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor">#define<sp/>UDPLITE_SEND_CSCOV<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor">#define<sp/>UDPLITE_RECV_CSCOV<sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_UDP<sp/>&amp;&amp;<sp/>LWIP_UDPLITE*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>Options<sp/>and<sp/>types<sp/>for<sp/>UDP<sp/>multicast<sp/>traffic<sp/>handling</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="240" refid="wm__sockets_8h_1a924b1653500b7d3bf1bcef96a1a28431" refkind="member"><highlight class="preprocessor">#define<sp/>IP_ADD_MEMBERSHIP<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="wm__sockets_8h_1ad9e530e8ee1d2a001717d40d3aa26618" refkind="member"><highlight class="preprocessor">#define<sp/>IP_DROP_MEMBERSHIP<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="wm__sockets_8h_1abf2be8a26ec89482c3c440028aacc523" refkind="member"><highlight class="preprocessor">#define<sp/>IP_MULTICAST_TTL<sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="wm__sockets_8h_1a95ac9ecdbd7845274e20667d3b42cd00" refkind="member"><highlight class="preprocessor">#define<sp/>IP_MULTICAST_IF<sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="wm__sockets_8h_1a5481dc4543c45fa31bf769119057a259" refkind="member"><highlight class="preprocessor">#define<sp/>IP_MULTICAST_LOOP<sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="structip__mreq" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structip__mreq" kindref="compound">ip_mreq</ref><sp/>{</highlight></codeline>
<codeline lineno="252" refid="structip__mreq_1ab8bbc939fa8e4c7d2e0a5486aa294be4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__address" kindref="compound">in_address</ref><sp/>imr_multiaddr;<sp/></highlight></codeline>
<codeline lineno="253" refid="structip__mreq_1a035e3c13b292fd67c1c35ec3c5ff4fc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structin__address" kindref="compound">in_address</ref><sp/>imr_interface;<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}<sp/><ref refid="wm__sockets_8h_1aa4d37763f8765fcd6df959b08d738c14" kindref="member">ip_mreq</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_IGMP<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>The<sp/>Type<sp/>of<sp/>Service<sp/>provides<sp/>an<sp/>indication<sp/>of<sp/>the<sp/>abstract</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>parameters<sp/>of<sp/>the<sp/>quality<sp/>of<sp/>service<sp/>desired.<sp/><sp/>These<sp/>parameters<sp/>are</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>to<sp/>be<sp/>used<sp/>to<sp/>guide<sp/>the<sp/>selection<sp/>of<sp/>the<sp/>actual<sp/>service<sp/>parameters</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>when<sp/>transmitting<sp/>a<sp/>datagram<sp/>through<sp/>a<sp/>particular<sp/>network.<sp/><sp/>Several</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>networks<sp/>offer<sp/>service<sp/>precedence,<sp/>which<sp/>somehow<sp/>treats<sp/>high</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>precedence<sp/>traffic<sp/>as<sp/>more<sp/>important<sp/>than<sp/>other<sp/>traffic<sp/>(generally</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>by<sp/>accepting<sp/>only<sp/>traffic<sp/>above<sp/>a<sp/>certain<sp/>precedence<sp/>at<sp/>time<sp/>of<sp/>high</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>load).<sp/><sp/>The<sp/>major<sp/>choice<sp/>is<sp/>a<sp/>three<sp/>way<sp/>tradeoff<sp/>between<sp/>low-delay,</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>high-reliability,<sp/>and<sp/>high-throughput.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>The<sp/>use<sp/>of<sp/>the<sp/>Delay,<sp/>Throughput,<sp/>and<sp/>Reliability<sp/>indications<sp/>may</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>increase<sp/>the<sp/>cost<sp/>(in<sp/>some<sp/>sense)<sp/>of<sp/>the<sp/>service.<sp/><sp/>In<sp/>many<sp/>networks</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>better<sp/>performance<sp/>for<sp/>one<sp/>of<sp/>these<sp/>parameters<sp/>is<sp/>coupled<sp/>with<sp/>worse</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>performance<sp/>on<sp/>another.<sp/><sp/>Except<sp/>for<sp/>very<sp/>unusual<sp/>cases<sp/>at<sp/>most<sp/>two</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>of<sp/>these<sp/>three<sp/>indications<sp/>should<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_TOS_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_TOS(tos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tos)<sp/>&amp;<sp/>IPTOS_TOS_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_LOWDELAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_THROUGHPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_RELIABILITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_LOWCOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_MINCOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPTOS_LOWCOST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>The<sp/>Network<sp/>Control<sp/>precedence<sp/>designation<sp/>is<sp/>intended<sp/>to<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>within<sp/>a<sp/>network<sp/>only.<sp/><sp/>The<sp/>actual<sp/>use<sp/>and<sp/>control<sp/>of<sp/>that</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>designation<sp/>is<sp/>up<sp/>to<sp/>each<sp/>network.<sp/>The<sp/>Internetwork<sp/>Control</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>designation<sp/>is<sp/>intended<sp/>for<sp/>use<sp/>by<sp/>gateway<sp/>control<sp/>originators<sp/>only.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>actual<sp/>use<sp/>of<sp/>these<sp/>precedence<sp/>designations<sp/>is<sp/>of<sp/>concern<sp/>to</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>a<sp/>particular<sp/>network,<sp/>it<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>that<sp/>network<sp/>to</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>control<sp/>the<sp/>access<sp/>to,<sp/>and<sp/>use<sp/>of,<sp/>those<sp/>precedence<sp/>designations.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC(tos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tos)<sp/>&amp;<sp/>IPTOS_PREC_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_NETCONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_INTERNETCONTROL<sp/><sp/><sp/><sp/><sp/><sp/>0xc0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_CRITIC_ECP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xa0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_FLASHOVERRIDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_FLASH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_IMMEDIATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_PRIORITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPTOS_PREC_ROUTINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>Commands<sp/>for<sp/>ioctlsocket(),<sp/><sp/>taken<sp/>from<sp/>the<sp/>BSD<sp/>file<sp/>fcntl.h.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>lwip_ioctl<sp/>only<sp/>supports<sp/>FIONREAD<sp/>and<sp/>FIONBIO,<sp/>for<sp/>now</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>Ioctl&apos;s<sp/>have<sp/>the<sp/>command<sp/>encoded<sp/>in<sp/>the<sp/>lower<sp/>word,</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>size<sp/>of<sp/>any<sp/>in<sp/>or<sp/>out<sp/>parameters<sp/>in<sp/>the<sp/>upper</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>word.<sp/><sp/>The<sp/>high<sp/>2<sp/>bits<sp/>of<sp/>the<sp/>upper<sp/>word<sp/>are<sp/>used</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>to<sp/>encode<sp/>the<sp/>in/out<sp/>status<sp/>of<sp/>the<sp/>parameter;<sp/>for<sp/>now</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>we<sp/>restrict<sp/>parameters<sp/>to<sp/>at<sp/>most<sp/>128<sp/>bytes.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(FIONREAD)<sp/>||<sp/>!defined(FIONBIO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="wm__sockets_8h_1a12085624b18c53c98d676ef97d617292" refkind="member"><highlight class="preprocessor">#define<sp/>IOCPARM_MASK<sp/><sp/><sp/><sp/>0x7fU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="wm__sockets_8h_1a7871c80cdb00b01cc72dc287259a5986" refkind="member"><highlight class="preprocessor">#define<sp/>IOC_VOID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20000000UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="wm__sockets_8h_1aefe531e01b900d7ec9446d8a72060870" refkind="member"><highlight class="preprocessor">#define<sp/>IOC_OUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40000000UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="wm__sockets_8h_1af941c6f2773d4304f947706d53fb9873" refkind="member"><highlight class="preprocessor">#define<sp/>IOC_IN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IOC_INOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOC_IN|IOC_OUT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0x20000000<sp/>distinguishes<sp/>new<sp/>&amp;</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>ioctl&apos;s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IO(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IOC_VOID|((x)&lt;&lt;8)|(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IOR(x,y,t)<sp/><sp/><sp/><sp/><sp/>(IOC_OUT|(((long)sizeof(t)&amp;IOCPARM_MASK)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IOW(x,y,t)<sp/><sp/><sp/><sp/><sp/>(IOC_IN|(((long)sizeof(t)&amp;IOCPARM_MASK)&lt;&lt;16)|((x)&lt;&lt;8)|(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!defined(FIONREAD)<sp/>||<sp/>!defined(FIONBIO)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FIONREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="wm__sockets_8h_1ac68826c621a12d91544dab200c86c75a" refkind="member"><highlight class="preprocessor">#define<sp/>FIONREAD<sp/><sp/><sp/><sp/>_IOR(&apos;f&apos;,<sp/>127,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FIONBIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="wm__sockets_8h_1af48a6e38eb0ae226621514b44b9844eb" refkind="member"><highlight class="preprocessor">#define<sp/>FIONBIO<sp/><sp/><sp/><sp/><sp/>_IOW(&apos;f&apos;,<sp/>126,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Socket<sp/>I/O<sp/>Controls:<sp/>unimplemented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIOCSHIWAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="wm__sockets_8h_1a3b5746c83986d00d3c9a4463e2007bba" refkind="member"><highlight class="preprocessor">#define<sp/>SIOCSHIWAT<sp/><sp/>_IOW(&apos;s&apos;,<sp/><sp/>0,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="wm__sockets_8h_1a33801b5543b9cfe57f0c92dee4804a7e" refkind="member"><highlight class="preprocessor">#define<sp/>SIOCGHIWAT<sp/><sp/>_IOR(&apos;s&apos;,<sp/><sp/>1,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="wm__sockets_8h_1acb393c38894038301db96869f117a740" refkind="member"><highlight class="preprocessor">#define<sp/>SIOCSLOWAT<sp/><sp/>_IOW(&apos;s&apos;,<sp/><sp/>2,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="wm__sockets_8h_1accc098bc6021029c25a91f453d5d1724" refkind="member"><highlight class="preprocessor">#define<sp/>SIOCGLOWAT<sp/><sp/>_IOR(&apos;s&apos;,<sp/><sp/>3,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="wm__sockets_8h_1a0d3de9033c4baa7dba2387516e4ba40f" refkind="member"><highlight class="preprocessor">#define<sp/>SIOCATMARK<sp/><sp/>_IOR(&apos;s&apos;,<sp/><sp/>7,<sp/>unsigned<sp/>long)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>commands<sp/>for<sp/>fnctl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>F_GETFL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_GETFL<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>F_SETFL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_SETFL<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>status<sp/>flags<sp/>and<sp/>file<sp/>access<sp/>modes<sp/>for<sp/>fnctl,</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/>these<sp/>are<sp/>bits<sp/>in<sp/>an<sp/>int.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>O_NONBLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="wm__sockets_8h_1a39d33ce33804efd4d52606d59071c6d8" refkind="member"><highlight class="preprocessor">#define<sp/>O_NONBLOCK<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>O_NDELAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="wm__sockets_8h_1a63ba256ec18f373817941d5a4d0e2d5e" refkind="member"><highlight class="preprocessor">#define<sp/>O_NDELAY<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHUT_RD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="wm__sockets_8h_1af1c8cf84ac37451afaef3bde9976b6e1" refkind="member"><highlight class="preprocessor">#define<sp/>SHUT_RD<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="wm__sockets_8h_1addb0a758e6fafdd89f5b7120f84738eb" refkind="member"><highlight class="preprocessor">#define<sp/>SHUT_WR<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="wm__sockets_8h_1a80c54d1399557c97a0c81a319d08e9db" refkind="member"><highlight class="preprocessor">#define<sp/>SHUT_RDWR<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FD_SET<sp/>used<sp/>for<sp/>lwip_select<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FD_SET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/><sp/>FD_SETSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>FD_SETSIZE<sp/>match<sp/>NUM_SOCKETS<sp/>in<sp/>socket.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FD_SETSIZE<sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FD_SET(n,<sp/>p)<sp/><sp/>((p)-&gt;fd_bits[(n)/8]<sp/>|=<sp/><sp/>(1<sp/>&lt;&lt;<sp/>((n)<sp/>&amp;<sp/>7)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FD_CLR(n,<sp/>p)<sp/><sp/>((p)-&gt;fd_bits[(n)/8]<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>((n)<sp/>&amp;<sp/>7)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FD_ISSET(n,p)<sp/>((p)-&gt;fd_bits[(n)/8]<sp/>&amp;<sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>((n)<sp/>&amp;<sp/>7)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FD_ZERO(p)<sp/><sp/><sp/><sp/>memset((void*)(p),0,sizeof(*(p)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="structfd__set" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fd_bits<sp/>[(<ref refid="wm__sockets2_80_83_8h_1a86c5dbf5a99358e288f573d6a1e0873f" kindref="member">FD_SETSIZE</ref>+7)/8];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FD_SET<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor">#ifndef<sp/>LWIP_TIMEVAL_PRIVATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="wm__sockets_8h_1aaffd64f6887883ec6401e6bb684c40fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWIP_TIMEVAL_PRIVATE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LWIP_TIMEVAL_PRIVATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="structtimeval" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>{</highlight></codeline>
<codeline lineno="408" refid="structtimeval_1a3599199839a89e99a2ce29d45312b5cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimeval_1a3599199839a89e99a2ce29d45312b5cf" kindref="member">tv_sec</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409" refid="structtimeval_1aa8396731f2914f9ed2a457d3da602b80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimeval_1aa8396731f2914f9ed2a457d3da602b80" kindref="member">tv_usec</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal">};</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWIP_TIMEVAL_PRIVATE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ip_addr_get_ip4_u32(ipaddr)<sp/><sp/><sp/><sp/>((ipaddr)-&gt;addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gaaaf2f15c3d464ebd84caabb51920c4bc" kindref="member">accept</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*addr,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*addrlen);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga8dca0ad474f0bb98c58283c151d6e2e2" kindref="member">bind</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>namelen);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga8744a596bc9132c457bcce518fb854dd" kindref="member">shutdown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gacb704989306fb22b3586d14661a3f990" kindref="member">closesocket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga30a78fb09c5f8eb192eb9da70babda64" kindref="member">connect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>namelen);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga7bafa2b03fec4e2d4e7492269b262975" kindref="member">getsockname</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*namelen);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga4f016ffafb303902b981988fdc675940" kindref="member">getpeername</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*name,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*namelen);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga3437a49823cdfa961c994aaaf661bd36" kindref="member">setsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>optlen);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gaad5e3dc6d10cb45c3d98038a5733980c" kindref="member">getsockopt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optname,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*optval,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*optlen);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gadd5137ee4523809b8e087345ff5dae6f" kindref="member">listen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backlog);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gac98728e53b98f1b22474f48ce6658749" kindref="member">recv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga0add4d77d9f1142e0256df85c5c4d992" kindref="member">recvfrom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*from,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>*fromlen);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gab4a2874617ed0d46a44b0da20b3850d0" kindref="member">send</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga7d0859ad197b472a5fd930872dab8763" kindref="member">sendto</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsockaddr" kindref="compound">sockaddr</ref><sp/>*to,<sp/><ref refid="wm__sockets_8h_1aae83a93236e01902b58ec3f197a17f7c" kindref="member">socklen_t</ref><sp/>tolen);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gaf4e0711877c45a41168ac677b0670ccd" kindref="member">socket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga7697c5e2abe442fee5267ff362eff0b5" kindref="member">select</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxfdp1,<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>*readset,<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>*writeset,<sp/><ref refid="structfd__set" kindref="compound">fd_set</ref><sp/>*exceptset,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>*timeout);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga42742239f95827a7a86461d4ddaa3d47" kindref="member">ioctlsocket</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argp);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhostent" kindref="compound">hostent</ref>*<sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga636674bf9937205b85a797ee6077faa9" kindref="member">gethostbyname</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">u32<sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1ga689de871afcb769240f7bf9f0d72b9a3" kindref="member">ipaddr_addr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group___s_o_c_k_e_t___a_p_is_1gace12d28aef35bb15962e8563aea571b1" kindref="member">ipaddr_ntoa</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structip__addr" kindref="compound">ip_addr_t</ref><sp/>*addr);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor">#ifdef<sp/>htonl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>htonl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>htonl<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ntohl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ntohl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ntohl<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>htons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>htons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>htons<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ntohs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ntohs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ntohs<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="wm__sockets_8h_1ab7fffd06ef1d1a7d34f99eedbb9f44dd" refkind="member"><highlight class="preprocessor">#define<sp/>htons(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((n)<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(((n)<sp/>&amp;<sp/>0xff00)<sp/>&gt;&gt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="wm__sockets_8h_1af8185bfc3e242e1460a6d7de5320a875" refkind="member"><highlight class="preprocessor">#define<sp/>htonl(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((n)<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>24)<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(((n)<sp/>&amp;<sp/>0xff00)<sp/>&lt;&lt;<sp/>8)<sp/>|\</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((n)<sp/>&amp;<sp/>0xff0000UL)<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>(((n)<sp/>&amp;<sp/>0xff000000UL)<sp/>&gt;&gt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="wm__sockets_8h_1ac095315f785966b573a80cf7502b654f" refkind="member"><highlight class="preprocessor">#define<sp/>ntohs(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htons(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="wm__sockets_8h_1ad1e59c7e2db1fdf26e5a3c4250af3e7f" refkind="member"><highlight class="preprocessor">#define<sp/>ntohl(n)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htonl(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="wm__sockets_8h_1a32caf20405b8659c07758352746c4331" refkind="member"><highlight class="preprocessor">#define<sp/>ip4_addr1(ipaddr)<sp/>(((u8*)(ipaddr))[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="wm__sockets_8h_1aee091caef24dd1705876bb8dbe28035c" refkind="member"><highlight class="preprocessor">#define<sp/>ip4_addr2(ipaddr)<sp/>(((u8*)(ipaddr))[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="wm__sockets_8h_1aead691bee580ea8111b70e67cf971c40" refkind="member"><highlight class="preprocessor">#define<sp/>ip4_addr3(ipaddr)<sp/>(((u8*)(ipaddr))[2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="wm__sockets_8h_1a78cbf5c1fd832f909f755c4cc9036f02" refkind="member"><highlight class="preprocessor">#define<sp/>ip4_addr4(ipaddr)<sp/>(((u8*)(ipaddr))[3])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="wm__sockets_8h_1ab89a604cf190369ce8bdc84dcb5d59aa" refkind="member"><highlight class="preprocessor">#define<sp/>inet_ntoa(addr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipaddr_ntoa((ip_addr_t*)&amp;(addr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Include/Net/wm_sockets.h"/>
  </compounddef>
</doxygen>
